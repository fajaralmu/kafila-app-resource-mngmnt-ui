{"version":3,"sources":["settings.ts","utils/eventUtil.ts","constants/DialogType.ts","services/RoutingService.ts","models/BaseModel.ts","pages/ControlledComponent.tsx","services/AuthService.ts","services/ToastService.ts","utils/cookieUtil.ts","utils/restApiUtil.ts","models/User.ts","apiClients/RestClient.ts","services/MasterDataService.ts","components/dialog/DialogPrompt.tsx","services/DialogService.tsx","services/LoadingService.ts","services/ClassMemberService.ts","services/FileUploadService.ts","services/EventService.ts","inversify.config.ts","reportWebVitals.ts","components/buttons/ActionButton.tsx","layout/ViewTemplate.tsx","models/BaseState.ts","models/MasterDataResult.ts","models/BaseMasterDataState.ts","models/DataTableHeaderValue.ts","models/Employee.ts","utils/commonWrapper.tsx","utils/stringUtil.ts","pages/BasePage.tsx","components/buttons/AnchorButton.tsx","components/buttons/PaginationButtons.tsx","components/dataTableHeader/DataTableHeader.tsx","pages/admin/masterData/BaseMasterDataPage.tsx","pages/admin/masterData/EmployeesPage.tsx","pages/admin/MainAdminPage.tsx","models/School.ts","pages/admin/masterData/SchoolsPage.tsx","pages/admin/masterData/UsersPage.tsx","components/messages/ErrorMessage.tsx","components/messages/InfoMessage.tsx","utils/componentUtil.tsx","pages/auth/LoginPage.tsx","pages/error/ErrorView.tsx","pages/home/Home.tsx","pages/user/Dashboard.tsx","pages/user/EditProfile.tsx","models/SemesterPeriod.ts","pages/admin/masterData/SemesterPeriodsPage.tsx","models/ClassLevel.ts","models/Student.ts","models/ClassMember.ts","pages/admin/masterData/ClassLevelMembersPage.tsx","pages/admin/masterData/ClassLevelsPage.tsx","pages/admin/masterData/StudentsPage.tsx","pages/admin/masterData/ClassMembersPage.tsx","layout/Routing.tsx","layout/UserSection.tsx","layout/HeaderView.tsx","components/loading/Loading.tsx","components/toast/Toast.tsx","components/toast/ToastContainer.tsx","components/dialog/Dialog.tsx","components/dialog/DialogContainer.tsx","App.tsx","index.tsx"],"names":["Settings","this","_setting","window","appSetting","undefined","invokeLater","callback","intervalMs","timeout","setTimeout","clearTimeout","DialogType","RoutingService","injectable","lastRedirectedRoute","navigateFunction","routeUpdateCallbacks","Map","setLastRedirectedRoute","origin","setNavigate","navigate","url","registerCallback","set","deRegisterCallback","delete","updateRoute","console","debug","forEach","BaseModel","id","ControlledComponent","handleInputChange","e","target","HTMLInputElement","HTMLTextAreaElement","HTMLSelectElement","value","input","state","type","checked","rawName","name","split","obj","key","index","length","setState","el","document","getElementById","focus","Component","LOGIN_URL","App","hosts","api","LOGOUT_URL","LOAD_USER_URL","LOAD_APP_URL","UPDATE_PROFILE_URL","AuthService","inject","RestClient","_loggedUser","_appProfile","_onUserUpdate","_onAppProfileUpdate","addOnUserUpdated","action","removeOnUserUpdated","addOnAppProfileUpdated","removeOnAppProfileUpdated","loadApplication","Promise","resolve","reject","rest","getCommon","then","response","loadUser","catch","loginKeyCookieExist","getAuthorized","handleSuccessLogin","error","updateProfile","user","res","rej","putAuthorized","login","username","password","formData","FormData","append","parameters","axios","post","join","headers","responseJson","data","loginKey","result","err","Error","message","loggedUser","Object","assign","User","setLoginKeyCookie","routing","redirectedRoute","logout","postAuthorized","removeLoginKeyCookie","loggedIn","hasAuthorityType","ToastService","component","setComponent","c","show","mode","duration","setCookie","cname","cvalue","exdays","d","Date","setTime","getTime","expires","toUTCString","cookie","getCookie","ca","decodeURIComponent","i","charAt","substring","indexOf","LOGIN_KEY_NAME","commonAuthorizedHeader","contentType","token","val","getLoginKeyCookie","trim","displayName","fullName","phoneNumber","email","editPassword","authorities","userAuthType","t","birthDate","birthPlace","gender","SUCCESS_CODE","LoadingService","body","postCommon","deleteAuthorized","deleteCommon","putCommon","patchAuthorized","patchCommon","startLoading","loading","stopLoading","expectRefreshToken","code","updateLoginKeyCookie","finally","put","patch","get","API_URL","MasterDataService","model","patchAction","list","page","perPage","order","orderDesc","filter","fieldPaths","displayFieldAliases","orderString","filterToQuery","fieldPathsQuery","displayAliasesToQuery","toQueryParam","params","filters","element","push","State","content","DialogPrompt","props","inputRef","React","createRef","onSubmit","preventDefault","defaultValue","current","ref","onChange","className","required","INVOCATION_WAIT_DELAY","DialogService","container","setContainer","showInfo","title","isShown","INFO","info","showWarning","WARNING","showError","messageContent","toLowerCase","startsWith","dangerouslySetInnerHTML","__html","ERROR","showConfirmDanger","showConfirm","showConfirmWarning","showPrompt","doShowPrompt","showNoButtons","dismissAlert","showContent","_closeObserver","closeObserver","close","obs","createElement","ClassMemberService","getMembers","classLevelId","getActiveClasses","URL_GET_ACTIVE_CLASSES","FileUploadService","uploadSignature","employee","file","toString","EventService","Container","bind","toSelf","inSingletonScope","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ActionButton","disabledProps","disabled","onClick","iconClass","children","ViewTemplate","goBack","back","attributes","style","textAlign","titleAlign","BaseState","busy","MasterDataResult","totalData","limit","items","BaseMasterDataState","item","showForm","DataTableHeaderValue","label","orderable","filterable","adjustLabel","includes","splitByDot","capitalize","toUpperCase","Employee","nisdm","profileImage","noKk","noKtp","addressKtp","addressOther","motherName","fatherName","npwp","bankAccountNumber","educations","schools","photoScan","kkScan","npwpScan","bankAccountScan","signatureFile","active","removeEducation","splice","addSchool","school","warn","removeSchool","Education","major","certificateScan","commonWrapper","routeParams","useParams","doNavigate","useNavigate","routingService","randomString","characters","charactersLength","Math","floor","random","getInputReadableDate","date","getFullYear","twoDigits","getMonth","getDate","BasePage","authorized","initialize","uiSetting","defaultTitle","gotoHomePage","invalidSession","forceUpdate","authService","AnchorButton","to","PaginationButtons","buttonIndexes","generateButtonValues","activePage","lastIndex","nextPage","previusPage","map","currentPage","displayed_buttons","buttonCount","ceil","min","max","DataTableHeader","activeOrder","textColor","isActive","BaseMasterDataPage","load","service","filterParams","assignedItems","defaultItem","onFormSubmit","insert","update","dialog","hideForm","edit","ok","resp","loadCurrentPage","showInsertForm","resetFilter","resetFormAndClose","formEditSubmit","loadFromForm","setItemsOrder","desc","getDataTableHeaderComponent","getDataTableHeaderVals","isOrderDesc","onFilterChange","actionButton","showDelete","listToggler","add","remove","array","defaultLimit","colSpan","FormInputLimit","useState","setLimit","parseInt","EmployeesPage","educationId","addEducation","submitAddEducation","education","schoolId","schoolsResponse","submitAddSchool","showSignatureForm","closeObs","submit","emp","upload","toast","showSuccess","showDanger","closeFormButton","showFormButton","overflow","paginationButton","startingNumber","toLocaleDateString","width","height","src","signaturePath","ed","tableFooter","FormUploadSignature","setFile","File","files","accept","FormEdit","AddEducationForm","AddSchoolForm","selectedSchool","MainAdminPage","managementPages","m","School","nis","address","level","UsersPage","resetPassword","a","toLocaleLowerCase","flexWrap","ErrorMessage","InfoMessage","CommonTable","row","rowKey","col","loginSuccess","log","isAdmin","padding","ErrorView","showTitle","welcomingWords","Home","welcomingWord","_mounted","startDisplayWelcomingWord","isMounted","words","paddingTop","word","WelcomingWord","fontSize","fontWeight","autoComplete","SemesterPeriod","semester","year","direktur","bendahara","pengawasSekolah","headHRD","hearMR","headRnD","headLogistic","headPublicRelation","headLanguage","headMAKafila","headMAKafilaFullday","headMtsKafila","headMtsAlKahfi","headMtsKafilaIbnuMasud","headPesantren","wakabidTahfiz","wakabidAsrama","adminKiis","adminMAKafila","adminMAKafilaFullday","adminMtsAlKahfi","adminMtsKafilaIbnuMasud","adminTahfiz","adminAsrama","pjQurban","pjRamadhan","pjPromosiPSB","pjWebMedia","pjTamuFO","pjAlumni","pjUtsUas","pjEvaluasiPengembanganKurikulum","pjLabKomputer","pjLabIPA","pjLabBahasa","pjBinaPrestasi","pjPerpustakaan","pjBK","pjBahasaArab","pjBahasaInggris","pjUKS","pjOpkiis","pjDKM","pjKesiswaan","pjKurikulum","EmployeeFields","setActive","setEmployeeInCharge","field","employeeCellFields","employeeFields","display","SetEmployeeForm","search","searchEmployee","handleSearchEmployee","employees","closeDropdown","setSelectedEmployee","selectedEmployee","placeholder","position","overflowY","ClassLevel","letter","description","semesterActive","memberCount","Student","nisKiis","nisn","city","province","siblingNum","siblingCount","fatherBirthDate","fatherBirthPlace","fatherEducation","fatherPhoneNumber","fatherOccupation","fatherAddress","fatherIncome","motherBirthDate","motherBirthPlace","motherEducation","motherPhoneNumber","motherOccupation","motherAddress","motherIncome","originSchool","sttbNumber","entranceDate","entranceClass","transferFrom","transferReason","entranceCertificateScore","leaveSchool","leaveReason","educationFinished","graduationDateMts","certificateNumberMts","seniorLevelSchool","graduationDateMa","certificateNumberMa","graduationCeremonyDate","highEducationUniv","highEducationMajor","workDate","workCompany","ClassMember","student","classLevel","ClassLevelMembersPage","loadMembers","members","loadStudents","searchStudent","masterData","students","closeStudentDropdown","addStudent","member","deleteMember","alignItems","showEditMember","showEditMemberForm","closeEditMemberForm","setSchool","loadClasses","classMemberService","handleClassLoaded","classes","masterDataService","handleStudentLoaded","setSelectedStudent","setSelectedClass","submitForm","Routing","path","disabledWhenLoggedIn","requiredRole","RestrictedRouteElement","CustomNavigate","replace","showDropdown","UserSection","hideDropdown","dataset","toggleDropdown","zIndex","activeMenu","searchKey","HeaderView","_user","gotoLoginPage","onUserUpdated","onAppProfileUpdated","brandOnClick","appProfile","margin","semesterInfo","Loading","opacity","outerSize","transitionDuration","xmlns","viewBox","fill","strokeWidth","Toast","onClose","ToastContainer","toastRefs","ToastId","getRef","closeToast","has","reversed","reverse","initialMargin","backColor","marginTop","Backdrop","backgroundColor","bgColor","Footer","yesButton","onConfirm","yesLabel","yesOnly","cancelButton","onCancel","Header","Dialog","focusCancelBtn","stringContent","INFO_NO_BUTTONS","maxWidth","dialogStyle","marginLeft","marginRight","modalDialogClass","headerClassName","maxHeight","DialogContainer","dialogTitle","dialogContent","dialogYesOnly","dialogOnConfirm","dialogOnCancel","onCloseCallback","dialogType","dialogOnClose","resetProps","closeObj","dialogService","ChartJS","register","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","loaded","loadingError","Root","loc","useLocation","currentLocation","global","self","MonacoEnvironment","getWorkerUrl","_moduleId","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.77f0fd57.chunk.js","sourcesContent":["let SettingValues:{\r\n        \r\n  \r\n    uiSetting: {\r\n      \r\n        defaultTitle: string\r\n    },\r\n     \r\n    hosts:{ \r\n        api: string,\r\n      \r\n    }\r\n};\r\ntype SettingsType = typeof SettingValues;\r\n \r\nexport default class Settings {\r\n\r\n    private static _setting:SettingsType|undefined = undefined;\r\n\r\n    public static get App() : SettingsType\r\n    {\r\n        if (this._setting)\r\n        {\r\n            return this._setting;\r\n        }\r\n         \r\n        return this._setting = (window as any).appSetting;\r\n    }\r\n    \r\n}","export const invokeLater = (callback:()=>any, intervalMs:number) => {\r\n    const timeout = setTimeout(()=>{\r\n        callback();\r\n        clearTimeout(timeout);\r\n      }, intervalMs)\r\n}","export enum DialogType {\r\n    INFO, WARNING, ERROR,\r\n    INFO_NO_BUTTONS,\r\n}","import 'reflect-metadata'\nimport { injectable } from \"inversify\";\nimport { NavigateFunction } from \"react-router-dom\";\n\n@injectable()\nexport default class RoutingService {\n    private lastRedirectedRoute?:string;\n    private navigateFunction:NavigateFunction | undefined;\n\n    get redirectedRoute() { return this.lastRedirectedRoute }\n    private readonly routeUpdateCallbacks:Map<string, (url:string)=>any> = new Map();\n\n    constructor()\n    {\n\n    }\n\n    setLastRedirectedRoute = (origin: string) => {\n        this.lastRedirectedRoute = origin;\n    }\n    \n    setNavigate = (navigate: NavigateFunction) => {\n        this.navigateFunction = navigate;\n    }\n    navigate = (url:string) => {\n        if (this.navigateFunction)  \n            this.navigateFunction(url);\n    }\n\n    registerCallback = (origin:string, callback:(url:string)=>any) => {\n        this.routeUpdateCallbacks.set(origin, callback);\n    }\n    deRegisterCallback = (origin:string) => {\n        this.routeUpdateCallbacks.delete(origin);\n    }\n    updateRoute = (url:string) => {\n        console.debug(\"Route changed via call to navigate: \" + url);\n        this.routeUpdateCallbacks.forEach((callback)=>{\n            callback(url);\n        })\n    }\n}","export default class BaseModel {\r\n    public id:number = -1;\r\n}","import React, { ChangeEvent, Component } from \"react\";\r\n\r\nexport default abstract class ControlledComponent<P,S > extends Component<P,S> {\r\n    handleInputChange = (e:ChangeEvent, callback?:(val:any)=>any) => {\r\n        if (e.target instanceof HTMLInputElement || e.target instanceof HTMLTextAreaElement || e.target instanceof HTMLSelectElement)\r\n        {\r\n            const input:HTMLInputElement|HTMLTextAreaElement|HTMLSelectElement = e.target;\r\n            const state = this.state as any;\r\n            const id = input.id;\r\n            if (!state) {\r\n                return;\r\n            }\r\n            let value:any;\r\n            if (input.type === \"number\") {\r\n                value = input.value;\r\n                // try {\r\n                //     value = parseInt(input.value);\r\n                // } catch (e)\r\n                // {\r\n                //     return;\r\n                // }\r\n            }\r\n            else if (input.type === \"checkbox\" && input instanceof HTMLInputElement) {\r\n                value = input.checked;\r\n            }\r\n            else {\r\n                value = input.value;\r\n            }\r\n\r\n            // assign to specific field\r\n           \r\n            const name      = input.name;\r\n            let rawName     = name.split(\".\");\r\n            let obj         = state;\r\n            \r\n            rawName.forEach((key, index) => {\r\n                if (obj && index < rawName.length - 1) {\r\n                    obj = obj[key];\r\n                }\r\n                if ( index === rawName.length - 1 ) {\r\n                    obj[key] = value;\r\n                }\r\n            });\r\n            \r\n            // state[input.name] = value;\r\n            this.setState(state, () => {\r\n                if (id) {\r\n                    const el = document.getElementById(id);\r\n                    if (el) {\r\n                        el.focus();\r\n                    }\r\n                }\r\n                if (callback) {\r\n                    callback(value);\r\n                }\r\n            });\r\n        }\r\n        \r\n    }\r\n}","import { inject, injectable } from \"inversify\";\r\nimport User from \"../models/User\";\r\nimport Settings from './../settings';\r\nimport WebResponse from './../models/WebResponse';\r\nimport axios, { AxiosError, AxiosResponse } from \"axios\";\r\nimport { removeLoginKeyCookie, setLoginKeyCookie, commonAuthorizedHeader, loginKeyCookieExist } from './../utils/restApiUtil';\r\nimport ApplicationProfile from './../models/ApplicationProfile';\r\nimport RestClient from './../apiClients/RestClient';\r\nimport RoutingService from './RoutingService';\r\n\r\n\r\nconst LOGIN_URL     = Settings.App.hosts.api + \"/login\";\r\nconst LOGOUT_URL    = Settings.App.hosts.api + \"/api/user/logout\";\r\nconst LOAD_USER_URL = Settings.App.hosts.api + \"/api/user\";\r\nconst LOAD_APP_URL  = Settings.App.hosts.api + \"/api/public/index\";\r\nconst UPDATE_PROFILE_URL  = Settings.App.hosts.api + \"/api/user/update\";\r\n\r\n@injectable()\r\nexport default class AuthService {\r\n     \r\n    private _loggedUser:User | undefined;\r\n    private _appProfile:ApplicationProfile | undefined;\r\n    private _onUserUpdate:Map<string, (user:User | undefined) =>any> = new Map();\r\n    private _onAppProfileUpdate:Map<string, (val:ApplicationProfile | undefined) =>any> = new Map();\r\n\r\n\r\n    @inject(RestClient)\r\n    private rest:RestClient;\r\n    @inject(RoutingService)\r\n    private routing:RoutingService;\r\n \r\n    get loggedIn() { return this._loggedUser !== undefined; }\r\n\r\n    get loggedUser() { \r\n        return this._loggedUser; \r\n    }\r\n    get isAdmin() { \r\n        let result = this.loggedIn && this.loggedUser?.hasAuthorityType('ROLE_SUPERADMIN') \r\n        return result;\r\n    }\r\n    get appProfile()\r\n    {\r\n        return this._appProfile;\r\n    }\r\n    \r\n    private set loggedUser(value:User | undefined) { \r\n        this._loggedUser = value; \r\n        this._onUserUpdate.forEach(action => action(value))\r\n    }\r\n    private set appProfile(value: ApplicationProfile | undefined) {\r\n        this._appProfile = value;\r\n        this._onAppProfileUpdate.forEach(action => action(value))\r\n    }\r\n\r\n    addOnUserUpdated = (key:string, action:(user:User|undefined) => any) => {\r\n        this._onUserUpdate.set(key, action);\r\n    }\r\n    removeOnUserUpdated = (key:string) => {\r\n        this._onUserUpdate.delete(key);\r\n    }\r\n    addOnAppProfileUpdated = (key:string, action:(val:ApplicationProfile|undefined) => any) => {\r\n        this._onAppProfileUpdate.set(key, action);\r\n    }\r\n    removeOnAppProfileUpdated = (key:string) => {\r\n        this._onAppProfileUpdate.delete(key);\r\n    }\r\n\r\n    loadApplication = () : Promise<ApplicationProfile> => {\r\n        \r\n        return new Promise<ApplicationProfile>((resolve, reject)=>{\r\n            \r\n            this.rest.getCommon<ApplicationProfile>(LOAD_APP_URL, {})\r\n                .then((response)=>{\r\n                    this.loadUser();\r\n                    this._appProfile = response;\r\n                    resolve(response);\r\n                })\r\n                .catch(reject);\r\n        })\r\n    }\r\n\r\n    loadUser = () => {\r\n        if (loginKeyCookieExist())\r\n        {\r\n            this.rest.getAuthorized<User>(LOAD_USER_URL)\r\n                .then((response:User) => {\r\n                    this.handleSuccessLogin(response)\r\n                })\r\n                .catch(console.error)\r\n        }\r\n    }\r\n\r\n    updateProfile = (user:User) : Promise<User> => {\r\n        return new Promise<User>((res, rej) => {\r\n            this.rest.putAuthorized<User>(UPDATE_PROFILE_URL, user)\r\n                .then(user => {\r\n                    this.handleSuccessLogin(user);\r\n                    res(user);\r\n                })\r\n                .catch(rej);\r\n        })\r\n             \r\n    }\r\n\r\n    login = (username: string, password: string): Promise<User> => {\r\n        \r\n        return new Promise<User>((resolve, reject) => {\r\n            \r\n            const formData = new FormData();\r\n            formData.append(\"username\", username);\r\n            formData.append(\"password\", password);\r\n            formData.append(\"transport_type\", \"rest\");\r\n            let parameters = [\r\n                \"username=\"+username,\r\n                \"password=\"+password,\r\n                \"transport_type=rest\"\r\n            ]\r\n            axios.post(LOGIN_URL, parameters.join(\"&\"), {\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' }\r\n            }).then((response: AxiosResponse) => {\r\n\r\n                const responseJson:WebResponse<User>    = response.data;\r\n                const loginKey                          = response.headers['access-token'];\r\n                \r\n                this.handleSuccessLogin(responseJson.result, loginKey);\r\n                resolve(responseJson.result);\r\n            }).catch((err:AxiosError) =>{\r\n                reject(err.response?.data ?? new Error(err.message))\r\n            });\r\n        });\r\n    }\r\n\r\n    handleSuccessLogin = (user:User, loginKey?:string) => {\r\n        this.loggedUser = Object.assign(new User, user);\r\n        if (loginKey)\r\n        {\r\n            setLoginKeyCookie(loginKey);\r\n        }\r\n        if (this.routing.redirectedRoute)\r\n        {\r\n            this.routing.navigate(this.routing.redirectedRoute);\r\n        }\r\n    }\r\n\r\n    logout = () => {\r\n        this.loggedUser = undefined;\r\n        this.rest.postAuthorized(LOGOUT_URL, {}).then(response => {    \r\n            removeLoginKeyCookie();\r\n        }).catch(console.error);\r\n    }\r\n}","import { injectable } from \"inversify\";\nimport ToastComponent from './../interfaces/ToastComponent';\nimport ToastMode from './../constants/ToastMode';\n\n@injectable()\nexport default class ToastService {\n    private component: ToastComponent | undefined;\n    setComponent = (c: ToastComponent) => {\n        this.component = c;\n    }\n    showInfo(message:string, duration = 5000) {\n        this.show(message, 'info', duration);\n    }\n    showPrimary(message:string, duration = 5000) {\n        this.show(message, 'primary', duration);\n    }\n    showWarning(message:string, duration = 5000) {\n        this.show(message, 'warning', duration);\n    }\n    showDanger(message:string, duration = 5000) {\n        this.show(message, 'danger', duration);\n    }\n    showSuccess(message:string, duration = 5000) {\n        this.show(message, 'success', duration);\n    }\n    show = (message:string, mode:ToastMode, duration = 5000) => {\n        this.component?.show(message, mode, duration);\n    }\n}","\nexport const removeCookie = (cname:string) => {\n    setCookie(cname, null, 0);\n}\n \nexport const setCookie = function (cname:string, cvalue:string | null, exdays=1) {\n    var d = new Date();\n    d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));\n    var expires = \"expires=\" + d.toUTCString();\n    document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\n}\nexport const getCookie = function (cname:string) {\n    var name = cname + \"=\";\n    var decodedCookie = decodeURIComponent(document.cookie);\n    var ca = decodedCookie.split(';');\n    for (var i = 0; i < ca.length; i++) {\n        var c = ca[i];\n        while (c.charAt(0) === ' ') {\n            c = c.substring(1);\n        }\n        if (c.indexOf(name) === 0) {\n            return c.substring(name.length, c.length);\n        }\n    }\n    return \"\";\n}","\nimport { getCookie, setCookie, removeCookie } from './cookieUtil';\nconst LOGIN_KEY_NAME = \"kado-in-login-token\"\n\nexport const commonAuthorizedHeader = (contentType:string = 'application/json') => {\n    return {\n        'Content-Type': contentType,\n        'requestId': \"ABCD\",// getRequestId(),//'localStorage.getItem(\"requestId\")',\n        'Authorization': 'Bearer '+getCookie(LOGIN_KEY_NAME)\n    }\n};\nexport const commonHeader = (contentType:string = 'application/json') => {\n    return {\n        'Content-Type': contentType,\n        // 'requestId': getRequestId(), \n    }\n};\nexport const removeLoginKeyCookie = () => {\n    removeCookie(LOGIN_KEY_NAME);\n}\nexport const setLoginKeyCookie =  (token:string) => {\n    setCookie(LOGIN_KEY_NAME, token);\n}\nexport const loginKeyCookieExist = () => {\n    const val:string = getLoginKeyCookie();\n    return val !== undefined && val !== null && val.trim() !== \"\";\n}\nexport const getLoginKeyCookie = () => {\n    return getCookie(LOGIN_KEY_NAME);\n}\n","\r\nimport AuthorityType from '../constants/AuthorityType';\r\nimport BaseModel from './BaseModel';\r\nexport default class User extends BaseModel {\r\n    username: string;\r\n    displayName: string;\r\n    fullName: string;\r\n    phoneNumber: string;\r\n    email: string;\r\n    editPassword: string;\r\n    authorities: Authority[];\r\n\r\n    hasAuthorityType = (type:AuthorityType | AuthorityType[]) => {\r\n        if (this.authorities)\r\n        {\r\n            for (let i = 0; i < this.authorities.length; i++) {\r\n                const userAuthType = this.authorities[i];\r\n                if (typeof type === 'string') {\r\n                    if (userAuthType.name === type) {\r\n                        return true;\r\n                    }\r\n                } else {\r\n                    for (let t = 0; t < type.length; t++) {\r\n                        const item = type[t];\r\n                        if (item === userAuthType.name) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    birthDate: string;\r\n    birthPlace: string;\r\n    gender: 'MALE' | 'FEMALE' = 'MALE';\r\n\r\n}\r\n\r\nclass Authority {\r\n    name: AuthorityType;\r\n}","import axios, { AxiosError, AxiosResponse } from \"axios\";\nimport { inject, injectable } from \"inversify\";\nimport { commonAuthorizedHeader, setLoginKeyCookie } from \"../utils/restApiUtil\";\nimport LoadingService from './../services/LoadingService';\n\nconst SUCCESS_CODE = \"00\";\n\n@injectable()\nexport default class RestClient {\n    @inject(LoadingService)\n    private loading: LoadingService;\n\n    postAuthorized = <T>(url:string, body:any, contentType='application/json') : Promise<T> => {\n        return this.postCommon(url, body, commonAuthorizedHeader(contentType), true);\n    }\n    deleteAuthorized = <T>(url:string, contentType='application/json') : Promise<T> => {\n        return this.deleteCommon(url, commonAuthorizedHeader(contentType), true);\n    }\n    putAuthorized = <T>(url:string, body:any, contentType='application/json') : Promise<T> => {\n        return this.putCommon(url, body, commonAuthorizedHeader(contentType), true);\n    }\n    patchAuthorized = <T>(url:string, body:any, contentType='application/json') : Promise<T> => {\n        return this.patchCommon(url, body, commonAuthorizedHeader(contentType), true);\n    }\n    \n    startLoading = () => this.loading.startLoading();\n    stopLoading = () => this.loading.stopLoading();\n\n    postCommon = <T>(url:string, body:any, headers:any, expectRefreshToken = false) : Promise<T> => {\n        return new Promise<T>((resolve, reject) => {\n            this.startLoading();\n           \n            axios.post(url, body, {\n                headers: { ...headers }\n            }).then((response: AxiosResponse) => {\n                if (!response.data)\n                {\n                    reject(new Error(\"Invalid response data\"));\n                    return;\n                }\n                if (response.data.code !== SUCCESS_CODE) {\n                    reject(response.data);\n                    return;\n                }\n                if (expectRefreshToken)\n                {\n                    this.updateLoginKeyCookie(response);\n                }\n                resolve(response.data.result);\n            }).catch((err:AxiosError) =>{\n                reject(err.response?.data ?? new Error(err.message))\n            }).finally(this.stopLoading)\n        });\n    }\n\n    updateLoginKeyCookie = (response:AxiosResponse) => {\n        if (response.headers[\"access-token\"] && response.headers[\"access-token\"] !== \"\")\n        {\n            setLoginKeyCookie(response.headers['access-token']);\n        }\n    }\n    putCommon = <T>(url:string, body:any, headers:any, expectRefreshToken = false) : Promise<T> => {\n        return new Promise<T>((resolve, reject) => {\n            this.startLoading();\n            axios.put(url, body, {\n                headers: { ...headers }\n            }).then((response: AxiosResponse) => {\n                if (!response.data)\n                {\n                    reject(new Error(\"Invalid response data\"));\n                    return;\n                }\n                if (response.data.code !== SUCCESS_CODE) {\n                    reject(response.data);\n                    return;\n                }\n                if (expectRefreshToken)\n                {\n                    this.updateLoginKeyCookie(response);\n                }\n                resolve(response.data.result);\n            }).catch((err:AxiosError) =>{\n                reject(err.response?.data ?? new Error(err.message))\n            }).finally(this.stopLoading);\n        });\n    }\n    patchCommon = <T>(url:string, body:any, headers:any, expectRefreshToken = false) : Promise<T> => {\n        return new Promise<T>((resolve, reject) => {\n            this.startLoading();\n            axios.patch(url, body, {\n                headers: { ...headers }\n            }).then((response: AxiosResponse) => {\n                if (!response.data)\n                {\n                    reject(new Error(\"Invalid response data\"));\n                    return;\n                }\n                if (response.data.code !== SUCCESS_CODE) {\n                    reject(response.data);\n                    return;\n                }\n                if (expectRefreshToken)\n                {\n                    this.updateLoginKeyCookie(response);\n                }\n                resolve(response.data.result);\n            }).catch((err:AxiosError) =>{\n                reject(err.response?.data ?? new Error(err.message))\n            })\n            .finally(this.stopLoading);\n        });\n    }\n    private deleteCommon = <T>(url:string, headers:any, expectRefreshToken = false) : Promise<T> => {\n        return new Promise<T>((resolve, reject) => {\n            \n            this.startLoading();\n            axios.delete(url,{\n                headers: { ...headers }\n            }).then((response: AxiosResponse) => {\n                if (!response.data)\n                {\n                    reject(new Error(\"Invalid response data\"));\n                    return;\n                }\n                if (response.data.code !== SUCCESS_CODE) {\n                    reject(response.data);\n                    return;\n                }\n                if (expectRefreshToken)\n                {\n                    this.updateLoginKeyCookie(response);\n                }\n                resolve(response.data.result);\n            }).catch((err:AxiosError) =>{\n                reject(err.response?.data ?? new Error(err.message))\n            })\n            .finally(this.stopLoading);\n        });\n    }\n\n    getAuthorized = <T>(url:string) : Promise<T> => {\n        return this.getCommon(url, commonAuthorizedHeader(), true);\n    }\n    getCommon = <T>(url:string, headers:any, expectRefreshToken = false) : Promise<T> => {\n        return new Promise<T>((resolve, reject)=>{\n            this.startLoading();\n            axios.get(url, { headers: {\n                ...headers\n            } })\n                .then((response:AxiosResponse)=>{\n                    if (!response.data) {\n                        reject(new Error(\"Invalid response data\"));\n                        return;\n                    }\n                    if (response.data.code !== SUCCESS_CODE) {\n                        reject(response.data);\n                        return;\n                    }\n                    if (expectRefreshToken)\n                    {\n                        this.updateLoginKeyCookie(response);\n                    }\n                    resolve(response.data.result);\n                })\n                .catch((err:AxiosError)=>{\n                    reject(err.response?.data ?? new Error(err.message))\n                })\n                .finally(this.stopLoading);\n        })\n    }\n}","import { inject, injectable } from \"inversify\";\nimport ModelNames from \"../constants/ModelNames\";\nimport BaseModel from \"../models/BaseModel\";\nimport MasterDataResult from \"../models/MasterDataResult\";\nimport RestClient from './../apiClients/RestClient';\nimport Settings from './../settings';\n\n\nconst API_URL = Settings.App.hosts.api +\"/api/admin/management/\";\n\n@injectable()\nexport default class MasterDataService {\n    @inject(RestClient)\n    private rest:RestClient;\n    \n    get = <T extends BaseModel>(name: ModelNames, id:number): Promise<T> => {\n        \n        const url = `${API_URL}${name}/${id}`;\n        return this.rest.getAuthorized(url);\n    }\n    post = <T extends BaseModel>(name: ModelNames, model:T): Promise<T> => {\n\n        const url = `${API_URL}${name}`;\n        return this.rest.postAuthorized(url, model);\n    }\n    put = <T extends BaseModel>(name: ModelNames, id:number, model:T): Promise<T> => {\n\n        const url = `${API_URL}${name}/${id}`;\n        return this.rest.putAuthorized(url, model);\n    }\n    patchAction = <T extends BaseModel>(name: ModelNames, id:number, action:string): Promise<T> => {\n\n        const url = `${API_URL}${name}/${id}?action=${action}`;\n        return this.rest.patchAuthorized(url, {});\n    }\n    delete = <T extends BaseModel>(name: ModelNames, id:number): Promise<T> => {\n\n        const url = `${API_URL}${name}/${id}`;\n        return this.rest.deleteAuthorized(url);\n    }\n    list = <T extends BaseModel>(\n        name: ModelNames, \n        page:number, \n        perPage:number,\n        order:string|undefined = 'id',\n        orderDesc?:boolean,\n        filter?:string[] | string,\n        fieldPaths?:string[] | string,\n        displayFieldAliases?:string[] | string\n    ): Promise<MasterDataResult<T>> => {\n        let orderString = '';\n        if (order)\n        {\n            orderString = '&order='+order;\n            if (orderDesc === true)\n            {\n                orderString += '&orderDesc=true'\n            }\n        }\n        const url = `${API_URL}${name}?` +\n                    `page=${page}&` +\n                    `limit=${perPage}` + \n                    orderString +\n                    (filter? filterToQuery(filter) : '' ) +\n                    (fieldPaths? fieldPathsQuery(fieldPaths) : '') +\n                    (displayFieldAliases? displayAliasesToQuery(displayFieldAliases) : '');\n        return this.rest.getAuthorized(url);\n    }\n}\nconst displayAliasesToQuery = (displayFieldAliases?: string[] | string) => {\n    return toQueryParam('displayFieldAliases', displayFieldAliases);\n}\nconst fieldPathsQuery = (fieldPaths?: string[] | string) => {\n    return toQueryParam('fieldPaths', fieldPaths);\n}\nconst filterToQuery = (filter?: string[] | string) => {\n    return toQueryParam('filter', filter);\n}\nconst toQueryParam = (key:string, params?: string[] | string) => {\n    if (!params || params.length == 0) {\n        return '';\n    }\n    if (typeof params === 'string') {\n        return `&${key}=${params}`;\n    }\n    const filters = [];\n    for (let i = 0; i < params.length; i++) {\n        const element = params[i];\n        filters.push(`${key}=${element}`);\n    }\n    return '&' + filters.join('&');\n}\n","import React, { ChangeEvent, FormEvent, ReactNode } from \"react\";\r\nimport ControlledComponent from \"../../pages/ControlledComponent\";\r\n\r\nclass State  {\r\n    content:string = \"\";\r\n}\r\ninterface Props  {\r\n    message:string,\r\n    defaultValue?:string,\r\n    onSubmit:(val:string)=>any\r\n}\r\nexport default class DialogPrompt extends ControlledComponent<Props, State> {\r\n    state: State = new State();\r\n    inputRef: React.RefObject<HTMLInputElement> = React.createRef();\r\n\r\n    constructor(props:Props)\r\n    {\r\n        super(props);\r\n        if (props.defaultValue)\r\n        {\r\n            this.state.content = props.defaultValue;\r\n        }\r\n    }\r\n\r\n    onSubmit = (e:FormEvent) => {\r\n        e.preventDefault();\r\n        this.props.onSubmit(this.state.content);\r\n    }\r\n    componentDidMount()\r\n    {\r\n        if (this.inputRef.current)\r\n        {\r\n            this.inputRef.current.focus();\r\n        }\r\n    }\r\n    render(): ReactNode {\r\n        \r\n        return (\r\n            <div>\r\n                <h5>{this.props.message}</h5>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <input \r\n                        ref={this.inputRef}\r\n                        name=\"content\"\r\n                        value={this.state.content}\r\n                        onChange={this.handleInputChange}\r\n                        className=\"form-control mb-3\" required />\r\n                    <input \r\n                        type=\"submit\" \r\n                        className=\"btn btn-primary\" \r\n                        value={\"Ok\"} />\r\n                    \r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}","import { injectable } from \"inversify\";\r\nimport { Component, createElement, ReactElement } from \"react\";\r\nimport \"reflect-metadata\";\r\nimport DialogContainer from \"../components/dialog/DialogContainer\";\r\nimport DialogPrompt from \"../components/dialog/DialogPrompt\";\r\nimport { DialogType } from \"../constants/DialogType\";\r\nimport { invokeLater } from \"../utils/eventUtil\";\r\n\r\n// ms\r\nconst INVOCATION_WAIT_DELAY = 500;\r\n\r\n@injectable()\r\nexport default class DialogService {\r\n    private container: DialogContainer;\r\n    public setContainer = (container:DialogContainer) => {\r\n        this.container = container;\r\n    }\r\n    public showInfo = (title:string, message:string) => {\r\n        if (this.container.isShown)\r\n        {\r\n            invokeLater(()=>{\r\n                this.showInfo(title, message)\r\n            }, INVOCATION_WAIT_DELAY);\r\n            return;\r\n        }\r\n        this.container.show(\r\n            DialogType.INFO,\r\n            title,\r\n            message,\r\n            true,\r\n            console.info\r\n        );\r\n    }\r\n    public showWarning = (title:string, message:string) => {\r\n        if (this.container.isShown)\r\n        {\r\n            invokeLater(()=>{\r\n                this.showWarning(title, message)\r\n            }, INVOCATION_WAIT_DELAY);\r\n            return;\r\n        }\r\n        this.container.show(\r\n            DialogType.WARNING,\r\n            title,\r\n            message,\r\n            true,\r\n            console.info\r\n        );\r\n    }\r\n    public showError = (title:string, message:string|Error) => {\r\n        if (this.container.isShown)\r\n        {\r\n            invokeLater(()=>{\r\n                this.showError(title, message)\r\n            }, INVOCATION_WAIT_DELAY);\r\n            return;\r\n        }\r\n        let messageContent;\r\n        if (message instanceof Error) {\r\n            messageContent = message.message;\r\n        } else {\r\n            if (typeof message === 'string' && message.trim().toLowerCase().startsWith(\"<!doctype html\")) {\r\n                messageContent = (\r\n                    <div dangerouslySetInnerHTML={{\r\n                        __html: message\r\n                    }}>\r\n\r\n                    </div>\r\n                )\r\n            } if (typeof message === 'object') {\r\n                messageContent = message['result'];\r\n            } else {\r\n                messageContent = !message || message.trim() === \"\" ? \"Unexpected error\" : message.trim();\r\n            }\r\n        }\r\n        this.container.show(\r\n            DialogType.ERROR,\r\n            title,\r\n            messageContent,\r\n            true,\r\n            ()=>{},\r\n            ()=>{},\r\n            \"Ok\"\r\n        );\r\n        \r\n    }\r\n\r\n    public showConfirmDanger = (title:string, message:string) => {\r\n        return this.showConfirm(title, message, DialogType.ERROR);\r\n    }\r\n    public showConfirmWarning = (title:string, message:string) => {\r\n        return this.showConfirm(title, message, DialogType.WARNING);\r\n    }\r\n\r\n    public showConfirm = (title:string, message:string, type:DialogType = DialogType.INFO) => {\r\n        \r\n        return new Promise<boolean>((resolve, reject)=>{\r\n            if (this.container.isShown)\r\n            {\r\n                invokeLater(()=>{ \r\n                    this.container.show(\r\n                        type,\r\n                        title,\r\n                        message,\r\n                        false,\r\n                        (e:any) => {\r\n                            resolve(true);\r\n                        },\r\n                        (e:any) => {\r\n                            resolve(false);\r\n                        }\r\n                    );\r\n                }, INVOCATION_WAIT_DELAY);\r\n                return;\r\n            }\r\n            this.container.show(\r\n                type,\r\n                title,\r\n                message,\r\n                false,\r\n                (e:any) => {\r\n                    resolve(true);\r\n                },\r\n                (e:any) => {\r\n                    resolve(false);\r\n                }\r\n            );\r\n        });\r\n    }\r\n   \r\n    public showPrompt = ( title:string, message:string, defaultValue?:string ) => {\r\n        \r\n        return new Promise<string|undefined>((resolve,reject)=>{\r\n            this.doShowPrompt(title, message, resolve, defaultValue);\r\n        });\r\n    }\r\n\r\n    private doShowPrompt = ( title:string, message:string, resolve:(e:any)=>any, defaultValue?:string ) =>\r\n    {\r\n        if (this.container.isShown)\r\n        {\r\n            invokeLater(()=>{\r\n                this.doShowPrompt(title, message,  resolve, defaultValue);\r\n            }, INVOCATION_WAIT_DELAY);\r\n            return;\r\n        }\r\n        const onSubmit = (val:string)=>{\r\n            this.dismissAlert();\r\n            resolve(val);\r\n        };\r\n        this.container.showNoButtons( \r\n            title,\r\n            <DialogPrompt\r\n                message={message}\r\n                onSubmit={onSubmit}\r\n                defaultValue={defaultValue}/>,\r\n            (e:any) => { resolve(undefined) }, \r\n        );\r\n    }\r\n\r\n    public dismissAlert = () => {\r\n        this.container.dismissAlert();\r\n    }\r\n\r\n    public showContent = ( title:string, content: ReactElement<any, typeof Component>, _closeObserver?: { obs: any} ) => {\r\n        return new Promise<boolean>((resolve, reject) => {\r\n            const closeObserver: any = {\r\n                close : () => {}\r\n            };\r\n            if (_closeObserver) {\r\n                _closeObserver.obs = closeObserver;\r\n            }\r\n            let el = createElement(content.type, {...content.props, closeObserver});\r\n            this.container.showNoButtons(  title, el, (e:any) => { resolve(false) }, closeObserver  );\r\n        });\r\n    }\r\n} \r\n\r\ninterface DialogPromptProps  {\r\n    message:string,\r\n    onChange:(val:string)=>any\r\n}","import { injectable } from \"inversify\";\nimport LoadingComponent from './../interfaces/LoadingComponent';\n\n@injectable()\nexport default class LoadingService {\n    startLoading = () => {\n        this.component?.startLoading();\n    }\n    stopLoading = () => {\n        this.component?.stopLoading();\n    }\n    private component: LoadingComponent | undefined;\n\n    setComponent = (c: LoadingComponent) => {\n        this.component = c;\n    }\n}","import { inject, injectable } from \"inversify\";\nimport ClassLevel from \"../models/ClassLevel\";\nimport Settings from \"../settings\";\nimport RestClient from './../apiClients/RestClient';\nimport ClassMember from './../models/ClassMember';\n\nconst API_URL = Settings.App.hosts.api +\"/api/admin/management/\";\n\n@injectable()\nexport default class ClassMemberService {\n    @inject(RestClient)\n    private rest: RestClient;\n\n    getMembers = (classLevelId: number) => {\n        return this.rest.getAuthorized<ClassMember[]>(`${API_URL}classlevels/${classLevelId}/members`);\n    }\n    getActiveClasses = () => {\n        const URL_GET_ACTIVE_CLASSES = `${API_URL}classlevels/active`;\n        return this.rest.getAuthorized<ClassLevel[]>(URL_GET_ACTIVE_CLASSES);\n    }\n}","import { inject, injectable } from \"inversify\";\nimport RestClient from \"../apiClients/RestClient\";\nimport Employee from \"../models/Employee\";\nimport Settings from \"../settings\";\nimport WebResponse from './../models/WebResponse';\n\nconst API_URL = Settings.App.hosts.api +\"/api/admin/management/uploads/\";\n\n@injectable()\nexport default class FileUploadService {\n    @inject(RestClient)\n    private rest:RestClient;\n    \n    uploadSignature = (employee: Employee, file: File) => {\n        const url = `${API_URL}employee/signature`;\n        const formData = new FormData();\n        formData.append('id', employee.id.toString());\n        formData.append('file', file);\n        return this.rest.postAuthorized<WebResponse<string>>(url, formData);\n    }\n}","import { injectable } from \"inversify\";\n\n@injectable()\nexport default class EventService {\n    // private _onProductSearchKeyUpdate:Map<string, (key:string) => any> = new Map();\n\n    // triggerProductSearchUpdate = (key:string) => {\n    //     this._onProductSearchKeyUpdate.forEach(action => action(key));\n    // }\n\n    // addOnProductSearchUpdate = (key:string, action:(key:string)=>any) => {\n    //     this._onProductSearchKeyUpdate.set(key, action);\n    // }\n    // removeOnProductSearchUpdate = (key:string) => {\n    //     this._onProductSearchKeyUpdate.delete(key);\n    // }\n}","import { Container } from 'inversify'\r\nimport 'reflect-metadata'\r\nimport DialogService from './services/DialogService';\r\nimport RoutingService from './services/RoutingService';\r\nimport AuthService from './services/AuthService';\r\nimport MasterDataService from './services/MasterDataService';\r\nimport RestClient from './apiClients/RestClient';\r\nimport EventService from './services/EventService';\r\nimport LoadingService from './services/LoadingService';\r\nimport ToastService from './services/ToastService';\r\nimport ClassMemberService from './services/ClassMemberService';\r\nimport FileUploadService from './services/FileUploadService';\r\n\r\nlet container:Container = new Container();\r\n\r\ncontainer.bind(EventService).toSelf().inSingletonScope();\r\ncontainer.bind(RestClient).toSelf().inSingletonScope();\r\ncontainer.bind(AuthService).toSelf().inSingletonScope();\r\ncontainer.bind(MasterDataService).toSelf().inSingletonScope();\r\ncontainer.bind(RoutingService).toSelf().inSingletonScope();\r\ncontainer.bind(ClassMemberService).toSelf().inSingletonScope();\r\ncontainer.bind(FileUploadService).toSelf().inSingletonScope();\r\n\r\n// dialogs\r\ncontainer.bind(DialogService).toSelf().inSingletonScope();\r\ncontainer.bind(LoadingService).toSelf().inSingletonScope();\r\ncontainer.bind(ToastService).toSelf().inSingletonScope();\r\n\r\nexport {container}\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","\r\ninterface Props {\r\n    show?: boolean;\r\n    iconClass?: string;\r\n    children?: any;\r\n    className?: string;\r\n    onClick?: (e: any) => any;\r\n    disabled?: boolean;\r\n    type?: 'button' | 'submit' | 'reset';\r\n}\r\nconst ActionButton = (props: Props) => {\r\n    if (props.show !== undefined && props.show === false) {\r\n        return null;\r\n    }\r\n    const disabledProps: any = props.disabled === true ? { disabled: 'disabled' } : {};\r\n    return (\r\n        <button type={props.type ?? \"button\"} className={props.className} onClick={props.onClick} {...disabledProps}>\r\n            {props.iconClass ?\r\n                <i className={props.iconClass + (props.children ? \" me-3\" : \"\")} /> : null}\r\n            {props.children}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default ActionButton;","\r\nimport { resolve } from \"inversify-react\";\r\nimport React, { Component } from \"react\";\r\nimport ActionButton from \"../components/buttons/ActionButton\";\r\nimport RoutingService from './../services/RoutingService';\r\n\r\nclass Props {\r\n    children:any;\r\n    title?:string;\r\n    attributes?:any;\r\n    titleAlign?:undefined |'center' | 'left' | 'right';\r\n    back?:string;\r\n}\r\nexport class ViewTemplate extends Component<Props, any> {\r\n    @resolve(RoutingService)\r\n    private routing:RoutingService;\r\n    goBack = () => {\r\n        if (this.props.back)\r\n        {\r\n            this.routing.navigate(this.props.back);\r\n        }\r\n    }\r\n    render(): React.ReactNode {\r\n        \r\n        return (\r\n            <div  {...this.props.attributes} className=\"container-fluid baseView\" >\r\n                {this.props.title && this.props.title.trim() !== \"\" ? \r\n                    <h2 style={{textAlign: this.props.titleAlign}}>{this.props.title}</h2> : null}\r\n                {this.props.back?\r\n                <ActionButton onClick={this.goBack} className=\"btn btn-dark btn-sm my-2\" iconClass=\"fas fa-arrow-left\">\r\n                    Back\r\n                </ActionButton> : null}\r\n                {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n}","export default class BaseState {\r\n    error:Error|undefined;\r\n    message:string|undefined;\r\n    busy:boolean = false;\r\n}","\r\nimport BaseModel from './BaseModel';\r\nexport default class MasterDataResult<T extends BaseModel> {\r\n    totalData: number = 0;\r\n    page: number = 0;\r\n    limit: number = 10;\r\n    items: T[] = [];\r\n    order?: string = \"id\";\r\n    orderDesc?: boolean;\r\n}","import BaseModel from \"./BaseModel\";\nimport BaseState from \"./BaseState\";\nimport MasterDataResult from './MasterDataResult';\n\nexport default class BaseMasterDataState<T extends BaseModel> extends BaseState {\n    result:MasterDataResult<T> = new MasterDataResult<T>();\n    item:T | undefined;\n    showForm:boolean = false;\n    filter: any = {};\n}","\nexport default class DataTableHeaderValue {\n    label:string | null | undefined;\n    constructor(public name:string | null, label?:string | null , public orderable = true, public filterable = true){\n        this.label = label ?? name;\n        this.filterable = this.orderable ? filterable : false;\n        this.adjustLabel();\n    }\n\n    adjustLabel = () => {\n        if (!this.label) return;\n\n        if (this.label.includes(\".\")) {\n            const splitByDot = this.label.split(\".\");\n            this.label = splitByDot[splitByDot.length-1];\n        }\n\n        this.label = capitalize(this.label);\n    }\n}\n\nconst capitalize = (val:string) => {\n    return val[0].toUpperCase() + val.substring(1, val.length);\n}","import BaseModel from \"./BaseModel\";\r\nimport School from \"./School\";\r\nimport User from \"./User\";\r\n\r\nexport default class Employee extends BaseModel {\r\n    nisdm: string; \r\n    profileImage: string; \r\n    user: User = new User();\r\n \r\n    noKk: string; \r\n    noKtp: string; \r\n    addressKtp: string; \r\n    addressOther: string;\r\n \r\n    motherName: string; \r\n    fatherName: string;\r\n \r\n    npwp: string; \r\n    bankAccountNumber: string;\r\n \r\n\teducations: Education[] = [];\r\n\tschools: School[] = [];\r\n \r\n    photoScan: string; \r\n    kkScan: string; \r\n    npwpScan: string; \r\n    bankAccountScan: string;\r\n\r\n    signatureFile: string;\r\n\r\n    active: boolean;\r\n\r\n    removeEducation = (id:number) => { \r\n        for (let i = 0; i < this.educations.length; i++) {\r\n            const element = this.educations[i];\r\n            if (element.id === id)\r\n            {\r\n                this.educations.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    addSchool = (school:School) => {\r\n        for (let i = 0; i < this.schools.length; i++) {\r\n            const element = this.schools[i];\r\n            if (element.id === school.id)\r\n            {\r\n                console.warn(\"duplicate school id: \" + school.id);\r\n                return false;\r\n            }\r\n        }\r\n\r\n        this.schools.push(school);\r\n        return true;\r\n    }\r\n    removeSchool = (id:number) => { \r\n        for (let i = 0; i < this.schools.length; i++) {\r\n            const element = this.schools[i];\r\n            if (element.id === id)\r\n            {\r\n                this.schools.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport class Education  extends BaseModel {\r\n    type: string = \"S1\"; \r\n    name: string; \r\n    major: string;\r\n    title: string;\r\n    certificateScan: string;\r\n}","import React from \"react\"\r\nimport { NavigateFunction, Params, useNavigate, useParams } from \"react-router-dom\"\r\nimport { container } from \"../inversify.config\";\r\nimport RoutingService from './../services/RoutingService';\r\n\r\nexport function commonWrapper(Component: any) {\r\n    \r\n    return (props: any) => {\r\n        const routeParams: Params<string>   = useParams();\r\n        const doNavigate: NavigateFunction  = useNavigate();\r\n        const navigate: (url:string)=> void = (url:string) : void => {\r\n            \r\n            let routingService:RoutingService = container.get(RoutingService);\r\n            doNavigate(url);\r\n            routingService.updateRoute(url);\r\n        };\r\n        return <Component navigate={navigate} routeParams={routeParams} {...props} />\r\n    }\r\n}","export const randomString = (length:number)=> {\r\n    var result           = '';\r\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    var charactersLength = characters.length;\r\n    for ( var i = 0; i < length; i++ ) {\r\n      result += characters.charAt(Math.floor(Math.random() *  charactersLength));\r\n   }\r\n   return result;\r\n}\r\n\r\nexport const getInputReadableDate = (date:Date) :string => {\r\n   const year = date.getFullYear();\r\n\r\n   const arr = [year, twoDigits(date.getMonth()+1), twoDigits(date.getDate())];\r\n   return arr.join(\"-\");\r\n}\r\nexport const twoDigits = (value:number) :string => {\r\n   if (value >= 10) {\r\n       return   value.toString();\r\n   }\r\n   return \"0\"+value;\r\n}\r\n","import React from \"react\";\r\nimport { resolve } from \"inversify-react\";\r\nimport BaseProps from \"../models/BaseProps\";\r\nimport BaseState from \"../models/BaseState\"; \r\nimport ControlledComponent from \"./ControlledComponent\";\r\nimport Settings from './../settings';\r\nimport DialogService from './../services/DialogService';\r\nimport { ViewTemplate } from \"../layout/ViewTemplate\";\r\nimport AuthService from './../services/AuthService';\r\nimport ToastService from './../services/ToastService';\r\n\r\nexport abstract class BasePage<P extends BaseProps,S extends BaseState> extends ControlledComponent<P, S> {\r\n    title?:string;\r\n    @resolve(AuthService)\r\n    protected authService:AuthService;\r\n    @resolve(DialogService)\r\n    protected dialog:DialogService;\r\n    @resolve(ToastService)\r\n    protected toast:ToastService;\r\n\r\n    constructor(props:P, private authorized:boolean = false, title?:string)\r\n    {\r\n        super(props);\r\n        this.title = title;\r\n        this.initialize();\r\n    }\r\n    initialize = () => {\r\n        document.title = this.title ? this.title : Settings.App.uiSetting.defaultTitle;\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        this.forceUpdate();\r\n    }\r\n\r\n    componentDidUpdate()\r\n    {\r\n        if (this.authorized && !this.authService.loggedIn )\r\n        {   \r\n            this.navigate(\"/\");\r\n            return;\r\n        }\r\n    }\r\n\r\n    protected navigate = (url:string) =>\r\n    {\r\n        if (this.props.navigate)\r\n        {\r\n            this.props.navigate(url);\r\n            return;\r\n        }\r\n        console.error(\"props.navigate does not exist\");\r\n    }\r\n\r\n    protected gotoHomePage = () => {\r\n        this.navigate(\"/\");\r\n    }\r\n\r\n    \r\n    protected invalidSession = () => \r\n    {\r\n        return (\r\n            <ViewTemplate title=\"Invalid Session\">\r\n                <p>You must log in to access this page</p>\r\n            </ViewTemplate>\r\n        )\r\n    }\r\n    \r\n}\r\n \r\n","import { Link } from 'react-router-dom';\n\ninterface Props  {\n    show?:boolean;\n    iconClass?:string;\n    children?:any;\n    className?:string;\n    onClick?:(e:any)=>any;\n    to?:string;\n}\nconst AnchorButton = (props:Props) => {\n    if (props.show !== undefined && props.show === false)\n    {\n        return null;\n    }\n    if (!props.to)\n    {\n        return (\n            <a className={props.className} onClick={props.onClick}>\n                {props.iconClass?\n                <i className={props.iconClass+ (props.children? \" me-3\" : \"\")}/> : null }\n                {props.children}\n            </a>\n        )\n    }\n    return (\n        <Link to={props.to} className={props.className} onClick={props.onClick}>\n            {props.iconClass?\n            <i className={props.iconClass+ (props.children? \" me-3\" : \"\")}/> : null }\n            {props.children}\n        </Link>\n    )\n\n}\n\nexport default AnchorButton;","\nimport React, { Component } from 'react';\nimport { randomString } from './../../utils/stringUtil';\ninterface IProps {\n    limit: number,\n    totalData: number,\n    activePage: number,\n    onClick: any\n}\nexport default class PaginationButtons extends Component<IProps, any> {\n    constructor(props: IProps) {\n        super(props);\n    }\n    render() {\n        const buttonIndexes = generateButtonValues(this.props.limit, this.props.totalData, this.props.activePage);\n        if (buttonIndexes.length === 0) { return null }\n        const lastIndex = buttonIndexes[buttonIndexes.length - 1];\n        const nextPage = this.props.activePage + 1 >= lastIndex  ? 0 : this.props.activePage + 1;\n        const previusPage = this.props.activePage - 1 < 0? lastIndex-1 : this.props.activePage - 1;\n        return (<div>\n            <nav aria-label=\"Page navigation example\">\n                <ul className=\"pagination\">\n                    <li className=\"page-item\"><a className=\"page-link clickable\" onClick={(e) => this.props.onClick(previusPage)}>Previous</a></li>\n                    {buttonIndexes.map((page, i) => {\n                        return (\n                        <li key={\"NAV-\"+randomString(10)} className={\"page-item \"+(page-1 === this.props.activePage?\"active\":\"\")}>\n                            <a className=\"page-link clickable\" onClick={(e) => this.props.onClick(page - 1)} >{page}</a>\n                        </li>\n                        )\n                    })}\n                    <li className=\"page-item\"><a className=\"page-link clickable\" onClick={(e) => this.props.onClick(nextPage)}>Next</a></li>\n                </ul>\n            </nav>\n        </div>)\n    }\n}\n\nconst generateButtonValues = (limit: number, totalData: number, currentPage: number) => {\n\n    /* DISPLAYED BUTTONS */\n    const displayed_buttons: number[] = [];\n    const buttonCount = Math.ceil(totalData / limit);\n\n    // console.debug(\"current page:\", currentPage);\n    const min = (currentPage) - 1;\n    const max = (currentPage) + 3;\n    // const min = (currentPage) - 2;\n    // const max = (currentPage) + 2;\n\n    // console.debug(\"min\", min, \"current page:\", currentPage, \"max\", max);\n    if (buttonCount > 1) {\n        displayed_buttons.push(1);\n    }\n    for (let i = min; i <= max; i++) {\n        if (i > 1 && i <= buttonCount) {\n            (displayed_buttons.push(i));\n        }\n    }\n    if (max < buttonCount) {\n        displayed_buttons.push(buttonCount);\n    }\n    return displayed_buttons;\n}\n","import { ChangeEvent } from \"react\";\nimport DataTableHeaderValue from \"../../models/DataTableHeaderValue\";\nimport { randomString } from \"../../utils/stringUtil\";\nimport './DataTableHeader.scss';\n\nconst DataTableHeader = (\n    items:DataTableHeaderValue[], \n    activeOrder:string, \n    orderDesc:boolean, \n    onClick:(name:string, desc:boolean)=>any,\n    filter: any,\n    onChange: (name:string, value:string)=>any,\n) => {\n\n    return items.map(item => {\n        let className = activeOrder === item.name ? \"text-center bg-light\" : \"text-center\";\n        let textColor = activeOrder === item.name ? \"text-dark\":\"text-secondary\";\n        let tdOnClick = (e:any) => {\n            if (item.orderable && item.name) {\n                onClick(item.name, !orderDesc);\n            }\n        }\n        const _onChange = (e:ChangeEvent) => {\n            if (!item.name) {\n                return;\n            }\n            const input = e.target as HTMLInputElement;\n            onChange(item.name, input.value);\n        }\n        const isActive = activeOrder === item.name;\n        return (\n            <th key={\"th-item-\"+randomString(3)} className={className}>\n                {item.orderable ?\n                <button type=\"button\" className={`sortButton mb-1 btn btn-text w-100 ${textColor}`} onClick={tdOnClick} >\n                    <b className=\"text-start w-100\">{item.label}</b>\n                    {isActive ?\n                    <i className={`fas ${orderDesc ? 'fa-long-arrow-alt-down' : 'fa-long-arrow-alt-up'} ms-2`} /> :\n                    <i className=\"fas fa-sort ms-2\" />}\n                </button> : <span className=\"text-secondary\">{item.label}</span>}\n                {item.filterable && item.name?\n                <input id={`input-filter-${item.name}`} className=\"form-control form-control-sm\" value={filter[item.name] ?? \"\"} onChange={_onChange} /> : \n                null}\n            </th>\n        )\n    })\n}\n\nexport default DataTableHeader;\n\n","import { resolve } from \"inversify-react\";\r\nimport BaseModel from \"../../../models/BaseModel\";\r\nimport { BasePage } from \"../../BasePage\";\r\nimport BaseProps from '../../../models/BaseProps';\r\nimport MasterDataService from '../../../services/MasterDataService';\r\nimport BaseMasterDataState from '../../../models/BaseMasterDataState';\r\nimport { ChangeEvent, FormEvent, Fragment, useState } from \"react\";\r\nimport AnchorButton from \"../../../components/buttons/AnchorButton\";\r\nimport PaginationButtons from \"../../../components/buttons/PaginationButtons\";\r\nimport ActionButton from \"../../../components/buttons/ActionButton\";\r\nimport { randomString } from \"../../../utils/stringUtil\";\r\nimport ModelNames from \"../../../constants/ModelNames\";\r\nimport './MasterDataPage.scss';\r\nimport DataTableHeaderValue from \"../../../models/DataTableHeaderValue\";\r\nimport DataTableHeader from \"../../../components/dataTableHeader/DataTableHeader\";\r\n\r\n\r\nabstract class BaseMasterDataPage<M extends BaseModel, P extends BaseProps, S extends BaseMasterDataState<M>> extends BasePage<P, S> {\r\n    @resolve(MasterDataService)\r\n    protected service: MasterDataService;\r\n\r\n    constructor(props: P, private name: ModelNames, title: string) {\r\n        super(props, true, title);\r\n    }\r\n    abstract get defaultItem(): M;\r\n\r\n    get item(): M | undefined { return this.state.item as M | undefined }\r\n    get activeOrder() { return this.state.result.order ?? \"id\" }\r\n    get isOrderDesc() { return this.state.result.orderDesc === true }\r\n    get startingNumber() { return 1 + (this.state.result.page * this.state.result.limit); }\r\n    get filterParams() {\r\n        const { filter } = this.state;\r\n        const array: string[] = [];\r\n        for (const key in filter) {\r\n            array.push(`${key}:${filter[key]}`);\r\n        }\r\n        return array;\r\n    }\r\n\r\n    abstract getDataTableHeaderVals(): DataTableHeaderValue[];\r\n\r\n    load = (page: number = 0, perPage: number = 10, order?: string, orderDesc?: boolean) => {\r\n        this.service.list<M>(this.name, page, perPage, order, orderDesc, this.filterParams)\r\n            .then(response => {\r\n                const assignedItems: M[] = [];\r\n                response.items.forEach(item => {\r\n                    assignedItems.push(Object.assign(this.defaultItem, item));\r\n                })\r\n                response.items = assignedItems;\r\n                this.setState({ result: response })\r\n            })\r\n            .catch(console.error);\r\n    }\r\n    componentDidMount(): void {\r\n        this.load();\r\n    }\r\n    onFormSubmit = (e: FormEvent) => {\r\n        e.preventDefault();\r\n        const item = this.state.item as M | undefined;\r\n        if (!item) {\r\n            this.dialog.showError(\"Submission Error\", \"Undefined payload\");\r\n            return;\r\n        }\r\n        if (item.id === undefined || item.id <= 0) {\r\n            this.insert(item);\r\n        } else {\r\n            this.update(item);\r\n        }\r\n    }\r\n    \r\n    showForm = () => this.setState({ showForm: true });\r\n    hideForm = () => this.setState({ item: this.defaultItem, showForm: false });\r\n    edit = (model: M) => this.setState({ item: model }, this.showForm);\r\n\r\n    delete = (model: M) => {\r\n        this.dialog.showConfirmDanger(\"Delete Item\", \"Are you sure to delete this item?\")\r\n            .then(ok => {\r\n                if (ok) {\r\n                    this.service.delete(this.name, model.id)\r\n                        .then(resp => {\r\n                            this.dialog.showInfo(\"Delete Success\", \"Item has been deleted\");\r\n                            this.loadCurrentPage();\r\n                        })\r\n                        .catch(err => {\r\n                            this.dialog.showError(\"Delete Failed\", err);\r\n                        })\r\n\r\n                }\r\n            })\r\n    }\r\n    insert = (model: M) => {\r\n        this.dialog.showConfirm(\"Insert Item\", \"Are you sure to add this item? \")\r\n            .then(ok => {\r\n                if (ok) {\r\n                    this.service.post(this.name, model)\r\n                        .then(resp => {\r\n                            this.dialog.showInfo(\"Insert Success\", \"New item has been inserted\");\r\n                            this.loadCurrentPage();\r\n                            this.hideForm();\r\n                        })\r\n                        .catch(err => {\r\n                            this.dialog.showError(\"Insert Failed\", err);\r\n                        })\r\n\r\n                }\r\n            })\r\n    }\r\n    showInsertForm = () => this.setState({ showForm: true, item: this.defaultItem });\r\n    resetFilter = () => this.setState({ filter: {} }, this.load);\r\n    resetFormAndClose = () => this.setState({ showForm: false, item: this.defaultItem });\r\n\r\n    formEditSubmit = (e: FormEvent) => {\r\n        e.preventDefault();\r\n        if (this.state.item && this.state.item.id > 0) {\r\n            this.update(this.state.item as M);\r\n        } else if (this.state.item && (!this.state.item.id || this.state.item.id <= 0)) {\r\n            this.insert(this.state.item as M);\r\n        }\r\n    }\r\n    update = (model: M) => {\r\n        this.dialog.showConfirm(\"Update Item\", \"Are you sure to update this item? \")\r\n            .then(ok => {\r\n                if (ok) {\r\n                    this.service.put(this.name, model.id, model)\r\n                        .then(resp => {\r\n                            this.dialog.showInfo(\"Update Success\", \"Item has been updated\");\r\n                            this.loadCurrentPage();\r\n                            this.hideForm();\r\n                        })\r\n                        .catch(err => {\r\n                            this.dialog.showError(\"Update Failed\", err);\r\n                        })\r\n\r\n                }\r\n            })\r\n    }\r\n    patchAction = (model: M, action: string) => {\r\n        this.dialog.showConfirmWarning(\"Execute Action\", \"Are you sure to execute action: \" + action + \"? \")\r\n            .then(ok => {\r\n                if (ok) {\r\n                    this.service.patchAction(this.name, model.id, action)\r\n                        .then(resp => {\r\n                            this.dialog.showInfo(\"Action Completed\", \"Action: \" + action + \" has been executed\");\r\n                            this.loadCurrentPage();\r\n                            this.hideForm();\r\n                        })\r\n                        .catch(err => {\r\n                            this.dialog.showError(\"Update Failed\", err);\r\n                        })\r\n\r\n                }\r\n            })\r\n    }\r\n    loadCurrentPage = () => {\r\n        this.load(this.state.result.page, this.state.result.limit);\r\n    }\r\n    loadFromForm = (e: FormEvent) => {\r\n        e.preventDefault();\r\n        this.load(0, this.state.result.limit, \"id\", false);\r\n    }\r\n    setItemsOrder = (name: string, desc: boolean) => {\r\n        this.load(this.state.result.page, this.state.result.limit, name, desc);\r\n    }\r\n\r\n    protected getDataTableHeaderComponent = () => {\r\n        return DataTableHeader(\r\n            this.getDataTableHeaderVals(),\r\n            this.activeOrder,\r\n            this.isOrderDesc,\r\n            this.setItemsOrder,\r\n            this.state.filter,\r\n            this.onFilterChange,\r\n        );\r\n    }\r\n\r\n    protected onFilterChange = (name: string, value: string) => {\r\n        const { filter } = this.state;\r\n        const valueIsBlank = !value || value.trim() === \"\";\r\n        if (valueIsBlank && filter[name]) {\r\n            delete filter[name];\r\n        } else {\r\n            filter[name] = value;\r\n        }\r\n        this.setState({ filter: filter }, () => {\r\n            const input = document.getElementById(`input-filter-${name}`);\r\n            input?.focus();\r\n        });\r\n    }\r\n\r\n    protected get paginationButton() {\r\n        const { result } = this.state;\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8\">\r\n                    <PaginationButtons\r\n                        limit={result.limit}\r\n                        totalData={result.totalData}\r\n                        activePage={result.page}\r\n                        onClick={(page: number) => this.load(page, this.state.result.limit)}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <FormInputLimit defaultLimit={result.limit} onSubmit={(limit) => {\r\n                        this.load(0, limit, result.order, result.orderDesc);\r\n                    }} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    protected actionButton = (item: M, showDelete: boolean = true) => {\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 px-1\">\r\n                    <AnchorButton\r\n                        onClick={() => this.edit(item)}\r\n                        iconClass=\"fas fa-edit\"\r\n                        className=\"btn btn-text clickable\" />\r\n                </div>\r\n                {showDelete ?\r\n                    <div className=\"col-md-6 px-1\">\r\n                        <AnchorButton\r\n                            onClick={() => this.delete(item)}\r\n                            className=\"btn btn-text text-danger\"\r\n                            iconClass=\"fas fa-times\" />\r\n                    </div> : null}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    protected listToggler = <T extends BaseModel>(\r\n        items: T[],\r\n        model: M,\r\n        label: (item: T) => string,\r\n        add: (model: M) => any,\r\n        remove: (model: M, id: number) => any) => {\r\n        return (\r\n            <>\r\n                {items.map((item: T) => {\r\n                    return (\r\n                        <div className=\"listTogglerItem\" key={`list-toggler-item-${randomString(5)}`}>\r\n                            <ActionButton\r\n                                onClick={(e) => remove(model, item.id)}\r\n                                className=\"btn btn-text btn-sm text-danger me-2\"\r\n                                iconClass=\"fas fa-minus-circle\" />\r\n                            <span className=\"no-wrap\">{label(item)}</span>\r\n                        </div>\r\n                    );\r\n                })}\r\n                <ActionButton\r\n                    onClick={(e) => add(model)}\r\n                    className=\"btn btn-sm btn-text\"\r\n                    iconClass=\"fas fa-plus-circle text-success\" />\r\n            </>\r\n        );\r\n    }\r\n\r\n    protected get closeFormButton() {\r\n        return (\r\n            <ActionButton onClick={this.resetFormAndClose} iconClass=\"fas fa-times\" className=\"btn btn-secondary btn-sm mx-2\">\r\n                Close form\r\n            </ActionButton>\r\n        )\r\n    }\r\n    protected get showFormButton() {\r\n        return (\r\n            <ActionButton onClick={this.showInsertForm} iconClass=\"fas fa-plus\" className=\"btn btn-primary btn-sm mx-2\">\r\n                Insert new data\r\n            </ActionButton>\r\n        )\r\n    }\r\n\r\n    protected get tableFooter() {\r\n        return (\r\n            <tfoot>\r\n                <tr>\r\n                    <td colSpan={4}>\r\n                        <ActionButton type=\"submit\" iconClass=\"fas fa-redo\" className=\"btn btn-secondary btn-sm me-2\">\r\n                            Reload\r\n                        </ActionButton>\r\n                        <ActionButton type=\"button\" onClick={this.resetFilter} className=\"btn btn-warning btn-sm\">\r\n                            Reset Filter\r\n                        </ActionButton>\r\n                    </td>\r\n                </tr>\r\n            </tfoot>\r\n        )\r\n    }\r\n}\r\n\r\nconst FormInputLimit = (props: {\r\n    onSubmit: (limit: number) => any,\r\n    defaultLimit: number,\r\n}) => {\r\n    const [limit, setLimit] = useState(props.defaultLimit);\r\n    const onInputChange = (e: ChangeEvent) => {\r\n        const input = e.target as HTMLInputElement;\r\n        setLimit(parseInt(input.value));\r\n    }\r\n    return (\r\n        <form \r\n            className=\"input-group\"\r\n            onSubmit={(e) => {\r\n                e.preventDefault();\r\n                props.onSubmit(limit);\r\n            }}\r\n        >\r\n            <input\r\n                type=\"number\"\r\n                value={limit}\r\n                min={1}\r\n                className=\"form-control form-control-sm\"\r\n                onChange={onInputChange}\r\n                required\r\n            />\r\n            <div className=\"input-group-append\">\r\n                <ActionButton\r\n                    type=\"submit\"\r\n                    className=\"btn btn-sm btn-info text-white\"\r\n                    iconClass=\"fas fa-play\"\r\n                    children=\"Apply Page Size\"\r\n                />\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default BaseMasterDataPage;","import { resolve } from \"inversify-react\";\r\nimport { ChangeEvent, Component, FormEvent, ReactNode, useState } from \"react\";\r\nimport ActionButton from \"../../../components/buttons/ActionButton\";\r\nimport { ViewTemplate } from \"../../../layout/ViewTemplate\";\r\nimport BaseMasterDataState from '../../../models/BaseMasterDataState';\r\nimport BaseProps from '../../../models/BaseProps';\r\nimport DataTableHeaderValue from \"../../../models/DataTableHeaderValue\";\r\nimport Employee, { Education } from \"../../../models/Employee\";\r\nimport School from \"../../../models/School\";\r\nimport Settings from \"../../../settings\";\r\nimport { commonWrapper } from \"../../../utils/commonWrapper\";\r\nimport { getInputReadableDate } from \"../../../utils/stringUtil\";\r\nimport ControlledComponent from \"../../ControlledComponent\";\r\nimport BaseMasterDataPage from \"./BaseMasterDataPage\";\r\nimport FileUploadService from './../../../services/FileUploadService';\r\n\r\nclass State extends BaseMasterDataState<Employee> {\r\n\r\n}\r\nclass EmployeesPage extends BaseMasterDataPage<Employee, BaseProps, State> {\r\n    @resolve(FileUploadService)\r\n    private upload: FileUploadService;\r\n\r\n    constructor(props: BaseProps) {\r\n        super(props, \"employees\", \"Employees Management\");\r\n        this.state = new State();\r\n    }\r\n    get defaultItem(): Employee { \r\n        const e = new Employee(); \r\n        return e;\r\n    }\r\n    \r\n    getDataTableHeaderVals = () => {\r\n        return [\r\n            new DataTableHeaderValue(\"nisdm\", \"NISDM\"),\r\n            new DataTableHeaderValue(\"user.fullName\", \"Full Name\"),\r\n            new DataTableHeaderValue(\"user.email\", \"Email\"),\r\n            new DataTableHeaderValue(\"user.birthDate\", \"BirthDate\"),\r\n            new DataTableHeaderValue(\"user.gender\", \"Gender\"),\r\n            new DataTableHeaderValue(null, \"Signature\", false),\r\n            new DataTableHeaderValue(null, \"School\", false),\r\n            new DataTableHeaderValue(null, \"Education\", false),\r\n        ]\r\n    }\r\n    removeEducation = (item:Employee, educationId:number) => {\r\n        this.dialog.showConfirmDanger(\"Remove Education\", \"Dou you want to remove education data?\")\r\n            .then(ok => {\r\n                if (ok) {\r\n                    item.removeEducation(educationId);\r\n                    this.update(item);\r\n                }\r\n            })\r\n        \r\n    }\r\n    addEducation = (item:Employee) => {\r\n        this.dialog.showContent(\"Add Education\", <AddEducationForm item={item} update={(e) => this.submitAddEducation(item, e) }/>);\r\n    }\r\n    submitAddEducation = (item:Employee, education:Education) => {\r\n        item.educations.push(education);\r\n        this.update(item);\r\n    }\r\n\r\n    removeSchool = (item:Employee, schoolId:number) => {\r\n        this.dialog.showConfirmDanger(\"Remove School\", \"Dou you want to remove school data?\")\r\n            .then(ok => {\r\n                if (ok) {\r\n                    item.removeSchool(schoolId);\r\n                    this.update(item);\r\n                }\r\n            })\r\n        \r\n    }\r\n    addSchool = (item:Employee) => {\r\n        this.service.get<Employee>('employees', item.id)\r\n            .then(employee => {\r\n                employee = Object.assign(new Employee(), employee);\r\n                this.service.list<School>('schools', 0, -1, undefined)\r\n                    .then(schoolsResponse => {\r\n                        this.dialog.showContent(\"Add School\", \r\n                        <AddSchoolForm \r\n                            schools={schoolsResponse.items} \r\n                            update={(e) => this.submitAddSchool(employee, e) }\r\n                        />);\r\n                    })\r\n                    .catch(console.error);\r\n                })\r\n            .catch(console.error);\r\n        \r\n    }\r\n    submitAddSchool = (item:Employee, school:School) => {\r\n        if(item.addSchool(school)) {\r\n            this.update(item);\r\n        }  \r\n    }\r\n    showSignatureForm = (item: Employee) => {\r\n        const closeObs = {\r\n            obs: {\r\n                close: () => {}\r\n            }\r\n        };\r\n        const submit = (emp:Employee, file: File) => {\r\n            this.upload.uploadSignature(emp, file)\r\n                .then((response) => {\r\n                    if (closeObs.obs.close) {\r\n                        closeObs.obs.close();\r\n                    }\r\n                    this.toast.showSuccess('Signature has been uploaded');\r\n\r\n                    // Force update to reload all signature image\r\n                    this.forceUpdate();\r\n                })\r\n                .catch((e) => {\r\n                    this.toast.showDanger('Failed to upload signature');\r\n                    console.error(e);\r\n                });\r\n        }\r\n        this.dialog.showContent(\r\n            'Upload Signature',\r\n            <FormUploadSignature employee={item} submit={submit} />,\r\n            closeObs\r\n        );\r\n    }\r\n    render(): ReactNode {\r\n        if (this.state.showForm && this.state.item) {\r\n            return (\r\n                <ViewTemplate title={this.title} back=\"/admin\">\r\n                    {this.closeFormButton}\r\n                    <FormEdit item={this.state.item} handleInputChange={this.handleInputChange} onSubmit={this.formEditSubmit} />\r\n                </ViewTemplate>\r\n            );\r\n        }\r\n        \r\n        const result = this.state.result;\r\n        const items = result?.items;\r\n        return (\r\n            <ViewTemplate title={this.title} back=\"/admin\">\r\n                {this.showFormButton}\r\n                {result === undefined || items === undefined ?\r\n                    <i>Loading...</i> :\r\n                    <form onSubmit={this.loadFromForm} className=\"mt-5 pl-3 pr-3\" style={{overflow: 'auto'}}>\r\n                        {this.paginationButton}\r\n                        <table className=\"commonDataTable table table-striped\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>No</th>\r\n                                    {this.getDataTableHeaderComponent()}\r\n                                    <th>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {items.map((item, i) => {\r\n                                    const { user, schools, educations } = item;\r\n                                    return (\r\n                                        <tr key={\"user-\" + item.id}>\r\n                                            <td>{this.startingNumber + i}</td>\r\n                                            <td>{item.nisdm}</td>\r\n                                            <td>{user.fullName}</td>\r\n                                            <td>{user.email}</td>\r\n                                            <td>{new Date(user.birthDate).toLocaleDateString()}</td>\r\n                                            <td>{user.gender}</td>\r\n                                            <td>\r\n                                                <img\r\n                                                    width={50}\r\n                                                    height={50}\r\n                                                    src={signaturePath(item.id)}\r\n                                                />\r\n                                                <div>\r\n                                                    <ActionButton \r\n                                                        iconClass=\"fas fa-edit\"\r\n                                                        className=\"btn btn-dark btn-sm\"\r\n                                                        onClick={() => this.showSignatureForm(item)}\r\n                                                    />\r\n                                                </div>\r\n                                            </td>\r\n                                            <td>{this.listToggler(\r\n                                                    schools, \r\n                                                    item, \r\n                                                    (school) => `${school.name}`, \r\n                                                    this.addSchool, \r\n                                                    this.removeSchool)}\r\n                                            </td>\r\n                                            <td>\r\n                                                {this.listToggler(\r\n                                                    educations, \r\n                                                    item, \r\n                                                    (ed) => `${ed.type}: ${ed.name}`, \r\n                                                    this.addEducation, \r\n                                                    this.removeEducation)}\r\n                                            </td>\r\n                                            \r\n                                            <td>{this.actionButton(item)}</td>\r\n                                        </tr>\r\n                                    )\r\n                                })}\r\n                            </tbody>\r\n                            {this.tableFooter}\r\n                        </table>\r\n                    </form>}\r\n            </ViewTemplate>\r\n        )\r\n    }\r\n}\r\n\r\nconst signaturePath = (id: any) => {\r\n    return `${Settings.App.hosts.api}/files/employeesignature/${id}?v=${new Date().getTime()}`;\r\n}\r\n\r\nconst FormUploadSignature = (props: { employee: Employee, submit: (employee: Employee, file: File) => any }) => {\r\n    const [file, setFile] = useState<any>(null);\r\n    const onSubmit = (e: FormEvent) => {\r\n        e.preventDefault();\r\n        if (file && file instanceof File) {\r\n            props.submit(props.employee, file);\r\n        }\r\n    };\r\n    const onChange = (e: ChangeEvent) => {\r\n        const input = e.target as HTMLInputElement;\r\n        if (input.files && input.files[0]) {\r\n            setFile(input.files[0]);\r\n        }\r\n    }\r\n    return (\r\n        <form onSubmit={onSubmit}>\r\n            <p>Select file</p>\r\n            <input required onChange={onChange} className=\"form-control\" type=\"file\" accept=\"image/png\" />\r\n            <p></p>\r\n            <ActionButton className=\"btn btn-success\" type=\"submit\">Upload</ActionButton>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst FormEdit = (props:{\r\n    item:Employee, \r\n    onSubmit:(e:FormEvent) => any, \r\n    handleInputChange:(e:ChangeEvent)=>any\r\n}) => {\r\n    const item = props.item;\r\n    const onChange = props.handleInputChange;\r\n    return (\r\n        <div className=\"formEditContainer\">\r\n            <form className=\"masterDataForm px-3 py-3 border rounded border-gray\"  onSubmit={props.onSubmit}>\r\n                <p>NiSDM</p>\r\n                <input className=\"form-control\" id=\"item.nisdm\" name=\"item.nisdm\" value={item.nisdm} onChange={onChange} required/>\r\n                <p>Full Name</p>\r\n                <input className=\"form-control\" id=\"item.user.fullName\" name=\"item.user.fullName\" value={item.user.fullName}  onChange={onChange} required/>\r\n                <p>Email</p>\r\n                <input className=\"form-control\" id=\"item.user.email\" name=\"item.user.email\" type=\"email\" value={item.user.email}  onChange={onChange} required/>\r\n                <p>Gender</p>\r\n                <select className=\"form-control\" value={item.user.gender} id=\"item.user.gender\" name=\"item.user.gender\" onChange={onChange} required>\r\n                    <option  >MALE</option>\r\n                    <option  >FEMALE</option>\r\n                </select>\r\n                <p>Birth Date</p>\r\n                <input type=\"date\" className=\"form-control\" id=\"item.user.birthDate\" name=\"item.user.birthDate\" value={getInputReadableDate(new Date(item.user.birthDate))} onChange={onChange} required/>\r\n                <p>Birth Place</p>\r\n                <input className=\"form-control\" id=\"item.user.birthPlace\" name=\"item.user.birthPlace\" value={item.user.birthPlace} onChange={onChange} required/>\r\n                \r\n                <p>Phone Number</p>\r\n                <input className=\"form-control\" id=\"item.user.phoneNumber\" name=\"item.user.phoneNumber\" value={item.user.phoneNumber} onChange={onChange} required/>\r\n                \r\n                <p>No KK</p>\r\n                <input className=\"form-control\" id=\"item.noKk\" name=\"item.noKk\" value={item.noKk} onChange={onChange} required/>\r\n                <p>No KTP</p>\r\n                <input className=\"form-control\" id=\"item.noKtp\" name=\"item.noKtp\" value={item.noKtp} onChange={onChange} required/>\r\n                \r\n                <p>Alamat Sesuai KTP</p>\r\n                <input className=\"form-control\" id=\"item.addressKtp\" name=\"item.addressKtp\" value={item.addressKtp} onChange={onChange} required/>\r\n                <p>Alamat Domisili</p>\r\n                <input className=\"form-control\" id=\"item.addressOther\" name=\"item.addressOther\" value={item.addressOther}  onChange={onChange}/>\r\n            \r\n                <p>Nama Ibu</p>\r\n                <input className=\"form-control\" id=\"item.motherName\" name=\"item.motherName\" value={item.motherName}  onChange={onChange}/>\r\n                <p>Nama Ayah</p>\r\n                <input className=\"form-control\" id=\"item.fatherName\" name=\"item.fatherName\" value={item.fatherName} onChange={onChange}/>\r\n            \r\n                <p>NPWP</p>\r\n                <input className=\"form-control\" id=\"item.npwp\" name=\"item.npwp\" value={item.npwp} onChange={onChange}/>\r\n                <p>No Rekening BSI</p>\r\n                <input className=\"form-control\" id=\"item.bankAccountNumber\" name=\"item.bankAccountNumber\" value={item.bankAccountNumber} onChange={onChange}/>\r\n\r\n                <p></p>\r\n                <input className=\"btn btn-primary\" value=\"Save\" type=\"submit\" />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\ntype AddEducationFormState = { item:Education }\r\nclass AddEducationForm extends ControlledComponent<{item:Employee, update:(item:Education) => any}, AddEducationFormState>{\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.state = {\r\n            item: new Education()\r\n        };\r\n    }\r\n\r\n    onSubmit = (e:FormEvent) => {\r\n        e.preventDefault();\r\n        this.props.update(this.state.item);\r\n    }\r\n\r\n    render(): ReactNode {\r\n        const item = this.state.item;\r\n        const levels = [\"S1\", \"S2\", \"S3\", \"D1\", \"D2\", \"D3\",]\r\n        return (\r\n            <form onSubmit={this.onSubmit}>\r\n                <p>Type</p>\r\n                <select className=\"form-control\" value={item.type} name=\"item.type\" onChange={this.handleInputChange}>\r\n                    {levels.map(i => <option key={\"add-edu-lvl-\"+i}>{i}</option>)}\r\n                </select>\r\n                <p>Name</p>\r\n                <input className=\"form-control\" value={item.name} name=\"item.name\" onChange={this.handleInputChange}/>\r\n                <p>Major</p>\r\n                <input className=\"form-control\" value={item.major} name=\"item.major\" onChange={this.handleInputChange}/>\r\n                <p>Title</p>\r\n                <input className=\"form-control\" value={item.title} name=\"item.title\" onChange={this.handleInputChange}/>\r\n                <p/>\r\n                <input className=\"btn btn-primary\" type=\"submit\" value=\"Save\"/>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n \r\nclass AddSchoolForm extends Component<{schools:School[], update:(item:School) => any, closeObserver?:{close:()=>any}}, any>{\r\n    selectedSchool:School;\r\n    constructor(props:any) {\r\n        super(props); \r\n        this.selectedSchool = this.props.schools[0];\r\n    }\r\n\r\n    onSubmit = (e:FormEvent) => {\r\n        e.preventDefault();\r\n        this.props.update(this.selectedSchool);\r\n        if (this.props.closeObserver) {\r\n            this.props.closeObserver.close();\r\n        }\r\n    }\r\n\r\n    render(): ReactNode {\r\n        return (\r\n            <form onSubmit={this.onSubmit}>\r\n                <p>Type</p>\r\n                <select className=\"form-control\" >\r\n                    {this.props.schools.map(i =>{\r\n                        return <option onClick={(e) => {this.selectedSchool = i}} key={\"add-school-\"+i.code}>{i.name}</option>\r\n                    })}\r\n                </select>\r\n                <p/>\r\n                <input className=\"btn btn-primary\" type=\"submit\" value=\"Save\"/>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default commonWrapper(EmployeesPage)\r\n","import { ReactNode } from \"react\";\r\nimport { ViewTemplate } from \"../../layout/ViewTemplate\";\r\nimport BaseState from \"../../models/BaseState\";\r\nimport { commonWrapper } from \"../../utils/commonWrapper\";\r\nimport { BasePage } from \"../BasePage\";\r\nimport BaseProps from '../../models/BaseProps';\r\nimport AnchorButton from '../../components/buttons/AnchorButton';\r\n\r\nclass State extends BaseState {\r\n\r\n}\r\nclass MainAdminPage extends BasePage<BaseProps, State> {\r\n    state: Readonly<State> = new State();\r\n    constructor(props:BaseProps)\r\n    {\r\n        super(props, true, \"Admin Area\");\r\n    }\r\n    componentDidMount(): void {\r\n        this.forceUpdate();\r\n    }\r\n    componentDidUpdate(): void {\r\n         \r\n    }\r\n    render(): ReactNode {\r\n        \r\n        return (\r\n            <ViewTemplate title=\"Admin Area\">\r\n                <div className=\"row\">\r\n                    {managementPages.map(m=>\r\n                        <div key={\"mngmnt-menu-\"+m.url} className=\"col-md-3 mb-2\">\r\n                            <AnchorButton className=\"btn btn-light px-5 py-5 w-100\" to={m.url} iconClass={m.iconClass} >\r\n                                {m.label}\r\n                            </AnchorButton>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </ViewTemplate>\r\n        )\r\n    }\r\n}\r\n\r\nconst managementPages = [\r\n    {\r\n        url:'/admin/users',\r\n        label:'Users',\r\n        iconClass:'fas fa-user-circle'\r\n    },\r\n    {\r\n        url:'/admin/schools',\r\n        label:'Schools',\r\n        iconClass:'fas fa-school'\r\n    },\r\n    {\r\n        url:'/admin/employees',\r\n        label:'Employees',\r\n        iconClass:'fas fa-users'\r\n    },\r\n    {\r\n        url:'/admin/semesterperiods',\r\n        label:'Semesters',\r\n        iconClass:'fas fa-calendar-alt'\r\n    },\r\n    {\r\n        url:'/admin/classlevels',\r\n        label:'Classes',\r\n        iconClass:'fas fa-chalkboard-teacher'\r\n    },\r\n    {\r\n        url:'/admin/students',\r\n        label:'Students',\r\n        iconClass:'fas fa-user-graduate'\r\n    },\r\n    {\r\n        url:'/admin/classmembers',\r\n        label:'Class Members',\r\n        iconClass:'fas fa-user-friends'\r\n    }\r\n]\r\n\r\nexport default commonWrapper(MainAdminPage);","\nimport BaseModel from './BaseModel';\nexport default class School extends BaseModel {\n    nis:string;\n    name:string;\n    code:string;\n    address:string;    \n    level:string;\n}","import { ChangeEvent, FormEvent, ReactNode } from \"react\";\r\nimport { ViewTemplate } from \"../../../layout/ViewTemplate\";\r\nimport BaseMasterDataState from '../../../models/BaseMasterDataState';\r\nimport BaseProps from '../../../models/BaseProps';\r\nimport DataTableHeaderValue from \"../../../models/DataTableHeaderValue\";\r\nimport School from \"../../../models/School\";\r\nimport { commonWrapper } from \"../../../utils/commonWrapper\";\r\nimport BaseMasterDataPage from \"./BaseMasterDataPage\";\r\n\r\nclass State extends BaseMasterDataState<School> {\r\n\r\n}\r\nclass SchoolsPage extends BaseMasterDataPage<School, BaseProps, State> {\r\n    \r\n    constructor(props: BaseProps) {\r\n        super(props, \"schools\", \"School Management\");\r\n        this.state = new State();\r\n    }\r\n    get defaultItem(): School { return new School() }\r\n    getDataTableHeaderVals(): DataTableHeaderValue[] {\r\n        return [\r\n            new DataTableHeaderValue(\"nis\", \"NIS\"),\r\n            new DataTableHeaderValue(\"name\", \"Name\"),\r\n            new DataTableHeaderValue(\"level\", \"Level\"),\r\n            new DataTableHeaderValue(\"code\", \"Code\"),\r\n            new DataTableHeaderValue(\"address\", \"Address\"),\r\n        ]\r\n    }\r\n    \r\n    render(): ReactNode {\r\n\r\n        if (this.state.showForm && this.state.item)  {\r\n            return (\r\n                <ViewTemplate title={this.title} back=\"/admin\">\r\n                    {this.closeFormButton}\r\n                    <FormEdit item={this.state.item} handleInputChange={this.handleInputChange} onSubmit={this.formEditSubmit} />\r\n                </ViewTemplate>\r\n            );\r\n        }\r\n        \r\n        const result = this.state.result;\r\n        const items = result?.items;\r\n        return (\r\n            <ViewTemplate title={this.title} back=\"/admin\">\r\n                {result === undefined || items === undefined ?\r\n                    <i>Loading...</i> :\r\n                    <form onSubmit={this.loadFromForm} className=\"mt-5 pl-3 pr-3\" style={{overflow: 'auto'}}>\r\n                       {this.paginationButton}\r\n                        <table className=\"commonDataTable table table-striped\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>No</th>\r\n                                    {this.getDataTableHeaderComponent()}\r\n                                    <th>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {items.map((item, i) => {\r\n                                    return (\r\n                                        <tr key={\"School-\" + item.id}>\r\n                                            <td>{this.startingNumber + i}</td>\r\n                                            <td>{item.nis}</td>\r\n                                            <td>{item.name}</td>\r\n                                            <td>{item.level}</td>\r\n                                            <td>{item.code}</td>\r\n                                            <td>{item.address}</td>\r\n                                            <td>{this.actionButton(item, false)}</td>\r\n                                        </tr>\r\n                                    )\r\n                                })}\r\n                            </tbody>\r\n                            {this.tableFooter}\r\n                        </table>\r\n                    </form>}\r\n            </ViewTemplate>\r\n        )\r\n    }\r\n}\r\n\r\nexport default commonWrapper(SchoolsPage);\r\n\r\nconst FormEdit = (props:{\r\n    item:School, \r\n    onSubmit:(e:FormEvent) => any, \r\n    handleInputChange:(e:ChangeEvent)=>any\r\n}) => {\r\n    const item = props.item;\r\n    return (\r\n        <div className=\"formEditContainer\">\r\n            <form className=\"masterDataForm px-3 py-3 border rounded border-gray\"  onSubmit={props.onSubmit}>\r\n                <p>Nis</p>\r\n                <input className=\"form-control\" name=\"item.nis\" id=\"item.nis\" value={item.nis} onChange={props.handleInputChange} />\r\n                <p>Name</p>\r\n                <input className=\"form-control\" name=\"item.name\" id=\"item.name\" value={item.name} onChange={props.handleInputChange} />\r\n                <p>Code</p>\r\n                <input disabled className=\"form-control\" name=\"item.code\" id=\"item.code\" value={item.code} onChange={props.handleInputChange} />\r\n                <p>Address</p>\r\n                <textarea className=\"form-control\" name=\"item.code\" id=\"item.address\" value={item.address} onChange={props.handleInputChange} />\r\n                <p>Level</p>\r\n                <select className=\"form-control\" name=\"item.level\" id=\"item.level\" value={item.level} onChange={props.handleInputChange}>\r\n                    <option>MA</option>\r\n                    <option>MTS</option>\r\n                </select>\r\n\r\n                <p></p>\r\n                <input className=\"btn btn-primary\" value=\"Save\" type=\"submit\" />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import { ChangeEvent, FormEvent, ReactNode } from \"react\";\r\nimport ActionButton from \"../../../components/buttons/ActionButton\";\r\nimport { ViewTemplate } from \"../../../layout/ViewTemplate\";\r\nimport DataTableHeaderValue from \"../../../models/DataTableHeaderValue\";\r\nimport User from \"../../../models/User\";\r\nimport { commonWrapper } from \"../../../utils/commonWrapper\";\r\nimport { getInputReadableDate } from \"../../../utils/stringUtil\";\r\nimport BaseMasterDataState from '../../../models/BaseMasterDataState';\r\nimport BaseProps from '../../../models/BaseProps';\r\nimport BaseMasterDataPage from \"./BaseMasterDataPage\";\r\n\r\n\r\nconst ACTION_RESET_PASSWORD = 'resetPassword';\r\n\r\nclass State extends BaseMasterDataState<User> {\r\n\r\n}\r\nclass UsersPage extends BaseMasterDataPage<User, BaseProps, State> {\r\n    constructor(props: BaseProps) {\r\n        super(props, \"users\", \"User Management\");\r\n        this.state = new State();\r\n    }\r\n    get defaultItem(): User { return new User() }\r\n    getDataTableHeaderVals = () => {\r\n        return [\r\n            new DataTableHeaderValue(\"email\", \"Email\"),\r\n            new DataTableHeaderValue(\"username\", \"Acct Name\"),\r\n            new DataTableHeaderValue(\"fullName\", \"Full Name\"),\r\n            new DataTableHeaderValue(\"displayName\", \"Display Name\"),\r\n            new DataTableHeaderValue(\"birthDate\", \"Date of Birth\"),\r\n            new DataTableHeaderValue(\"birthPlace\", \"Place of Birth\"),\r\n            new DataTableHeaderValue(\"gender\", \"Gender\"),\r\n            new DataTableHeaderValue(\"role\", \"Role\", false),\r\n            new DataTableHeaderValue(\"phoneNumber\", \"Phone\"),\r\n        ];\r\n    }\r\n    resetPassword = (item:User) => {\r\n        this.patchAction(item, ACTION_RESET_PASSWORD);\r\n    }\r\n    render(): ReactNode {\r\n\r\n        if (this.state.showForm && this.state.item) {\r\n            return (\r\n                <ViewTemplate title={this.title} back=\"/admin\">\r\n                    {this.closeFormButton}\r\n                    <FormEdit item={this.state.item} handleInputChange={this.handleInputChange} onSubmit={this.formEditSubmit} />\r\n                </ViewTemplate>\r\n            );\r\n        }\r\n        \r\n        const result = this.state.result;\r\n        const items = result?.items;\r\n        return (\r\n            <ViewTemplate title={this.title} back=\"/admin\">\r\n                {result === undefined || items === undefined ?\r\n                    <i>Loading...</i> :\r\n                    <form onSubmit={this.loadFromForm} className=\"mt-5 pl-3 pr-3\" style={{overflow: 'auto'}}>\r\n                        {this.paginationButton}\r\n                        <table className=\"commonDataTable table table-striped\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>No</th>\r\n                                    {this.getDataTableHeaderComponent()}\r\n                                    <th>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {items.map((item, i) => {\r\n                                    return (\r\n                                        <tr key={\"user-\" + item.id}>\r\n                                            <td>{this.startingNumber + i}</td>\r\n                                            <td>{item.email}</td>\r\n                                            <td>{item.username}</td>\r\n                                            <td>{item.fullName}</td>\r\n                                            <td>{item.displayName}</td>\r\n                                            <td>{new Date(item.birthDate).toLocaleDateString()}</td>\r\n                                            <td>{item.birthPlace}</td>\r\n                                            <td>{item.gender}</td>\r\n                                            <td>\r\n                                                {item.authorities.map(a => <div className=\"badge bg-success  me-1\">{a.name?.toLocaleLowerCase()}</div>)}\r\n                                            </td>\r\n                                            <td>{item.phoneNumber}</td>\r\n                                            \r\n                                            <td>\r\n                                                <div \r\n                                                    className=\"d-flex\" \r\n                                                    style={{flexWrap: 'nowrap', width: '150px'}}>\r\n                                                    <ActionButton \r\n                                                        iconClass=\"fas fa-lock-open\" \r\n                                                        className=\"btn btn-warning btn-sm me-2\"\r\n                                                        onClick={() => this.resetPassword(item)}\r\n                                                    >\r\n                                                    </ActionButton>\r\n                                                    {this.actionButton(item)}\r\n                                                </div>\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                })}\r\n                            </tbody>\r\n                            {this.tableFooter}\r\n                        </table>\r\n                    </form>}\r\n            </ViewTemplate>\r\n        )\r\n    }\r\n}\r\n\r\nconst FormEdit = (props:{\r\n    item:User, \r\n    onSubmit:(e:FormEvent) => any, \r\n    handleInputChange:(e:ChangeEvent)=>any\r\n}) => {\r\n    const item = props.item;\r\n    const onChange = props.handleInputChange;\r\n    return (\r\n        <div className=\"formEditContainer\">\r\n            <form className=\"masterDataForm px-3 py-3 border rounded border-gray\"  onSubmit={props.onSubmit}>\r\n                <p>Full Name</p>\r\n                <input className=\"form-control\" id=\"item.fullName\" name=\"item.fullName\" value={item.fullName}  onChange={onChange} required/>\r\n                <p>Display Name</p>\r\n                <input className=\"form-control\" id=\"item.displayName\" name=\"item.displayName\" value={item.displayName}  onChange={onChange} required/>\r\n                <p>Email</p>\r\n                <input className=\"form-control\" id=\"item.email\" name=\"item.email\" type=\"email\" value={item.email}  onChange={onChange} required/>\r\n                <p>Gender</p>\r\n                <select className=\"form-control\" value={item.gender} id=\"item.gender\" name=\"item.gender\" onChange={onChange} required>\r\n                    <option>MALE</option>\r\n                    <option>FEMALE</option>\r\n                </select>\r\n                <p>Birth Date</p>\r\n                <input type=\"date\" className=\"form-control\" id=\"item.birthDate\" name=\"item.birthDate\" value={getInputReadableDate(new Date(item.birthDate))} onChange={onChange} required/>\r\n                <p>Birth Place</p>\r\n                <input className=\"form-control\" id=\"item.birthPlace\" name=\"item.birthPlace\" value={item.birthPlace} onChange={onChange} required/>\r\n                \r\n                <p>Phone Number</p>\r\n                <input className=\"form-control\" id=\"item.phoneNumber\" name=\"item.phoneNumber\" value={item.phoneNumber} onChange={onChange} required/>\r\n                \r\n                <p></p>\r\n                <input className=\"btn btn-primary\" value=\"Save\" type=\"submit\" />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default commonWrapper(UsersPage);\r\n","const ErrorMessage = (props:{children:any, show?:boolean}) => {\n\n    if (props.show === false)\n    {\n        return null;\n    }\n    return (\n        <div className=\"alert alert-danger\">\n            {props.children}\n        </div>\n    )\n}\n\nexport default ErrorMessage;","const InfoMessage = (props:{children:any, show?:boolean}) => {\n\n    if (props.show === false)\n    {\n        return null;\n    }\n    return (\n        <div className=\"alert alert-info\">\n            {props.children}\n        </div>\n    )\n}\n\nexport default InfoMessage;","import { randomString } from \"./stringUtil\";\r\nimport React, { ChangeEvent } from 'react'\r\n\r\nexport const readFileContentUtf8 = (file:File): Promise<string> => {\r\n\r\n    return new Promise((resolve, reject)=>{\r\n        const reader = new FileReader();\r\n        reader.readAsText(file, \"UTF-8\");\r\n        reader.onload = (evt) => {\r\n            let el = evt.target;\r\n            if (!el)\r\n            {\r\n                reject(new Error(\"Invalid element\"));\r\n                return;\r\n            }\r\n            if (typeof el.result === \"string\")\r\n            {\r\n                resolve(el.result);\r\n            }\r\n            else\r\n            {\r\n                reject(new Error(\"Invalid result type\"));\r\n            }\r\n        }\r\n        reader.onerror = reject;\r\n    })\r\n}\r\n\r\nexport const downloadFile = (data:any, filename:string, type:\"text/plain\" | \"application/json\") : void => {\r\n    var file = new Blob([data], {type: type});\r\n    if ((window.navigator as any).msSaveOrOpenBlob) // IE10+\r\n        (window.navigator as any).msSaveOrOpenBlob(file, filename);\r\n    else { // Others\r\n        var a = document.createElement(\"a\"),\r\n                url = URL.createObjectURL(file);\r\n        a.href = url;\r\n        a.download = filename;\r\n        document.body.appendChild(a);\r\n        a.click();\r\n        setTimeout(function() {\r\n            document.body.removeChild(a);\r\n            window.URL.revokeObjectURL(url);  \r\n        }, 0); \r\n    }\r\n}\r\n\r\nexport const CommonTable = (props:{className:string, content:any[][]}) => {\r\n    return (\r\n        <table className={props.className}>\r\n            <tbody>\r\n                {props.content.map(row=>{\r\n                    const rowKey = \"row-\"+randomString(5);\r\n                    return <tr key={rowKey}>\r\n                        {row.map((col, i)=>{\r\n                            return <td key={rowKey+ \"-\" + i}>{col}</td>\r\n                        })}\r\n                    </tr>\r\n                })}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}","import { BasePage } from \"../BasePage\";\nimport BaseProps from '../../models/BaseProps';\nimport { FormEvent, ReactNode } from \"react\";\nimport { ViewTemplate } from \"../../layout/ViewTemplate\";\nimport { commonWrapper } from './../../utils/commonWrapper';\nimport BaseState from './../../models/BaseState';\nimport { Link } from \"react-router-dom\";\nimport ErrorMessage from './../../components/messages/ErrorMessage';\nimport InfoMessage from './../../components/messages/InfoMessage';\nimport { invokeLater } from './../../utils/eventUtil';\nimport ActionButton from './../../components/buttons/ActionButton';\nimport { CommonTable } from \"../../utils/componentUtil\";\n\nclass State  extends BaseState {\n    username:string            = \"\";\n    password:string         = \"\";\n    loading:boolean         = false;\n    loginSuccess:boolean    = false;\n}\nclass LoginPage extends BasePage<BaseProps, State> {\n    state: Readonly<State> = new State();\n   \n    constructor(props:BaseProps)\n    {\n        super(props, false, \"Login\");\n    }\n    onSubmit = (e:FormEvent) => {\n        console.log(\"ON submit login\");\n        e.preventDefault();\n        this.setState({ loading: true });\n\n        this.authService.login(this.state.username, this.state.password)\n            .then((user) => {\n                this.setState({ error: undefined, loginSuccess: true }, \n                    () => invokeLater(this.handleSuccessLogin, 500) );\n            })\n            .catch((err) => {\n                this.setState({ error: new Error(err?.message) });\n            })\n            .finally(() => {\n                this.setState({ loading: false });\n            })\n    }\n\n    handleSuccessLogin = () => {\n        if (this.authService.isAdmin) {\n            this.navigate(\"/admin\");\n            return;\n        }\n        this.gotoHomePage();\n    }\n\n    componentDidMount(): void {\n        if (this.authService.loggedIn)\n        {\n            this.navigate(\"/\");\n        }\n        \n    }\n\n    render(): ReactNode {\n        \n        if (this.state.loginSuccess)\n        {\n            return (\n                <ViewTemplate>\n                    <div className=\"pt-5 pb-5 pl-5 pr-5 text-center\">\n                        <InfoMessage >\n                            Login Succes\n                        </InfoMessage> \n                    </div>\n                </ViewTemplate>\n            )\n        }\n        return (\n            <ViewTemplate >\n                <form onSubmit={this.onSubmit} className=\"row mt-3 \">\n                    <div className=\"col-md-4\"/>\n                    <div className=\"col-md-4 bg-light\" style={{padding: 20}}>\n                        \n                        <ErrorMessage show={this.state.error !== undefined}>\n                            {this.state.error?.message}\n                        </ErrorMessage> \n                        <CommonTable\n                            className=\"table table-borderless\"\n                            content={[\n                                [\n                                    \"Username\",\n                                    <input \n                                        id=\"username\"\n                                        name=\"username\"\n                                        value={this.state.username}\n                                        onChange={this.handleInputChange}\n                                        className=\"form-control\" \n                                        required/>            \n                                ],\n                                [\n                                    \"Password\",\n                                    <input \n                                        type=\"password\"\n                                        name=\"password\"\n                                        id=\"password\"\n                                        value={this.state.password}\n                                        onChange={this.handleInputChange}\n                                        className=\"form-control\"\n                                        required/>\n                                ]\n                            ]} />\n                        { this.state.loading? \n                        <i>Please wait...</i> : \n                        <ActionButton type=\"submit\" className=\"btn btn-success mt-3\">\n                            Login\n                        </ActionButton> }\n                        <p className=\"mt-3\">\n                            Don't have account? Contact admin\n                        </p>\n                    </div>\n                </form>\n            </ViewTemplate>\n        )\n    }\n}\n\nexport default commonWrapper(LoginPage)","import React, { Component } from \"react\";\r\nimport { ViewTemplate } from \"../../layout/ViewTemplate\";\r\nimport BaseProps from \"../../models/BaseProps\";\r\nimport { BasePage } from \"../BasePage\";\r\n\r\nclass Props extends BaseProps {\r\n    \r\n    message:string\r\n}\r\nexport class ErrorView extends BasePage<Props, any> {\r\n    constructor(props:Props)\r\n    {\r\n        super(props, false, \"Error\");\r\n    }\r\n    render(): React.ReactNode {\r\n        return (\r\n            <ViewTemplate title=\"Oops !\">\r\n                <div className=\"alert alert-danger mt-3\">\r\n                    <p>{this.props.message}</p>\r\n                </div>    \r\n            </ViewTemplate>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport { ViewTemplate } from '../../layout/ViewTemplate'\r\nimport { BasePage } from '../BasePage'\r\n\r\nimport './Home.css'\r\nimport { invokeLater } from './../../utils/eventUtil';\r\nimport BaseState from '../../models/BaseState';\r\nimport BaseProps from '../../models/BaseProps';\r\nimport { commonWrapper } from '../../utils/commonWrapper';\r\nimport Settings from './../../settings';\r\n\r\n\r\nclass State extends BaseState {\r\n\r\n    showTitle: boolean = false;\r\n    welcomingWords: string[] = [];\r\n\r\n}\r\nclass Home extends BasePage<BaseProps, State> {\r\n    state: State = new State();\r\n    welcomingWord: string;\r\n    private _mounted = false;\r\n    get isMounted() { return this._mounted; }\r\n    private set isMounted(val: boolean) { this._mounted = val; }\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.title = \r\n        this.welcomingWord = Settings.App.uiSetting.defaultTitle;\r\n    }\r\n    componentDidMount() {\r\n        this.startDisplayWelcomingWord();\r\n        this.isMounted = true;\r\n    }\r\n    componentWillUnmount() {\r\n        this.isMounted = false;\r\n    }\r\n    startDisplayWelcomingWord = () => {\r\n        if (this.state.welcomingWords.join(\"\") !== this.welcomingWord) {\r\n            invokeLater(() => {\r\n                if (!this.isMounted) {\r\n                    return;\r\n                }\r\n                const words = this.state.welcomingWords;\r\n                words.push(this.welcomingWord[this.welcomingWord.length - (this.welcomingWord.length - words.length)]);\r\n                this.setState({ welcomingWords: words }, this.startDisplayWelcomingWord);\r\n            }, 200);\r\n\r\n        }\r\n    }\r\n    componentDidUpdate() {\r\n\r\n    }\r\n\r\n    render(): React.ReactNode {\r\n\r\n        return (\r\n            <ViewTemplate attributes={{ style: { textAlign: 'center', paddingTop: '30vh' } }}>\r\n                <WelcomingWord word={this.state.welcomingWords.join(\"\")} />\r\n            </ViewTemplate>\r\n        )\r\n    }\r\n}\r\nconst WelcomingWord = (props: { word: string }) => {\r\n\r\n    return (\r\n        <div\r\n            style={{fontSize: '3em', fontWeight: 'bold'}} \r\n            className='text-primary text-center'>\r\n                {props.word}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default commonWrapper(Home);\r\n\r\n// const Icon = () => {\r\n//     return (\r\n//         <svg className='mb-5' xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 600 600\" width=\"200\" height=\"200\">\r\n\r\n//             <circle className='iconStroke strokeDark' fill=\"none\" strokeWidth={190} cx=\"237\" cy=\"310\" r=\"95\" />\r\n//             <circle className='iconStroke strokeOrange' fill=\"none\" strokeWidth={30} cx=\"237\" cy=\"310\" r=\"204.02205763103166\" />\r\n//             <circle className='iconStroke strokeOrange' fill=\"none\" strokeWidth={150} cx=\"362\" cy=\"310\" r=\"75\" />\r\n//             {/* <circle className=\"iconBg\" style={{fill:this.state.orangeBgColor}} strokeWidth={80} cx=\"362\" cy=\"310\" r=\"120\"  /> */}\r\n//             <circle className='iconStroke strokeDark' fill=\"none\" strokeWidth={80} cx=\"362\" cy=\"310\" r=\"187.3846311734236\" />\r\n\r\n//         </svg>\r\n//     );\r\n// }","import { ReactNode } from \"react\";\r\nimport { ViewTemplate } from \"../../layout/ViewTemplate\";\r\nimport BaseProps from \"../../models/BaseProps\";\r\nimport BaseState from \"../../models/BaseState\";\r\nimport { commonWrapper } from \"../../utils/commonWrapper\";\r\nimport { BasePage } from \"../BasePage\";\r\n\r\nclass Dashboard extends BasePage<BaseProps, BaseState> {\r\n    constructor(props:any)\r\n    {\r\n        super(props, true, \"Dashboard\");\r\n    }\r\n    render(): ReactNode {\r\n        \r\n        return (\r\n            <ViewTemplate title=\"Dashboard\">\r\n                <div className=\"alert alert-success\">Hello, {this.authService.loggedUser?.displayName}</div>\r\n            </ViewTemplate>\r\n        );\r\n    }\r\n}\r\n\r\nexport default commonWrapper(Dashboard);","import { FormEvent, ReactNode } from \"react\";\r\nimport { ViewTemplate } from \"../../layout/ViewTemplate\";\r\nimport BaseProps from \"../../models/BaseProps\";\r\nimport BaseState from \"../../models/BaseState\";\r\nimport User from \"../../models/User\";\r\nimport { commonWrapper } from \"../../utils/commonWrapper\";\r\nimport { BasePage } from \"../BasePage\";\r\n\r\nclass State extends BaseState {\r\n    user :User = new User()\r\n}\r\nclass EditProfile extends BasePage<BaseProps, State> {\r\n    state = new State();\r\n    constructor(props:BaseProps)\r\n    {\r\n        super(props, false, \"Edit Profile\"); \r\n    }\r\n\r\n    componentDidMount(): void {\r\n        if (this.authService.loggedUser)\r\n            this.setState({user: this.authService.loggedUser})\r\n    }\r\n\r\n    onSubmit = (e:FormEvent) => {\r\n        e.preventDefault();\r\n        this.dialog.showConfirm(\"Update Profile\", \"Save user data?\")\r\n            .then(ok => {\r\n                this.authService.updateProfile(this.state.user)\r\n                    .then(response=>{\r\n                        this.dialog.showInfo(\"Update Success\", \"Profile has been updated\");\r\n                    })\r\n                    .catch(console.error)\r\n            })\r\n            .catch(console.error)\r\n    }\r\n\r\n    render(): ReactNode {\r\n        const user = this.state.user;\r\n        return (\r\n            <ViewTemplate title=\"Edit Profile\" back=\"/dashboard\">\r\n                <form className=\"border border-gray rounded px-3 py-3\" onSubmit={this.onSubmit}>\r\n                    <p>Email</p>\r\n                    <input className=\"form-control\" name=\"user.email\" value={user.email} onChange={this.handleInputChange} />\r\n                    <p>Username</p>\r\n                    <input className=\"form-control\" name=\"user.username\" value={user.username} onChange={this.handleInputChange}/>\r\n                    <p>Display Name</p>\r\n                    <input className=\"form-control\" name=\"user.displayName\" value={user.displayName} onChange={this.handleInputChange}/>\r\n                    <p>Password <i>Leave it empty if you don't want to change it</i></p>\r\n                    <input autoComplete=\"off\" className=\"form-control\" type=\"password\" name=\"user.editPassword\" value={user.editPassword} onChange={this.handleInputChange} />\r\n                    <p/>\r\n                    <input className=\"btn btn-success\" type=\"submit\" value=\"Save\" />\r\n                </form>\r\n            </ViewTemplate>\r\n        )\r\n    }\r\n}\r\n\r\nexport default commonWrapper(EditProfile);","import BaseModel from \"./BaseModel\";\nimport Employee from \"./Employee\";\n\nexport default class SemesterPeriod extends BaseModel {\n    semester: number = 1;\n    year: string;\n\n    active: boolean;\n\n    direktur: Employee;\n    bendahara: Employee;\n    pengawasSekolah: Employee;\n    headHRD: Employee;\n    hearMR: Employee;\n    headRnD: Employee;\n    headLogistic: Employee;\n    headPublicRelation: Employee;\n    headLanguage: Employee;\n    headMAKafila: Employee;\n    headMAKafilaFullday: Employee;\n    headMtsKafila: Employee;\n    headMtsAlKahfi: Employee;\n    headMtsKafilaIbnuMasud: Employee;\n    headPesantren: Employee;\n    wakabidTahfiz: Employee;\n    wakabidAsrama: Employee;\n\n    //\n    adminKiis: Employee;\n    adminMAKafila: Employee;\n    adminMAKafilaFullday: Employee;\n    adminMtsAlKahfi: Employee;\n    adminMtsKafilaIbnuMasud: Employee;\n    adminTahfiz: Employee;\n    adminAsrama: Employee;\n\n    //\n    pjQurban: Employee;\n    pjRamadhan: Employee;\n    pjPromosiPSB: Employee;\n    pjWebMedia: Employee;\n    pjTamuFO: Employee;\n    pjAlumni: Employee;\n    pjUtsUas: Employee;\n    pjEvaluasiPengembanganKurikulum: Employee;\n    pjLabKomputer: Employee;\n    pjLabIPA: Employee;\n    pjLabBahasa: Employee;\n    pjBinaPrestasi: Employee;\n    pjPerpustakaan: Employee;\n    pjBK: Employee;\n    pjBahasaArab: Employee;\n    pjBahasaInggris: Employee;\n    pjUKS: Employee;\n    pjOpkiis: Employee;\n    pjDKM: Employee;\n    pjKesiswaan: Employee;\n    pjKurikulum: Employee;\n\n    public static EmployeeFields = [\n        'direktur', 'bendahara', 'pengawasSekolah', 'headHRD', 'hearMR', 'headRnD', 'headLogistic', 'headPublicRelation', 'headLanguage', 'headMAKafila', 'headMAKafilaFullday', 'headMtsKafila', 'headMtsAlKahfi', 'headMtsKafilaIbnuMasud', 'headPesantren', 'wakabidTahfiz', 'wakabidAsrama', \n        'adminKiis', 'adminMAKafila', 'adminMAKafilaFullday', 'adminMtsAlKahfi', 'adminMtsKafilaIbnuMasud', 'adminTahfiz', 'adminAsrama',\n        'pjQurban', 'pjRamadhan', 'pjPromosiPSB', 'pjWebMedia', 'pjTamuFO', 'pjAlumni', 'pjUtsUas', 'pjEvaluasiPengembanganKurikulum', 'pjLabKomputer', 'pjLabIPA', 'pjLabBahasa', 'pjBinaPrestasi', 'pjPerpustakaan', 'pjBK', 'pjBahasaArab', 'pjBahasaInggris', 'pjUKS', 'pjOpkiis', 'pjDKM', 'pjKesiswaan', 'pjKurikulum'   ];\n}","import { ChangeEvent, Component, FormEvent, ReactNode } from \"react\";\r\nimport { ViewTemplate } from \"../../../layout/ViewTemplate\";\r\nimport { commonWrapper } from \"../../../utils/commonWrapper\";\r\nimport BaseProps from '../../../models/BaseProps';\r\nimport BaseMasterDataPage from \"./BaseMasterDataPage\";\r\nimport BaseMasterDataState from '../../../models/BaseMasterDataState';\r\nimport ActionButton from \"../../../components/buttons/ActionButton\";\r\nimport DataTableHeaderValue from \"../../../models/DataTableHeaderValue\";\r\nimport SemesterPeriod from '../../../models/SemesterPeriod';\r\nimport Employee from '../../../models/Employee';\r\nimport MasterDataService from '../../../services/MasterDataService';\r\nimport { resolve } from \"inversify-react\";\r\nimport ControlledComponent from \"../../ControlledComponent\";\r\nimport { randomString } from '../../../utils/stringUtil';\r\nimport ToastService from '../../../services/ToastService';\r\n\r\nclass State extends BaseMasterDataState<SemesterPeriod> {\r\n\r\n}\r\nclass SemesterPeriodsPage extends BaseMasterDataPage<SemesterPeriod, BaseProps, State> {\r\n    \r\n    constructor(props: BaseProps) {\r\n        super(props, \"semesterperiods\", \"Semester Management\");\r\n        this.state = new State();\r\n    }\r\n    get defaultItem(): SemesterPeriod { return new SemesterPeriod() }\r\n    getDataTableHeaderVals(): DataTableHeaderValue[] {\r\n        const employeeFields = SemesterPeriod.EmployeeFields.map(field => {\r\n            return new DataTableHeaderValue(`${field}.user.fullName`, field);\r\n        })\r\n        return [\r\n            new DataTableHeaderValue(\"semester\", \"Semester\"),\r\n            new DataTableHeaderValue(\"year\", \"Year\"),\r\n            new DataTableHeaderValue(\"active\", \"Active\"),\r\n            ...employeeFields\r\n        ]\r\n    }\r\n    setActive = (item:SemesterPeriod) => {\r\n        this.patchAction(item, 'activate');\r\n    }\r\n    setEmployeeInCharge = (item:SemesterPeriod, field:string) => {\r\n        this.dialog.showContent(\"Set \" + field, <SetEmployeeForm field={field} item={item} update={this.update} />);\r\n    }\r\n    employeeCellFields = (item:any) => SemesterPeriod.EmployeeFields.map(field => {\r\n        return (\r\n            <td key={\"emp-field-\" + randomString(10)}>\r\n                <div className=\"row\" style={{flexWrap: 'nowrap'}}>\r\n                    <div className=\"col-3\">\r\n                        <ActionButton \r\n                            iconClass=\"fas fa-user-edit\" \r\n                            className=\"btn btn-sm btn-success me-3\" \r\n                            onClick={() => this.setEmployeeInCharge(item, field)} />\r\n                    </div>\r\n                    <div className=\"col-8 no-wrap\">{item[field]?.user.fullName.trim()}</div>\r\n                </div>\r\n            </td>\r\n        )\r\n    })\r\n    \r\n    render(): ReactNode {\r\n\r\n        if (this.state.showForm && this.state.item) {\r\n            return (\r\n                <ViewTemplate title={this.title} back=\"/admin\">\r\n                    {this.closeFormButton}\r\n                    <FormEdit item={this.state.item} handleInputChange={this.handleInputChange} onSubmit={this.formEditSubmit} />\r\n                </ViewTemplate>\r\n            );\r\n        }\r\n        \r\n        const result = this.state.result;\r\n        const items = result?.items;\r\n        \r\n        return (\r\n            <ViewTemplate title={this.title} back=\"/admin\">\r\n                {this.showFormButton}\r\n                {result === undefined || items === undefined ?\r\n                    <i>Loading...</i> :\r\n                    <form onSubmit={this.loadFromForm} className=\"mt-5 pl-3 pr-3\" style={{overflow: 'auto'}}>\r\n                       {this.paginationButton}\r\n                        <table className=\"commonDataTable table table-striped\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>No</th>\r\n                                    <th>Action</th>\r\n                                    {this.getDataTableHeaderComponent()}\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {items.map((item, i) => {\r\n                                    return (\r\n                                        <tr key={\"smt-period-\" + item.id}>\r\n                                            <td>{this.startingNumber + i}</td>\r\n                                            <td>\r\n                                                <div className=\"mx-2\" style={{display: 'flex', flexWrap: 'nowrap'}}>\r\n                                                    <ActionButton \r\n                                                        onClick={() => this.setActive(item)} \r\n                                                        iconClass=\"fas fa-calendar-check\"\r\n                                                        className=\"btn-text btn btn-sm text-primary me-1\" \r\n                                                        disabled={item.active === true} />\r\n                                                    {this.actionButton(item)}\r\n                                                </div>\r\n                                            </td>\r\n                                            <td className=\"text-center\">{item.semester}</td>\r\n                                            <td>{item.year}</td>\r\n                                            <td>\r\n                                                {item.active ? <b className=\"text-success\">active</b> : <i>not active</i> }\r\n                                            </td>\r\n                                            {this.employeeCellFields(item)}\r\n                                        </tr>\r\n                                    )\r\n                                })}\r\n                            </tbody>\r\n                            {this.tableFooter}\r\n                        </table>\r\n                    </form>}\r\n            </ViewTemplate>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default commonWrapper(SemesterPeriodsPage);\r\n\r\nconst FormEdit = (props:{\r\n    item:SemesterPeriod, \r\n    onSubmit:(e:FormEvent) => any, \r\n    handleInputChange:(e:ChangeEvent)=>any\r\n}) => {\r\n    const item = props.item;\r\n    return (\r\n        <div className=\"formEditContainer\">\r\n            <form className=\"masterDataForm px-3 py-3 border rounded border-gray\"  onSubmit={props.onSubmit}>\r\n                <p>Semester</p>\r\n                <select className=\"form-control\" name=\"item.semester\" id=\"item.semester\" value={item.semester} onChange={props.handleInputChange} required>\r\n                    <option>1</option>\r\n                    <option>2</option>\r\n                </select>\r\n                <p>Year. <i>example: 2020-2021</i></p>\r\n                <input className=\"form-control\" name=\"item.year\" id=\"item.year\" value={item.year} onChange={props.handleInputChange} required/>\r\n                \r\n                <p></p>\r\n                <input className=\"btn btn-primary\" value=\"Save\" type=\"submit\" />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\ntype SetEmployeeFormProps = { item: SemesterPeriod, field:string, update:(item:SemesterPeriod) => any };\r\ntype SetEmployeeFormState = { searchEmployee:string, employees: Employee[], selectedEmployee: Employee | undefined };\r\n\r\nclass SetEmployeeForm extends ControlledComponent<SetEmployeeFormProps, SetEmployeeFormState> {\r\n    \r\n    @resolve(MasterDataService)\r\n    private service:MasterDataService;\r\n    @resolve(ToastService)\r\n    private toast:ToastService;\r\n\r\n    constructor(props:SetEmployeeFormProps) {\r\n        super(props);\r\n        this.state = {\r\n            searchEmployee: '',\r\n            employees: [],\r\n            selectedEmployee: undefined,\r\n        }\r\n    }\r\n\r\n    search = (e:FormEvent) => {\r\n        e.preventDefault();\r\n        this.service.list<Employee>('employees', 0, 10, 'user.fullName', false, 'user.fullName:' + this.state.searchEmployee)\r\n            .then((result) => {\r\n                this.handleSearchEmployee(result.items);\r\n            })\r\n            .catch(console.error);\r\n    }\r\n    handleSearchEmployee = (items:Employee[]) => {\r\n        if (!items || items.length === 0) {\r\n            this.toast.showDanger(\"No employee contains name \\\"\" + this.state.searchEmployee +\"\\\" was found\");\r\n            return;\r\n        }\r\n        this.setState({ employees: items });\r\n    }\r\n    closeDropdown = () => {\r\n        this.setState({ employees: [] });\r\n    }\r\n    setSelectedEmployee = (e:Employee) => {\r\n        this.setState({ selectedEmployee: e, searchEmployee: e.user.fullName }, this.closeDropdown);\r\n    }\r\n    submit = () => {\r\n        if (!this.state.selectedEmployee) {\r\n            this.toast.showDanger(\"Invalid employee\");\r\n            return;\r\n        }\r\n        const item:any = this.props.item;\r\n        item[this.props.field] = this.state.selectedEmployee;\r\n        this.props.update(item);\r\n    }\r\n\r\n    render(): ReactNode {\r\n        const {employees} = this.state;\r\n        return (\r\n            <div>\r\n                <p>Select Employee</p>\r\n                <form onSubmit={this.search} className=\"my-5 mx-5 pb-5\">\r\n                    <div className=\"input-group\">\r\n                        <input \r\n                            type=\"search\"\r\n                            className=\"form-control\" \r\n                            name=\"searchEmployee\" \r\n                            value={this.state.searchEmployee}\r\n                            placeholder=\"Full Name\"\r\n                            onChange={this.handleInputChange} \r\n                            required />\r\n                        <div className=\"input-group-append\">\r\n                            <input type=\"submit\" className=\"btn btn-primary\" value={\"Search\"}/>\r\n                        </div>\r\n                    </div>\r\n                        \r\n                    <div style={{position: 'absolute',width:'75%'}}>\r\n                        { employees.length > 0 ?\r\n\r\n                        <div className=\"bg-light border border-dark px-2 py-1 w-100\" style={{position: 'relative'}}>\r\n                            <ActionButton className=\"btn btn-text btn-sm\" iconClass=\"fas fa-times\" onClick={this.closeDropdown}>close</ActionButton>\r\n                            <div style={{overflowY:'auto', height: '100px'}}>\r\n                                <div className=\"no-wrap\" style={{ width: 'max-content' }}>\r\n                                    {employees.map(e => {\r\n                                        return (\r\n                                            <div key={\"set-emp-\"+e.id}>\r\n                                                <a className=\"btn btn-text clickable\" onClick={()=>this.setSelectedEmployee(e)}>\r\n                                                    {e.user.fullName.trim()}, nisdm: {e.nisdm}\r\n                                                </a>\r\n                                            </div>\r\n                                        );\r\n                                    })}\r\n                                </div>\r\n                            </div>\r\n                        </div> : null }\r\n                    </div>\r\n                    <button type=\"button\" className=\"btn btn-success mt-3\" onClick={this.submit}>\r\n                        Save Changes\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","\nimport BaseModel from './BaseModel';\nimport School from './School';\nexport default class ClassLevel extends BaseModel {\n\n    level: number = 1;\n    letter: string = \"A\";\n    description: string = \"\";\n    school: School;\n\n    semester: number = 1;\n    year: string = \"\";\n    semesterActive: boolean;\n    memberCount: number = 0;\n}","\nimport BaseModel from './BaseModel';\nimport User from './User';\nexport default class Student extends BaseModel {\n    nisKiis: string;\n    nisn: string;\n\n    user: User = new User();\n\n    address: string;\n\n    city: string;\n    province: string;\n\n    /**\n     * ===========================\n     * Family\n     * ===========================\n     */\n\n    siblingNum: number;\n    siblingCount: number;\n    // father\n    fatherName: string;\n    fatherBirthDate: Date;\n    fatherBirthPlace: string;\n    fatherEducation: string;\n    fatherPhoneNumber: string;\n    fatherOccupation: string;\n    fatherAddress: string;\n    fatherIncome: number;\n\n    // mother\n    motherName: string;\n    motherBirthDate: Date;\n    motherBirthPlace: string;\n    motherEducation: string;\n    motherPhoneNumber: string;\n    motherOccupation: string;\n    motherAddress: string;\n    motherIncome: number;\n\n    /**\n     * ===========================\n     * Academic\n     * ===========================\n     */\n    originSchool: string;\n    sttbNumber: string;\n    entranceDate: Date;\n    entranceClass: string;\n    transferFrom: string;\n    transferReason: string;\n    entranceCertificateScore: string;\n    leaveSchool: boolean;\n    leaveReason: string;\n\n    educationFinished: boolean;\n\n    graduationDateMts: Date;\n    certificateNumberMts: string;\n    seniorLevelSchool: string;\n\n    graduationDateMa: Date;\n    certificateNumberMa: string;\n\n    /**\n     * =========================\n     * Alumni\n     * =========================\n     */\n    graduationCeremonyDate: Date;\n    highEducationUniv: string;\n    highEducationMajor: string;\n    workDate: Date;\n    workCompany: string;\n\n\n}","\nimport BaseModel from './BaseModel';\nimport Student from './Student';\nimport ClassLevel from './ClassLevel';\nexport default class ClassMember extends BaseModel{\n    student: Student = new Student();\n    classLevel: ClassLevel = new ClassLevel();\n}","\nimport { Component, ReactNode } from 'react';\nimport Student from '../../../models/Student';\nimport ClassLevel from './../../../models/ClassLevel';\nimport ClassMember from './../../../models/ClassMember';\nimport { resolve } from 'inversify-react';\nimport RestClient from './../../../apiClients/RestClient';\nimport ClassMemberService from './../../../services/ClassMemberService';\nimport ControlledComponent from '../../ControlledComponent';\nimport ToastService from './../../../services/ToastService';\nimport MasterDataService from '../../../services/MasterDataService';\nimport ActionButton from '../../../components/buttons/ActionButton';\nimport DialogService from './../../../services/DialogService';\n\ntype Props = {\n    item: ClassLevel,\n}\ntype State = {\n    members: ClassMember[],\n    students: Student[],\n    searchStudent?: string,\n}\n\nexport default class ClassLevelMembersPage extends ControlledComponent<Props, State> {\n    @resolve(ClassMemberService)\n    private service: ClassMemberService;\n    @resolve(MasterDataService)\n    private masterData: MasterDataService;\n    @resolve(ToastService)\n    private toast: ToastService;\n    @resolve(DialogService)\n    private dialog: DialogService;\n\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            members: [],\n            students: [],\n            searchStudent: \"\"\n        }\n    }\n    componentDidMount() {\n        this.loadMembers();\n    }\n    loadMembers = () => {\n        this.service.getMembers(this.props.item.id)\n            .then(response => this.setState({ members: response }))\n            .catch(console.error);\n    }\n    loadStudents = () => {\n        const { searchStudent } = this.state;\n        if (!searchStudent) {\n            return;\n        }\n        this.masterData.list<Student>('students', 0, 10, 'user.fullName', false, 'user.fullName:' + searchStudent)\n            .then(response => {\n                if (response.items.length > 0) {\n                    this.setState({ students: response.items });\n                } else {\n                    this.toast.showDanger(\"Student not found\");\n                }\n            })\n            .catch((e) => this.toast.showDanger(e.message));\n    }\n    closeStudentDropdown = () => this.setState({ students: [] });\n    addStudent = async (student: Student) => {\n        const ok = await this.dialog.showConfirm(\"Add New Student\", `Add ${student.user.fullName} to this class?`);\n        if (!ok) {\n            return;\n        }\n        const member = new ClassMember();\n        member.student = student;\n        member.classLevel = this.props.item;\n\n        this.masterData.post<ClassMember>('classmembers', member)\n            .then(() => {\n                this.toast.showInfo(\"Student has been added\");\n                this.setState({ searchStudent: '' }, this.loadMembers);\n            })\n            .catch((e:any) => this.toast.showDanger(\"Failed to add student: \" + e.message))\n            .finally(this.closeStudentDropdown);\n    }\n    deleteMember = async (member: ClassMember) => {\n        const ok = await this.dialog.showConfirmDanger(\"Remove Student\", `Do you want to remove ${member.student.user.fullName} from class?`);\n        if (!ok) {\n            return;\n        }\n        this.masterData.delete<ClassMember>('classmembers', member.id)\n            .then(() => {\n                this.toast.showInfo(\"Student has been removed\");\n                this.loadMembers();\n            })\n            .catch(console.error);\n    }\n\n    render(): ReactNode {\n        const { students, searchStudent, members } = this.state;\n        const { item } = this.props;\n        return (\n            <div>\n                <h5>Members of {item.level}{item.letter} {item.school?.name}</h5>\n                <p>Period: semester {item.semester}, year {item.year}</p>\n                <form className='mb-3' onSubmit={(e) => {\n                    e.preventDefault();\n                    this.loadStudents();\n                }}>\n                    <p>Add Student</p>\n                    <div className=\"input-group\">\n                        <input \n                            type=\"search\"\n                            className=\"form-control\" \n                            name=\"searchStudent\" \n                            value={searchStudent}\n                            placeholder=\"Full Name\"\n                            onChange={this.handleInputChange} \n                            required \n                        />\n                        <div className=\"input-group-append\">\n                            <input type=\"submit\" className=\"btn btn-primary\" value={\"Search\"}/>\n                        </div>\n                    </div>\n                        \n                    <div style={{ position: 'absolute',width:'75%' }}>\n                        {students.length > 0 ?\n                        <div className=\"bg-light border border-dark px-2 py-1 w-100\" style={{position: 'relative'}}>\n                            <ActionButton \n                                className=\"btn btn-text btn-sm\" \n                                iconClass=\"fas fa-times\" \n                                onClick={this.closeStudentDropdown}\n                                children=\"Close\"\n                            />\n                            <div style={{overflowY:'auto', height: '100px'}}>\n                                <div className=\"no-wrap\" style={{ width: 'max-content' }}>\n                                    {students.map(e => {\n                                        return (\n                                            <div className='d-flex my-1' style={{ alignItems: 'center' }} key={\"set-emp-\"+e.id}>\n                                                <ActionButton\n                                                    iconClass='fas fa-plus-circle'\n                                                    className='me-2 btn btn-info btn-sm btn-text' \n                                                    onClick={() => this.addStudent(e)}\n                                                />\n                                                <span>{e.nisKiis} - {e.user.fullName.trim()}</span>\n                                            </div>\n                                        );\n                                    })}\n                                </div>\n                            </div>\n                        </div> : null }\n\n                    </div>\n                \n                </form>\n                <h5>Member List</h5>\n                <table className='table table-striped'>\n                    <thead>\n                        <tr>\n                            <td>No</td>\n                            <td>Nis Kiis</td>\n                            <td>Name</td>\n                            <td></td>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {members.map((member, i) => {\n                            return (\n                                <tr key={`member-${member.id}`}>\n                                    <td>{i + 1}</td>\n                                    <td>{member.student.nisKiis}</td>\n                                    <td>{member.student.user.fullName}</td>\n                                    <td>\n                                        <ActionButton \n                                            className='btn btn-text text-danger' \n                                            onClick={() => this.deleteMember(member)}\n                                            iconClass=\"fas fa-minus-circle\"\n                                        >\n                                            Remove\n                                        </ActionButton>\n                                    </td>\n                                </tr>\n                            )\n                        })}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n\n\n}","import { ChangeEvent, FormEvent, ReactNode } from \"react\";\r\nimport { ViewTemplate } from \"../../../layout/ViewTemplate\";\r\nimport BaseMasterDataState from '../../../models/BaseMasterDataState';\r\nimport BaseProps from '../../../models/BaseProps';\r\nimport ClassLevel from \"../../../models/ClassLevel\";\r\nimport DataTableHeaderValue from \"../../../models/DataTableHeaderValue\";\r\nimport { commonWrapper } from \"../../../utils/commonWrapper\";\r\nimport School from '../../../models/School';\r\nimport BaseMasterDataPage from \"./BaseMasterDataPage\";\r\nimport ActionButton from \"../../../components/buttons/ActionButton\";\r\nimport ClassLevelMembersPage from './ClassLevelMembersPage';\r\n\r\nclass State extends BaseMasterDataState<ClassLevel> {\r\n    showEditMember: boolean\r\n}\r\nclass ClassLevelsPage extends BaseMasterDataPage<ClassLevel, BaseProps, State> {\r\n    schools:School[] = [];\r\n    constructor(props: BaseProps) {\r\n        super(props, \"classlevels\", \"Class Level Management\");\r\n        this.state = new State();\r\n    }\r\n    get defaultItem(): ClassLevel { return new ClassLevel() }\r\n    getDataTableHeaderVals(): DataTableHeaderValue[] {\r\n        return [\r\n            new DataTableHeaderValue(\"level\", \"Level\"),\r\n            new DataTableHeaderValue(\"letter\", \"Letter\"),\r\n            new DataTableHeaderValue(\"school.name\", \"School\"),\r\n            new DataTableHeaderValue(\"description\", \"Description\"),\r\n            new DataTableHeaderValue(\"semesterPeriod.semester\", \"Semester\"),\r\n            new DataTableHeaderValue(\"semesterPeriod.year\", \"Year\"),\r\n            new DataTableHeaderValue(null, \"Member\", false),\r\n            new DataTableHeaderValue(\"semesterPeriod.active\", \"Semester Active\", true, false),\r\n        ]\r\n    }\r\n\r\n    edit = (model:ClassLevel) => {\r\n        this.service.list<School>('schools', 0, -1)\r\n            .then((response) => {\r\n                this.schools = response.items ?? [];\r\n                if (this.schools.length === 0) {\r\n                    this.dialog.showError(\"No School Record\", \"Failed when getting school data\");\r\n                    return;\r\n                }\r\n                if (!model.school) {\r\n                    model.school = this.schools[0];\r\n                }\r\n                this.setState({item: model}, this.showForm);\r\n            })\r\n            .catch((e) => this.dialog.showError(\"Failed to Read School Data\", e));\r\n    }\r\n\r\n    showInsertForm = () => this.edit(this.defaultItem);\r\n    showEditMemberForm = (item: ClassLevel) => this.setState({ item: item, showEditMember: true });\r\n    closeEditMemberForm = () => {\r\n        this.setState({ showEditMember: false }, this.resetFormAndClose);\r\n    }\r\n    render(): ReactNode {\r\n        if (this.state.showEditMember && this.state.item) {\r\n            return (\r\n                <ViewTemplate title={this.title} back=\"/admin\">\r\n                   <ActionButton onClick={this.closeEditMemberForm} iconClass=\"fas fa-times\" className=\"btn btn-secondary btn-sm mx-2\">\r\n                        Close form\r\n                    </ActionButton>\r\n                    <ClassLevelMembersPage item={this.state.item} />\r\n                </ViewTemplate>\r\n            )\r\n        }\r\n        if (this.state.showForm && this.state.item && this.schools.length > 0)  {\r\n            return (\r\n                <ViewTemplate title={this.title} back=\"/admin\">\r\n                    {this.closeFormButton}\r\n                    <FormEdit item={this.state.item} schools={this.schools} handleInputChange={this.handleInputChange} onSubmit={this.formEditSubmit} />\r\n                </ViewTemplate>\r\n            );\r\n        }\r\n        \r\n        const result = this.state.result;\r\n        const items = result?.items;\r\n        return (\r\n            <ViewTemplate title={this.title} back=\"/admin\">\r\n                {this.showFormButton}\r\n                {result === undefined || items === undefined ?\r\n                    <i>Loading...</i> :\r\n                    <form onSubmit={this.loadFromForm} className=\"mt-5 pl-3 pr-3\" style={{overflow: 'auto'}}>\r\n                       {this.paginationButton}\r\n                        <table className=\"commonDataTable table table-striped\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>No</th>\r\n                                    {this.getDataTableHeaderComponent()}\r\n                                    <th>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {items.map((item, i) => {\r\n                                    return (\r\n                                        <tr key={\"ClassLevel-\" + item.id}>\r\n                                            <td>{this.startingNumber + i}</td>\r\n                                            <td>{item.level}</td>\r\n                                            <td>{item.letter}</td>\r\n                                            <td>{item.school.name}</td>\r\n                                            <td>{item.description}</td>\r\n                                            <td>{item.semester}</td>\r\n                                            <td>{item.year}</td>\r\n                                            <td>\r\n                                                {item.memberCount}\r\n                                                <ActionButton \r\n                                                    className=\"btn btn-text btn-sm\" \r\n                                                    iconClass=\"fas fa-edit\" \r\n                                                    onClick={() => this.showEditMemberForm(item)} \r\n                                                />\r\n                                            </td>\r\n                                            <td>{item.semesterActive ? \r\n                                                <b className=\"text-success\">active</b> : <i>not active</i>}\r\n                                            </td>\r\n                                            <td>\r\n                                                {item.semesterActive ? this.actionButton(item) : null}\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                })}\r\n                            </tbody>\r\n                            {this.tableFooter}\r\n                        </table>\r\n                    </form>}\r\n            </ViewTemplate>\r\n        )\r\n    }\r\n}\r\n\r\nexport default commonWrapper(ClassLevelsPage);\r\n\r\nconst FormEdit = (props:{\r\n    item:ClassLevel, \r\n    schools:School[],\r\n    onSubmit:(e:FormEvent) => any, \r\n    handleInputChange:(e:ChangeEvent)=>any\r\n}) => {\r\n    const { item, onSubmit, handleInputChange } = props;\r\n    const setSchool = (school:School) => {\r\n        item.school = school;\r\n    }\r\n    return (\r\n        <div className=\"formEditContainer\">\r\n            <form className=\"masterDataForm px-3 py-3 border rounded border-gray\"  onSubmit={onSubmit}>\r\n                <p>Level</p>\r\n                <input className=\"form-control\" name=\"item.level\" id=\"item.level\" value={item.level} type=\"number\" required onChange={handleInputChange} />\r\n                <p>Letter</p>\r\n                <input className=\"form-control\" name=\"item.letter\" id=\"item.letter\" value={item.letter} onChange={handleInputChange} required />\r\n                <p>School</p>\r\n                <select className=\"form-control\" required>\r\n                    {props.schools.map((school)=>{\r\n                        return (\r\n                            <option key={\"select-class-school-\"+school.id} onClick={()=>setSchool(school)}>\r\n                                {school.name}\r\n                            </option>\r\n                        )\r\n                    })}\r\n                </select>\r\n                <p>Semester</p>\r\n                <input className=\"form-control\" name=\"item.semester\" id=\"item.semester\" value={item.semester} type=\"number\" required onChange={props.handleInputChange} />\r\n                <p>Year</p>\r\n                <input className=\"form-control\" name=\"item.year\" id=\"item.year\" value={item.year} onChange={props.handleInputChange} required />\r\n\r\n                <p></p>\r\n                <input className=\"btn btn-primary\" value=\"Save\" type=\"submit\" />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import { ChangeEvent, Component, FormEvent, ReactNode } from \"react\";\r\nimport { ViewTemplate } from \"../../../layout/ViewTemplate\";\r\nimport { commonWrapper } from \"../../../utils/commonWrapper\";\r\nimport BaseProps from '../../../models/BaseProps';\r\nimport BaseMasterDataPage from \"./BaseMasterDataPage\";\r\nimport BaseMasterDataState from '../../../models/BaseMasterDataState';\r\nimport Student from \"../../../models/Student\";\r\nimport DataTableHeaderValue from \"../../../models/DataTableHeaderValue\";\r\nimport { getInputReadableDate } from \"../../../utils/stringUtil\";\r\n\r\nclass State extends BaseMasterDataState<Student> {\r\n\r\n}\r\nclass StudentsPage extends BaseMasterDataPage<Student, BaseProps, State> {\r\n    \r\n    constructor(props: BaseProps) {\r\n        super(props, \"students\", \"Student Management\");\r\n        this.state = new State();\r\n    }\r\n    get defaultItem(): Student { return new Student() }\r\n    getDataTableHeaderVals(): DataTableHeaderValue[] {\r\n        return [\r\n            new DataTableHeaderValue(\"nisKiis\"),\r\n            new DataTableHeaderValue(\"nisn\"),\r\n            new DataTableHeaderValue(\"user.fullName\",),\r\n            new DataTableHeaderValue(\"user.birthDate\"),\r\n            new DataTableHeaderValue(\"user.birthPlace\"),\r\n            new DataTableHeaderValue(\"address\"),\r\n            new DataTableHeaderValue(\"city\"),\r\n            new DataTableHeaderValue(\"province\"),\r\n            new DataTableHeaderValue(\"siblingNum\"),\r\n            new DataTableHeaderValue(\"siblingCount\"),\r\n            new DataTableHeaderValue(\"fatherName\"),\r\n            new DataTableHeaderValue(\"fatherBirthDate\"),\r\n            new DataTableHeaderValue(\"fatherBirthPlace\"),\r\n            new DataTableHeaderValue(\"fatherEducation\"),\r\n            new DataTableHeaderValue(\"fatherPhoneNumber\"),\r\n            new DataTableHeaderValue(\"fatherOccupation\"),\r\n            new DataTableHeaderValue(\"fatherAddress\"),\r\n            new DataTableHeaderValue(\"fatherIncome\"),\r\n            new DataTableHeaderValue(\"motherName\"),\r\n            new DataTableHeaderValue(\"motherBirthDate\"),\r\n            new DataTableHeaderValue(\"motherBirthPlace\"),\r\n            new DataTableHeaderValue(\"motherEducation\"),\r\n            new DataTableHeaderValue(\"motherPhoneNumber\"),\r\n            new DataTableHeaderValue(\"motherOccupation\"),\r\n            new DataTableHeaderValue(\"motherAddress\"),\r\n            new DataTableHeaderValue(\"motherIncome\"),\r\n            new DataTableHeaderValue(\"originSchool\"),\r\n            new DataTableHeaderValue(\"sttbNumber\"),\r\n            new DataTableHeaderValue(\"entranceDate\"),\r\n            new DataTableHeaderValue(\"entranceClass\"),\r\n            new DataTableHeaderValue(\"transferFrom\"),\r\n            new DataTableHeaderValue(\"transferReason\"),\r\n            new DataTableHeaderValue(\"entranceCertificateScore\"),\r\n            new DataTableHeaderValue(\"leaveSchool\"),\r\n            new DataTableHeaderValue(\"leaveReason\"),\r\n            new DataTableHeaderValue(\"educationFinished\"),\r\n            new DataTableHeaderValue(\"graduationDateMts\"),\r\n            new DataTableHeaderValue(\"certificateNumberMts\"),\r\n            new DataTableHeaderValue(\"seniorLevelSchool\"),\r\n            new DataTableHeaderValue(\"graduationDateMa\"),\r\n            new DataTableHeaderValue(\"certificateNumberMa\"),\r\n            new DataTableHeaderValue(\"graduationCeremonyDate\"),\r\n            new DataTableHeaderValue(\"highEducationUniv\"),\r\n            new DataTableHeaderValue(\"highEducationMajor\"),\r\n            new DataTableHeaderValue(\"workDate\"),\r\n            new DataTableHeaderValue(\"workCompany\"),\r\n        ]\r\n    }\r\n    \r\n    render(): ReactNode {\r\n\r\n        if (this.state.showForm && this.state.item)  {\r\n            return (\r\n                <ViewTemplate title={this.title} back=\"/admin\">\r\n                    {this.closeFormButton}\r\n                    <FormEdit item={this.state.item} handleInputChange={this.handleInputChange} onSubmit={this.formEditSubmit} />\r\n                </ViewTemplate>\r\n            );\r\n        }\r\n        \r\n        const result = this.state.result;\r\n        const items = result?.items;\r\n        return (\r\n            <ViewTemplate title={this.title} back=\"/admin\">\r\n                {this.showFormButton}\r\n                {result === undefined || items === undefined ?\r\n                    <i>Loading...</i> :\r\n                    <form onSubmit={this.loadFromForm} className=\"mt-5 pl-3 pr-3\" style={{overflow: 'auto'}}>\r\n                       {this.paginationButton}\r\n                        <table className=\"commonDataTable table table-striped\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>No</th>\r\n                                    {this.getDataTableHeaderComponent()}\r\n                                    <th>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {items.map((item, i) => {\r\n                                    return (\r\n                                        <tr key={\"Student-\" + item.id}>\r\n                                            <td>{this.startingNumber + i}</td>\r\n                                            <td>{item.nisKiis}</td>\r\n                                            <td>{item.nisn}</td>\r\n                                            <td>{item.user.fullName}</td>\r\n                                            <td>{new Date(item.user.birthDate).toLocaleDateString()}</td>\r\n                                            <td>{item.user.birthPlace}</td>\r\n                                            <td>{item.address}</td>\r\n                                            <td>{item.city}</td>\r\n                                            <td>{item.province}</td>\r\n                                            <td>{item.siblingNum}</td>\r\n                                            <td>{item.siblingCount}</td>\r\n                                            <td>{item.fatherName}</td>\r\n                                            <td>{new Date(item.fatherBirthDate).toLocaleDateString()}</td>\r\n                                            <td>{item.fatherBirthPlace}</td>\r\n                                            <td>{item.fatherEducation}</td>\r\n                                            <td>{item.fatherPhoneNumber}</td>\r\n                                            <td>{item.fatherOccupation}</td>\r\n                                            <td>{item.fatherAddress}</td>\r\n                                            <td>{item.fatherIncome}</td>\r\n                                            <td>{item.motherName}</td>\r\n                                            <td>{new Date(item.motherBirthDate).toLocaleDateString()}</td>\r\n                                            <td>{item.motherBirthPlace}</td>\r\n                                            <td>{item.motherEducation}</td>\r\n                                            <td>{item.motherPhoneNumber}</td>\r\n                                            <td>{item.motherOccupation}</td>\r\n                                            <td>{item.motherAddress}</td>\r\n                                            <td>{item.motherIncome}</td>\r\n                                            <td>{item.originSchool}</td>\r\n                                            <td>{item.sttbNumber}</td>\r\n                                            <td>{new Date(item.entranceDate).toLocaleDateString()}</td>\r\n                                            <td>{item.entranceClass}</td>\r\n                                            <td>{item.transferFrom}</td>\r\n                                            <td>{item.transferReason}</td>\r\n                                            <td>{item.entranceCertificateScore}</td>\r\n                                            <td>{item.leaveSchool ? \"True\" : \"False\"}</td>\r\n                                            <td>{item.leaveReason}</td>\r\n                                            <td>{item.educationFinished ? \"True\" : \"False\"}</td>\r\n                                            <td>{new Date(item.graduationDateMts).toLocaleDateString()}</td>\r\n                                            <td>{item.certificateNumberMts}</td>\r\n                                            <td>{item.seniorLevelSchool}</td>\r\n                                            <td>{new Date(item.graduationDateMa).toLocaleDateString()}</td>\r\n                                            <td>{item.certificateNumberMa}</td>\r\n                                            <td>{new Date(item.graduationCeremonyDate).toLocaleDateString()}</td>\r\n                                            <td>{item.highEducationUniv}</td>\r\n                                            <td>{item.highEducationMajor}</td>\r\n                                            <td>{new Date(item.workDate).toLocaleDateString()}</td>\r\n                                            <td>{item.workCompany}</td>\r\n\r\n                                            <td>\r\n                                                {this.actionButton(item)}\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                })}\r\n                            </tbody>\r\n                            {this.tableFooter}\r\n                        </table>\r\n                    </form>}\r\n            </ViewTemplate>\r\n        )\r\n    }\r\n}\r\n\r\nexport default commonWrapper(StudentsPage);\r\n\r\nconst FormEdit = (props:{\r\n    item:Student, \r\n    onSubmit:(e:FormEvent) => any, \r\n    handleInputChange:(e:ChangeEvent)=>any\r\n}) => {\r\n    const item      = props.item;\r\n    const onChange  = props.handleInputChange;\r\n    return (\r\n        <div className=\"formEditContainer\">\r\n            <form className=\"masterDataForm px-3 py-3 border rounded border-gray\"  onSubmit={props.onSubmit}>\r\n                <p>Full Name</p>\r\n                <input className=\"form-control\" id=\"item.user.fullName\" name=\"item.user.fullName\" value={item.user.fullName}  onChange={onChange} required/>\r\n                <p>Email</p>\r\n                <input className=\"form-control\" id=\"item.user.email\" name=\"item.user.email\" type=\"email\" value={item.user.email}  onChange={onChange} required/>\r\n                <p>Gender</p>\r\n                <select className=\"form-control\" value={item.user.gender} id=\"item.user.gender\" name=\"item.user.gender\" onChange={onChange} required>\r\n                    <option  >MALE</option>\r\n                    <option  >FEMALE</option>\r\n                </select>\r\n                <p>Birth Date</p>\r\n                <input type=\"date\" className=\"form-control\" id=\"item.user.birthDate\" name=\"item.user.birthDate\" value={getInputReadableDate(new Date(item.user.birthDate))} onChange={onChange} required/>\r\n                <p>Birth Place</p>\r\n                <input className=\"form-control\" id=\"item.user.birthPlace\" name=\"item.user.birthPlace\" value={item.user.birthPlace} onChange={onChange} required/>\r\n                <p>nisKiis</p>\r\n                <input required placeholder=\"nisKiis\" className=\"form-control\" name=\"item.nisKiis\" id=\"item.nisKiis\" value={item.nisKiis} onChange={onChange}/>\r\n                <p>nisn</p>\r\n                <input required placeholder=\"nisn\" className=\"form-control\" name=\"item.nisn\" id=\"item.nisn\" value={item.nisn} onChange={onChange}/>\r\n                <p>address</p>\r\n                <textarea required placeholder=\"address\" className=\"form-control\" name=\"item.address\" id=\"item.address\" value={item.address} onChange={onChange}/>\r\n                <p>city</p>\r\n                <input required placeholder=\"city\" className=\"form-control\" name=\"item.city\" id=\"item.city\" value={item.city} onChange={onChange}/>\r\n                <p>province</p>\r\n                <input required placeholder=\"province\" className=\"form-control\" name=\"item.province\" id=\"item.province\" value={item.province} onChange={onChange}/>\r\n                <p>siblingNum</p>\r\n                <input type=\"number\" placeholder=\"siblingNum\" className=\"form-control\" name=\"item.siblingNum\" id=\"item.siblingNum\" value={item.siblingNum} onChange={onChange}/>\r\n                <p>siblingCount</p>\r\n                <input type=\"number\" placeholder=\"siblingCount\" className=\"form-control\" name=\"item.siblingCount\" id=\"item.siblingCount\" value={item.siblingCount} onChange={onChange}/>\r\n                <p>fatherName</p>\r\n                <input placeholder=\"fatherName\" className=\"form-control\" name=\"item.fatherName\" id=\"item.fatherName\" value={item.fatherName} onChange={onChange}/>\r\n                <p>fatherBirthDate</p>\r\n                <input placeholder=\"fatherBirthDate\" className=\"form-control\" name=\"item.fatherBirthDate\" id=\"item.fatherBirthDate\" type=\"date\" value={getInputReadableDate(new Date(item.fatherBirthDate))} onChange={onChange}/>\r\n                <p>fatherBirthPlace</p>\r\n                <input placeholder=\"fatherBirthPlace\" className=\"form-control\" name=\"item.fatherBirthPlace\" id=\"item.fatherBirthPlace\" value={item.fatherBirthPlace} onChange={onChange}/>\r\n                <p>fatherEducation</p>\r\n                <input placeholder=\"fatherEducation\" className=\"form-control\" name=\"item.fatherEducation\" id=\"item.fatherEducation\" value={item.fatherEducation} onChange={onChange}/>\r\n                <p>fatherPhoneNumber</p>\r\n                <input placeholder=\"fatherPhoneNumber\" className=\"form-control\" name=\"item.fatherPhoneNumber\" id=\"item.fatherPhoneNumber\" value={item.fatherPhoneNumber} onChange={onChange}/>\r\n                <p>fatherOccupation</p>\r\n                <input placeholder=\"fatherOccupation\" className=\"form-control\" name=\"item.fatherOccupation\" id=\"item.fatherOccupation\" value={item.fatherOccupation} onChange={onChange}/>\r\n                <p>fatherAddress</p>\r\n                <textarea placeholder=\"fatherAddress\" className=\"form-control\" name=\"item.fatherAddress\" id=\"item.fatherAddress\" value={item.fatherAddress} onChange={onChange}/>\r\n                <p>fatherIncome</p>\r\n                <input type=\"number\" placeholder=\"fatherIncome\" className=\"form-control\" name=\"item.fatherIncome\" id=\"item.fatherIncome\" value={item.fatherIncome} onChange={onChange}/>\r\n                <p>motherName</p>\r\n                <input placeholder=\"motherName\" className=\"form-control\" name=\"item.motherName\" id=\"item.motherName\" value={item.motherName} onChange={onChange}/>\r\n                <p>motherBirthDate</p>\r\n                <input placeholder=\"motherBirthDate\" className=\"form-control\" name=\"item.motherBirthDate\" id=\"item.motherBirthDate\" type=\"date\" value={getInputReadableDate(new Date(item.motherBirthDate))} onChange={onChange}/>\r\n                <p>motherBirthPlace</p>\r\n                <input placeholder=\"motherBirthPlace\" className=\"form-control\" name=\"item.motherBirthPlace\" id=\"item.motherBirthPlace\" value={item.motherBirthPlace} onChange={onChange}/>\r\n                <p>motherEducation</p>\r\n                <input placeholder=\"motherEducation\" className=\"form-control\" name=\"item.motherEducation\" id=\"item.motherEducation\" value={item.motherEducation} onChange={onChange}/>\r\n                <p>motherPhoneNumber</p>\r\n                <input placeholder=\"motherPhoneNumber\" className=\"form-control\" name=\"item.motherPhoneNumber\" id=\"item.motherPhoneNumber\" value={item.motherPhoneNumber} onChange={onChange}/>\r\n                <p>motherOccupation</p>\r\n                <input placeholder=\"motherOccupation\" className=\"form-control\" name=\"item.motherOccupation\" id=\"item.motherOccupation\" value={item.motherOccupation} onChange={onChange}/>\r\n                <p>motherAddress</p>\r\n                <textarea placeholder=\"motherAddress\" className=\"form-control\" name=\"item.motherAddress\" id=\"item.motherAddress\" value={item.motherAddress} onChange={onChange}/>\r\n                <p>motherIncome</p>\r\n                <input type=\"number\" placeholder=\"motherIncome\" className=\"form-control\" name=\"item.motherIncome\" id=\"item.motherIncome\" value={item.motherIncome} onChange={onChange}/>\r\n                <p>originSchool</p>\r\n                <input placeholder=\"originSchool\" className=\"form-control\" name=\"item.originSchool\" id=\"item.originSchool\" value={item.originSchool} onChange={onChange}/>\r\n                <p>sttbNumber</p>\r\n                <input placeholder=\"sttbNumber\" className=\"form-control\" name=\"item.sttbNumber\" id=\"item.sttbNumber\" value={item.sttbNumber} onChange={onChange}/>\r\n                <p>entranceDate</p>\r\n                <input placeholder=\"entranceDate\" className=\"form-control\" name=\"item.entranceDate\" id=\"item.entranceDate\" type=\"date\" value={getInputReadableDate(new Date(item.entranceDate))} onChange={onChange}/>\r\n                <p>entranceClass</p>\r\n                <input placeholder=\"entranceClass\" className=\"form-control\" name=\"item.entranceClass\" id=\"item.entranceClass\" value={item.entranceClass} onChange={onChange}/>\r\n                <p>transferFrom</p>\r\n                <input placeholder=\"transferFrom\" className=\"form-control\" name=\"item.transferFrom\" id=\"item.transferFrom\" value={item.transferFrom} onChange={onChange}/>\r\n                <p>transferReason</p>\r\n                <input placeholder=\"transferReason\" className=\"form-control\" name=\"item.transferReason\" id=\"item.transferReason\" value={item.transferReason} onChange={onChange}/>\r\n                <p>entranceCertificateScore</p>\r\n                <input placeholder=\"entranceCertificateScore\" className=\"form-control\" name=\"item.entranceCertificateScore\" id=\"item.entranceCertificateScore\" value={item.entranceCertificateScore} onChange={onChange}/>\r\n                \r\n                <div className=\"form-check\">\r\n                    <input placeholder=\"leaveSchool\" className=\"form-check-input\" name=\"item.leaveSchool\" id=\"item.leaveSchool\" type=\"checkbox\" checked={item.leaveSchool} onChange={onChange} />\r\n                    <label className=\"form-check-label\">\r\n                        Leave School\r\n                    </label>\r\n                </div>\r\n                \r\n                <p>leaveReason</p>\r\n                <textarea placeholder=\"leaveReason\" className=\"form-control\" name=\"item.leaveReason\" id=\"item.leaveReason\" value={item.leaveReason} onChange={onChange}/>\r\n                <div className=\"form-check\">\r\n                    <input placeholder=\"educationFinished\" className=\"form-check-input\" name=\"item.educationFinished\" id=\"item.educationFinished\" type=\"checkbox\" checked={item.educationFinished} onChange={onChange}/>    \r\n                    <label className=\"form-check-label\">\r\n                        Education Finished\r\n                    </label>\r\n                </div>\r\n                <p>graduationDateMts</p>\r\n                <input placeholder=\"graduationDateMts\" className=\"form-control\" name=\"item.graduationDateMts\" id=\"item.graduationDateMts\" type=\"date\" value={getInputReadableDate(new Date(item.graduationDateMts))} onChange={onChange}/>\r\n                <p>certificateNumberMts</p>\r\n                <input placeholder=\"certificateNumberMts\" className=\"form-control\" name=\"item.certificateNumberMts\" id=\"item.certificateNumberMts\" value={item.certificateNumberMts} onChange={onChange}/>\r\n                <p>seniorLevelSchool</p>\r\n                <input placeholder=\"seniorLevelSchool\" className=\"form-control\" name=\"item.seniorLevelSchool\" id=\"item.seniorLevelSchool\" value={item.seniorLevelSchool} onChange={onChange}/>\r\n                <p>graduationDateMa</p>\r\n                <input placeholder=\"graduationDateMa\" className=\"form-control\" name=\"item.graduationDateMa\" id=\"item.graduationDateMa\" type=\"date\" value={getInputReadableDate(new Date(item.graduationDateMa))} onChange={onChange}/>\r\n                <p>certificateNumberMa</p>\r\n                <input placeholder=\"certificateNumberMa\" className=\"form-control\" name=\"item.certificateNumberMa\" id=\"item.certificateNumberMa\" value={item.certificateNumberMa} onChange={onChange}/>\r\n                <p>graduationCeremonyDate</p>\r\n                <input placeholder=\"graduationCeremonyDate\" className=\"form-control\" name=\"item.graduationCeremonyDate\" id=\"item.graduationCeremonyDate\" type=\"date\" value={getInputReadableDate(new Date(item.graduationCeremonyDate))} onChange={onChange}/>\r\n                <p>highEducationUniv</p>\r\n                <input placeholder=\"highEducationUniv\" className=\"form-control\" name=\"item.highEducationUniv\" id=\"item.highEducationUniv\" value={item.highEducationUniv} onChange={onChange}/>\r\n                <p>highEducationMajor</p>\r\n                <input placeholder=\"highEducationMajor\" className=\"form-control\" name=\"item.highEducationMajor\" id=\"item.highEducationMajor\" value={item.highEducationMajor} onChange={onChange}/>\r\n                <p>workDate</p>\r\n                <input placeholder=\"workDate\" className=\"form-control\" name=\"item.workDate\" id=\"item.workDate\" type=\"date\" value={getInputReadableDate(new Date(item.workDate))} onChange={onChange}/>\r\n                <p>workCompany</p>\r\n                <input placeholder=\"workCompany\" className=\"form-control\" name=\"item.workCompany\" id=\"item.workCompany\" value={item.workCompany} onChange={onChange}/>\r\n\r\n                <p></p>\r\n                <input className=\"btn btn-primary\" value=\"Save\" type=\"submit\" />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import { resolve } from \"inversify-react\";\r\nimport { ChangeEvent, FormEvent, ReactNode } from \"react\";\r\nimport ActionButton from \"../../../components/buttons/ActionButton\";\r\nimport { ViewTemplate } from \"../../../layout/ViewTemplate\";\r\nimport BaseMasterDataState from '../../../models/BaseMasterDataState';\r\nimport BaseProps from '../../../models/BaseProps';\r\nimport ClassLevel from '../../../models/ClassLevel';\r\nimport ClassMember from \"../../../models/ClassMember\";\r\nimport DataTableHeaderValue from \"../../../models/DataTableHeaderValue\";\r\nimport Student from '../../../models/Student';\r\nimport MasterDataService from '../../../services/MasterDataService';\r\nimport ToastService from '../../../services/ToastService';\r\nimport { commonWrapper } from \"../../../utils/commonWrapper\";\r\nimport ControlledComponent from \"../../ControlledComponent\";\r\nimport ClassMemberService from './../../../services/ClassMemberService';\r\nimport BaseMasterDataPage from \"./BaseMasterDataPage\";\r\n\r\nclass State extends BaseMasterDataState<ClassMember> {\r\n\r\n}\r\nclass ClassMembersPage extends BaseMasterDataPage<ClassMember, BaseProps, State> {    \r\n    constructor(props: BaseProps) {\r\n        super(props, \"classmembers\", \"Class Member Management\");\r\n        this.state = new State();\r\n    }\r\n    get defaultItem(): ClassMember { return new ClassMember() }\r\n    getDataTableHeaderVals(): DataTableHeaderValue[] {\r\n        return [\r\n            new DataTableHeaderValue(\"student.nisKiis\", \"Nis Kiis\"),\r\n            new DataTableHeaderValue(\"student.user.fullName\", \"Name\"),\r\n            new DataTableHeaderValue(\"classLevel.level\", \"Class\"),\r\n            new DataTableHeaderValue(\"classLevel.letter\", \"Letter\"),\r\n            new DataTableHeaderValue(\"classLevel.school.name\", \"School\"),\r\n            new DataTableHeaderValue(\"classLevel.semesterPeriod.semester\", \"Semester\"),\r\n            new DataTableHeaderValue(\"classLevel.semesterPeriod.year\", \"Year\"),\r\n            new DataTableHeaderValue(\"classLevel.semesterPeriod.active\", \"Semester Active\", true, false),\r\n        ]\r\n    }\r\n    \r\n    render(): ReactNode {\r\n\r\n        if (this.state.showForm && this.state.item)  {\r\n            return (\r\n                <ViewTemplate title={this.title} back=\"/admin\">\r\n                    {this.closeFormButton}\r\n                    <FormEdit item={this.state.item} handleInputChange={this.handleInputChange} onSubmit={this.formEditSubmit} />\r\n                </ViewTemplate>\r\n            );\r\n        }\r\n        \r\n        const { result } = this.state;\r\n        const items = result?.items;\r\n        return (\r\n            <ViewTemplate title={this.title} back=\"/admin\">\r\n                {this.showFormButton}\r\n                {result === undefined || items === undefined ?\r\n                    <i>Loading...</i> :\r\n                    <form onSubmit={this.loadFromForm} className=\"mt-5 pl-3 pr-3\" style={{overflow: 'auto'}}>\r\n                       {this.paginationButton}\r\n                        <table className=\"commonDataTable table table-striped\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>No</th>\r\n                                    {this.getDataTableHeaderComponent()}\r\n                                    <th>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {items.map((item, i) => {\r\n                                    const { classLevel, student } = item;\r\n                                    return (\r\n                                        <tr key={\"ClassMember-\" + item.id}>\r\n                                            <td>{this.startingNumber + i}</td>\r\n                                            <td>{student.nisKiis}</td>\r\n                                            <td>{student.user.fullName}</td>\r\n                                            <td>{classLevel.level}</td>\r\n                                            <td>{classLevel.letter}</td>\r\n                                            <td>{classLevel.school.name}</td>\r\n                                            <td>{classLevel.semester}</td>\r\n                                            <td>{classLevel.year}</td>\r\n                                            <td>\r\n                                                {classLevel.semesterActive ? <b className=\"text-success\">active</b> : <i>not active</i>}\r\n                                            </td>\r\n                                            <td>\r\n                                                {classLevel.semesterActive ? this.actionButton(item) : null}\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                })}\r\n                            </tbody>\r\n                            {this.tableFooter}\r\n                        </table>\r\n                    </form>}\r\n            </ViewTemplate>\r\n        )\r\n    }\r\n}\r\n\r\nexport default commonWrapper(ClassMembersPage);\r\ntype FormEditProps = {\r\n    item:ClassMember, \r\n    onSubmit:(e: FormEvent) => any, \r\n    handleInputChange:(e:ChangeEvent)=>any\r\n};\r\ntype FormEditState = {\r\n    students: Student[];\r\n    classes: ClassLevel[];\r\n\r\n    searchStudent?: string;\r\n}\r\nclass FormEdit extends ControlledComponent<FormEditProps, FormEditState> {\r\n    @resolve(MasterDataService)\r\n    private masterDataService: MasterDataService;\r\n    @resolve(ClassMemberService)\r\n    private classMemberService: ClassMemberService;\r\n    @resolve(ToastService)\r\n    private toast: ToastService;\r\n\r\n    constructor(props:FormEditProps) {\r\n        super(props);\r\n        this.state = {\r\n            students: [],\r\n            classes: [],\r\n            searchStudent: props.item?.student?.user?.fullName\r\n        };\r\n    }\r\n\r\n    componentDidMount() { this.loadClasses(); }\r\n\r\n    loadClasses = () => {\r\n        this.classMemberService.getActiveClasses()\r\n            .then(this.handleClassLoaded)\r\n            .catch(() => this.toast.showDanger(\"Failed to load classes\"));\r\n    }\r\n\r\n    handleClassLoaded = (classes: ClassLevel[]) => {\r\n        if (!classes || classes.length === 0) {\r\n            this.toast.showDanger(\"No class found this semester\");\r\n            return;\r\n        }\r\n        this.props.item.classLevel = classes[0];\r\n        this.setState({ classes: classes });\r\n    }\r\n\r\n    loadStudents = () => {\r\n        const search = this.state.searchStudent;\r\n        if (!search) {\r\n            return;\r\n        }\r\n        this.masterDataService.list<Student>('students', 0, 10, 'user.fullName', false, 'user.fullName:' + search)\r\n            .then(response => this.handleStudentLoaded(response.items))\r\n            .catch((e) => this.toast.showDanger(\"Failed to load students\"));\r\n    }\r\n    handleStudentLoaded = (items:Student[]) => {\r\n        if (!items || items.length === 0) {\r\n            this.toast.showDanger(\"No student containing name \\\"\" + this.state.searchStudent + \"\\\" was found\");\r\n            return;\r\n        }\r\n        this.setState({ students: items });\r\n    }\r\n    \r\n    closeStudentDropdown = () => this.setState({ students: [] });\r\n    setSelectedStudent = (item:Student) => {\r\n        this.props.item.student = item;\r\n        this.setState({ searchStudent: item.user.fullName }, this.closeStudentDropdown);\r\n    }\r\n\r\n    setSelectedClass = (item:ClassLevel) => {\r\n        this.props.item.classLevel = item;\r\n    }\r\n\r\n    submitForm = (e:FormEvent) => {\r\n        e.preventDefault();\r\n        const { item } = this.props;\r\n        if (!item.student || item.student.id < 1 || !item.classLevel || item.classLevel.id < 1) {\r\n            this.toast.showDanger(\"Please select student and class correctly\");\r\n            return;\r\n        }\r\n        this.props.onSubmit(e);\r\n    }\r\n\r\n    render() {\r\n        const { students, classes, searchStudent } = this.state;\r\n        return (\r\n            <div className=\"formEditContainer\">\r\n                <form onSubmit={(e) => {\r\n                    e.preventDefault();\r\n                    this.loadStudents();\r\n                }}>\r\n                    <p>Student</p>\r\n                    <div className=\"input-group\">\r\n                        <input \r\n                            type=\"search\"\r\n                            className=\"form-control\" \r\n                            name=\"searchStudent\" \r\n                            value={searchStudent}\r\n                            placeholder=\"Full Name\"\r\n                            onChange={this.handleInputChange} \r\n                            required \r\n                        />\r\n                        <div className=\"input-group-append\">\r\n                            <input type=\"submit\" className=\"btn btn-primary\" value={\"Search\"}/>\r\n                        </div>\r\n                    </div>\r\n                        \r\n                    <div style={{position: 'absolute',width:'75%'}}>\r\n                        {students.length > 0 ?\r\n                        <div className=\"bg-light border border-dark px-2 py-1 w-100\" style={{position: 'relative'}}>\r\n                            <ActionButton className=\"btn btn-text btn-sm\" iconClass=\"fas fa-times\" onClick={this.closeStudentDropdown}>\r\n                                close\r\n                            </ActionButton>\r\n                            <div style={{overflowY:'auto', height: '100px'}}>\r\n                                <div className=\"no-wrap\" style={{ width: 'max-content' }}>\r\n                                    {students.map(e => {\r\n                                        return (\r\n                                            <div key={\"set-emp-\"+e.id}>\r\n                                                <a className=\"btn btn-text clickable\" onClick={()=>this.setSelectedStudent(e)}>\r\n                                                   {e.nisKiis} - {e.user.fullName.trim()}\r\n                                                </a>\r\n                                            </div>\r\n                                        );\r\n                                    })}\r\n                                </div>\r\n                            </div>\r\n                        </div> : null }\r\n\r\n                    </div>\r\n                \r\n                </form>\r\n                <form onSubmit={this.submitForm}>\r\n                    <p>Active Class Level</p>\r\n                    <select className=\"form-control\" >\r\n                        {classes.map(item => {\r\n                            return (\r\n                                <option key={\"select-class-\"+item.id} onClick={(e) => this.setSelectedClass(item)}>\r\n                                    {item.level}{item.letter} - {item.school.name}\r\n                                </option>\r\n                            )\r\n                        })}\r\n                    </select>\r\n                    <p></p>\r\n                    <input type=\"submit\" className=\"btn btn-success\" value=\"Save\" />\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import { resolve } from 'inversify-react';\r\nimport React, { Component, Fragment } from 'react'\r\nimport { Navigate, Route, Routes } from 'react-router-dom';\r\nimport BaseProps from '../models/BaseProps';\r\nimport EmployeesPage from '../pages/admin/masterData/EmployeesPage';\r\nimport MainAdminPage from '../pages/admin/MainAdminPage';\r\nimport SchoolsPage from '../pages/admin/masterData/SchoolsPage';\r\nimport UsersPage from '../pages/admin/masterData/UsersPage';\r\nimport LoginPage from '../pages/auth/LoginPage';\r\nimport { ErrorView } from '../pages/error/ErrorView';\r\nimport Home from '../pages/home/Home';\r\nimport Dashboard from '../pages/user/Dashboard';\r\nimport EditProfile from '../pages/user/EditProfile';\r\nimport AuthService from './../services/AuthService';\r\nimport RoutingService from './../services/RoutingService';\r\nimport AuthorityType from './../constants/AuthorityType';\r\nimport SemesterPeriodsPage from '../pages/admin/masterData/SemesterPeriodsPage';\r\nimport ClassLevelsPage from '../pages/admin/masterData/ClassLevelsPage';\r\nimport StudentsPage from '../pages/admin/masterData/StudentsPage';\r\nimport ClassMembersPage from '../pages/admin/masterData/ClassMembersPage';\r\n\r\nexport class Routing extends Component<BaseProps, any> {\r\n    @resolve(AuthService)\r\n    private authService: AuthService;\r\n    @resolve(RoutingService)\r\n    private routingService: RoutingService;\r\n\r\n    render(): React.ReactNode {\r\n        return (\r\n            <Fragment>\r\n\r\n                <Routes>\r\n                    <Route path=\"/\" element={<Home />} />\r\n                    <Route path=\"/home\" element={<Home />} />\r\n\r\n                    <Route path=\"/login\" element={\r\n                        <RestrictedRouteElement disabledWhenLoggedIn={true} to=\"/login\" element={<LoginPage/>} />\r\n                    } />\r\n\r\n                    <Route path=\"/dashboard\" element={\r\n                       <RestrictedRouteElement to=\"/dashboard\" element={<Dashboard /> } /> \r\n                    } />\r\n                    <Route path=\"/profile\" element={\r\n                        <RestrictedRouteElement to='/profile' element={<EditProfile />} />\r\n                    } />\r\n\r\n                    <Route path=\"/admin\" element={\r\n                        <RestrictedRouteElement to=\"/admin\" element={<MainAdminPage/>} requiredRole={'ROLE_SUPERADMIN'} />\r\n                    } />\r\n                    <Route path=\"/admin/users\" element={\r\n                        <RestrictedRouteElement to=\"/admin/users\" element={<UsersPage/>} requiredRole={'ROLE_SUPERADMIN'} />\r\n                    } />\r\n                    <Route path=\"/admin/schools\" element={\r\n                        <RestrictedRouteElement to=\"/admin/schools\" element={<SchoolsPage/>} requiredRole={'ROLE_SUPERADMIN'} />\r\n                    } />\r\n                    <Route path=\"/admin/employees\" element={\r\n                        <RestrictedRouteElement to=\"/admin/employees\" element={<EmployeesPage/>} requiredRole={'ROLE_SUPERADMIN'} />\r\n                    } />\r\n                    <Route path=\"/admin/semesterperiods\" element={\r\n                        <RestrictedRouteElement to=\"/admin/semesterperiods\" element={<SemesterPeriodsPage/>} requiredRole={'ROLE_SUPERADMIN'} />\r\n                    } />\r\n                    <Route path=\"/admin/classlevels\" element={\r\n                        <RestrictedRouteElement to=\"/admin/classlevels\" element={<ClassLevelsPage/>} requiredRole={'ROLE_SUPERADMIN'} />\r\n                    } />\r\n                    <Route path=\"/admin/students\" element={\r\n                        <RestrictedRouteElement to=\"/admin/students\" element={<StudentsPage/>} requiredRole={'ROLE_SUPERADMIN'} />\r\n                    } />\r\n                    <Route path=\"/admin/classmembers\" element={\r\n                        <RestrictedRouteElement to=\"/admin/classmembers\" element={<ClassMembersPage/>} requiredRole={'ROLE_SUPERADMIN'} />\r\n                    } />\r\n\r\n                    <Route path=\"*\" element={<ErrorView message=\"The requested page is not found.\" />} />\r\n                </Routes>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nclass RestrictedRouteElement extends Component<{\r\n    to:string, \r\n    element: JSX.Element, \r\n    disabledWhenLoggedIn?:boolean,\r\n    requiredRole?: AuthorityType | AuthorityType[]\r\n}, any> {\r\n\r\n    @resolve(AuthService)\r\n    private authService: AuthService;\r\n    @resolve(RoutingService)\r\n    private routingService: RoutingService;\r\n\r\n    render(): React.ReactNode {\r\n        const loggedIn = this.authService.loggedIn;\r\n\r\n        if (this.props.disabledWhenLoggedIn === true) {\r\n            if (!loggedIn) {\r\n                return this.props.element;\r\n            }\r\n            return (\r\n                <Navigate to=\"/dashboard\" />\r\n            )\r\n        }\r\n        \r\n        if (loggedIn) {\r\n            if (this.props.requiredRole) {\r\n                if (this.authService.loggedUser?.hasAuthorityType(this.props.requiredRole))  {\r\n                    return this.props.element;\r\n                } else {\r\n                    return <Navigate to=\"/\" />\r\n                }\r\n            } else {\r\n                return this.props.element;\r\n            }\r\n        }\r\n        return (\r\n            <CustomNavigate origin={this.props.to} routing={this.routingService} to=\"/\" />\r\n        )\r\n    }\r\n}\r\n\r\ninterface NavigateProps {\r\n    origin: string,\r\n    to: string,\r\n    state?: any,\r\n    replace?: any,\r\n    routing: RoutingService\r\n}\r\nconst CustomNavigate = (props: NavigateProps) => {\r\n    props.routing.setLastRedirectedRoute(props.origin);\r\n    return <Navigate to = { props.to } state = { props.state } replace = { props.replace } />\r\n}","import { Component, ReactNode } from \"react\";\r\nimport { commonWrapper } from './../utils/commonWrapper';\r\nimport User from './../models/User';\r\nimport { resolve } from \"inversify-react\";\r\nimport AuthService from './../services/AuthService';\r\nimport DialogService from './../services/DialogService';\r\nimport BaseProps from './../models/BaseProps';\r\nimport RoutingService from './../services/RoutingService';\r\n\r\ninterface Props  extends BaseProps {\r\n    user:User\r\n}\r\nclass State  {\r\n    showDropdown: boolean = false;\r\n}\r\nclass UserSection extends Component<Props, State> {\r\n    state: Readonly<State> = new State();\r\n\r\n    @resolve(AuthService)\r\n    private authService:AuthService;\r\n    @resolve(DialogService)\r\n    private dialog:DialogService;\r\n    @resolve(RoutingService)\r\n    private routing:RoutingService;\r\n\r\n    logout = () => {\r\n        this.dialog.showConfirmDanger(\"Logout\", \"Do you want to logout?\")\r\n            .then(ok => {\r\n                if (ok) {\r\n                    this.authService.logout();\r\n                }\r\n            });\r\n        this.hideDropdown();\r\n    }\r\n    navigate = (e:React.MouseEvent<HTMLAnchorElement>) => {\r\n        const target = e.target as HTMLAnchorElement;\r\n        \r\n        if (target.dataset['to'])\r\n            this.routing.navigate(target.dataset['to']);\r\n        this.hideDropdown();\r\n    }\r\n\r\n    hideDropdown = () => {\r\n        this.setState({showDropdown: false});\r\n    }\r\n    \r\n    toggleDropdown = () => {\r\n        this.setState({ showDropdown: !this.state.showDropdown });\r\n    }\r\n    render(): ReactNode {\r\n\r\n        return (\r\n            <div >\r\n                <a className=\"btn btn-light no-wrap\" onClick={this.toggleDropdown}>\r\n                    <i className=\"fas fa-user me-3\" /> {this.props.user.displayName}\r\n                </a>\r\n                <div style={{position: 'absolute'}}>\r\n                    { this.state.showDropdown? \r\n                    <div\r\n                        style={{width: '200px', zIndex: 1, position: 'relative'}}\r\n                        className=\"bg-light border border-gray rounded text-start pt-3 pb-3\" >\r\n                        \r\n                        <a className=\"btn btn-text\" onClick={this.navigate} data-to=\"/dashboard\">\r\n                            <i className=\"fas fa-home me-3\"/>Dashboard\r\n                        </a>\r\n                        <a className=\"btn btn-text\" onClick={this.navigate} data-to=\"/profile\">\r\n                            <i className=\"fas fa-user-cog me-3\"/>Edit Profile\r\n                        </a>\r\n                        { this.authService.isAdmin ?\r\n                        <a className=\"btn btn-text text-success\" onClick={this.navigate} data-to=\"/admin\">\r\n                            <i className=\"fas fa-tachometer-alt me-3\"/>Admin Area\r\n                        </a> : null }\r\n                      \r\n                        <a className=\"btn btn-text text-danger\" onClick={this.logout}>\r\n                            <i className=\"fas fa-sign-out-alt me-3\"/>Logout\r\n                        </a>\r\n                    </div> : null }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default commonWrapper(UserSection);","import { resolve } from \"inversify-react\";\r\nimport React, { FormEvent  } from \"react\";  \r\nimport { Link } from \"react-router-dom\";\r\nimport BaseProps from \"../models/BaseProps\";\r\nimport { commonWrapper } from \"../utils/commonWrapper\";\r\nimport RoutingService from './../services/RoutingService';\r\nimport Settings from './../settings';\r\nimport AuthService from './../services/AuthService';\r\nimport ControlledComponent from \"../pages/ControlledComponent\";\r\nimport UserSection from \"./UserSection\";\r\nimport User from './../models/User';\r\nimport EventService from './../services/EventService';\r\nimport ApplicationProfile from \"../models/ApplicationProfile\";\r\n\r\nclass State {\r\n    activeMenu:string | undefined;\r\n    title:string        = Settings.App.uiSetting.defaultTitle;\r\n    searchKey:string    = \"\";\r\n }\r\n class Props extends BaseProps {\r\n     currentLocation?:Location;\r\n }\r\nclass HeaderView extends ControlledComponent<Props, State> {\r\n    @resolve(AuthService)\r\n    private authService:AuthService;\r\n    @resolve(RoutingService)\r\n    private routingService:RoutingService;\r\n\r\n    state:State = new State();\r\n\r\n    private _user:User | undefined;\r\n    \r\n    componentDidMount() \r\n    {\r\n        this.routingService.registerCallback(\"header\", console.log);\r\n        this.authService.addOnUserUpdated(\"header\", this.onUserUpdated);\r\n        this.authService.addOnAppProfileUpdated(\"header\", this.onAppProfileUpdated);\r\n    }\r\n    componentWillUnmount()\r\n    {\r\n        this.authService.removeOnUserUpdated(\"header\");\r\n        this.authService.removeOnAppProfileUpdated(\"header\");\r\n    }\r\n    gotoLoginPage = () => {\r\n        if (this.props.navigate)\r\n        {\r\n            this.props.navigate(\"/login\");\r\n        }\r\n    }\r\n    onUserUpdated = (user: User | undefined) => {\r\n        if (this._user !== undefined && user === undefined)\r\n        {\r\n            this.gotoLoginPage();\r\n        }\r\n        this._user = user;\r\n        this.forceUpdate();\r\n    }\r\n    onAppProfileUpdated = (val: ApplicationProfile | undefined) => {\r\n        this.forceUpdate();\r\n    }\r\n\r\n    private navigate = (url:string) => {\r\n        if (this.props.navigate === undefined)\r\n        {\r\n            console.warn(\"no props: navigate\");\r\n            return;\r\n        }\r\n        this.props.navigate(url);\r\n    }\r\n\r\n    brandOnClick = () => {\r\n       this.navigate(\"/\");\r\n    }\r\n    get semesterInfo() {\r\n        const appProfile = this.authService.appProfile;\r\n        if (appProfile && appProfile.semester && appProfile.semester) {\r\n            return \"Semester \" + appProfile.semester + \" | \" + appProfile.year;\r\n        }\r\n        return undefined;\r\n    }\r\n    render() {\r\n        const title = this.authService.appProfile ? this.authService.appProfile.name : this.state.title;\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row w-100 mt-2\">\r\n                        <div className=\"col-md-2 mb-2 text-center d-flex\" style={{alignItems: 'center'}}>\r\n                            <img src=\"/kiis-stroke.png\" width={50} className=\"me-2\" />\r\n                            <div className={\"text-start\"}>\r\n                                <Link className=\"navbar-brand\" to=\"/\">{title}</Link>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-7 mb-2 d-flex text-center text-secondary\" style={{alignItems: 'center'}}>\r\n                            <p style={{margin: 'auto'}}>{this.semesterInfo}</p>\r\n                        </div>\r\n                        <div className=\"col-md-2 mb-2 text-center\">\r\n                            { !this.authService.loggedIn?\r\n                            <Link to=\"/login\" className=\"btn btn-primary\">\r\n                               <i className=\"fas fa-sign-in-alt me-2\"/> Login\r\n                            </Link>\r\n                            : \r\n                            <UserSection user={this.authService.loggedUser}/> }\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </nav>\r\n        )\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default commonWrapper(HeaderView);\r\n\r\n\r\n","\n\nimport { resolve } from 'inversify-react';\nimport { Component, ReactNode } from 'react';\nimport LoadingService from '../../services/LoadingService';\nimport LoadingComponent from '../../interfaces/LoadingComponent';\nimport './Loading.scss';\nimport { invokeLater } from './../../utils/eventUtil';\n\nconst TRANSITION_DURATION = 300;\nconst ACTIVE_OPACITY = 0.7;\ntype State = {\n    show: boolean;\n    opacity: number;\n}\n\nexport default class Loading extends Component<any, State> implements LoadingComponent {\n    \n    @resolve(LoadingService)\n    private service:LoadingService;\n\n    constructor(props:any) {\n        super(props);\n        this.state = {\n            show: false,\n            opacity: 0,\n        }\n    }\n    startLoading() {\n        this.setState({ show: true, opacity: ACTIVE_OPACITY });\n    }\n    stopLoading() {\n        this.setState({ opacity: 0 }, () => {\n           invokeLater(() => this.setState({ show: false }), 300);\n        });\n    }\n    componentDidMount() {\n        this.service.setComponent(this);\n    }\n    render(): ReactNode {\n        if (!this.state.show) {\n            return null;\n        }\n        const outerSize = 14;\n        const innerSize = 12;\n        const transitionDuration = `${TRANSITION_DURATION}ms`;\n        return (\n            <div \n                className='loading bg-secondary border border-secondary rounded px-2 py-1 text-center'\n                style={{ opacity: this.state.opacity, transitionDuration: transitionDuration }} \n            >\n                <h3 className='text-light'>Loading</h3>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox={`0 0 120 ${outerSize}`} width=\"120\" height={outerSize}>\n                    <path \n                        className='loadingBarContainer' \n                        fill=\"none\" \n                        strokeWidth={outerSize} \n                        d={`M 5 ${outerSize/2} L 5 ${outerSize/2} L 115 4 `} \n                    />\n                    <path \n                        className='loadingBar' \n                        fill=\"none\" \n                        strokeWidth={innerSize}\n                        d={`M 6 ${outerSize/2} L 6 ${outerSize/2} L 114 4 `} \n                    />\n                </svg>\n\n            </div>\n        )\n    }\n}","\nimport { Component, ReactNode } from 'react';\nimport AnchorButton from '../buttons/AnchorButton';\nimport ToastItem from './ToastItem';\nimport { invokeLater } from './../../utils/eventUtil';\n\ntype Props = {\n    item: ToastItem,\n    onClose: (id: number) => any,\n}\n\ntype State = {\n    opacity: number,\n}\n\nconst TRANSITION_DURATION = 300;\n\nexport default class Toast extends Component<Props, State> {\n    constructor(props:Props) {\n        super(props);\n        this.state = {\n            opacity: 1,\n        };\n    }\n    onClose = () => {\n        this.setState({ opacity: 0 }, () => {\n            invokeLater(() => this.props.onClose(this.props.item.id), TRANSITION_DURATION);\n        })\n    }\n    render(): ReactNode {\n        const { item } = this.props;\n        const { opacity } = this.state;\n        return (\n            <div className='toast show mb-2' style={{  opacity: opacity, transitionDuration: `${TRANSITION_DURATION}ms` }}>\n                <div \n                    className={`alert alert-${item.mode} mb-0 d-flex`}\n                    style={{ flexWrap: 'nowrap', alignItems: 'center'}}\n                >\n                    <p style={{ margin: 'auto' }}>{item.message}</p>\n                    <AnchorButton \n                        iconClass='fas fa-times' \n                        className='btn btn-text btn-sm ms-3' \n                        onClick={(e) => this.onClose()}\n                    />\n                </div>\n            </div>\n        )\n    }\n}","\nimport { id } from 'inversify';\nimport { resolve } from 'inversify-react';\nimport { Component, ReactNode, RefObject } from 'react';\nimport AnchorButton from '../buttons/AnchorButton';\nimport ToastMode from '../../constants/ToastMode';\nimport ToastComponent from '../../interfaces/ToastComponent';\nimport { invokeLater } from '../../utils/eventUtil';\nimport ToastService from '../../services/ToastService';\nimport ToastItem from './ToastItem';\nimport Toast from './Toast';\nimport React from 'react';\n\n\n\ntype State = {\n    items: ToastItem[]\n}\n\nexport default class ToastContainer extends Component<any, State> implements ToastComponent {\n    \n    @resolve(ToastService)\n    private service: ToastService;\n\n    static ToastId:number = 1;\n\n    private toastRefs: Map<number, RefObject<Toast>> = new Map();\n\n    constructor(props:any) {\n        super(props);\n        this.state = {\n            items: []\n        }\n    }\n    componentDidMount() {\n        this.service.setComponent(this);\n    }\n    show = (message: string, mode: ToastMode, duration: number = 5000) => {\n        const { items } = this.state;\n        const id = ToastContainer.ToastId;\n        items.push({\n            id: id,\n            message: message,\n            mode: mode,\n            duration: duration\n        });\n        this.setState({ items: items }, ()=> {\n            invokeLater(() => {\n                const current = this.getRef(id)?.current;\n                if (current) {\n                    current.onClose();\n                }\n            }, duration);\n        });\n        ToastContainer.ToastId+=1;\n    }\n    closeToast = (id:number) => {\n        const { items } = this.state;\n        for (let i = 0; i < items.length; i++) {\n            const item = items[i];\n            if (item.id === id) {\n                items.splice(i, 1);\n\n                this.toastRefs.delete(item.id);\n                this.setState({ items: items });\n                break;\n            }            \n        }\n    }\n    getRef = (id: number) => {\n        if (!this.toastRefs.has(id)) {\n            this.toastRefs.set(id, React.createRef());\n        }\n        return this.toastRefs.get(id);\n    }\n    render(): ReactNode {\n        const { items } = this.state;\n        const reversed = items.reverse();\n        return (\n             <div className=\"toast-custom\">\n                {reversed.map((item) => {\n                    return (\n                        <Toast \n                            ref={this.getRef(item.id)} \n                            key={\"toast-\"+item.id} \n                            item={item} \n                            onClose={this.closeToast} \n                        />\n                    )\n                })}\n             </div>\n        )\n    }\n}\n","import React, { Component, Fragment } from 'react'\r\nimport { DialogType } from '../../constants/DialogType';\r\nimport Settings from '../../settings';\r\nimport { invokeLater } from '../../utils/eventUtil';\r\n\r\ntype ButtonRef              = React.RefObject< HTMLButtonElement >;\r\nconst initialMargin         = '-560px';\r\nconst transitionDuration    = '250ms';\r\nconst BACK_COLOR            = 'rgba(100,100,100,0.7)';\r\n\r\nclass State {\r\n    backColor: string = 'transparent';\r\n    marginTop: string = initialMargin;\r\n}\r\ninterface Props  {\r\n    onConfirm:(arg:any)=>any;\r\n    onCancel:(arg:any)=>any;\r\n    onClose:(arg:any)=>any;\r\n\r\n    type:DialogType;\r\n    yesOnly:boolean;\r\n    yesLabel:string;\r\n\r\n    title?:string;\r\n\r\n    children:any;\r\n}\r\nclass Dialog extends Component<Props, State> {\r\n    yesButton:ButtonRef     = React.createRef();\r\n    cancelButton:ButtonRef  = React.createRef();\r\n    state:State             = new State();\r\n\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n    onConfirm = (e:any) => {        \r\n        this.close(()=>{\r\n            this.props.onConfirm(e);\r\n        });\r\n    }\r\n    close = (callback:()=>any)=> {\r\n        invokeLater(()=>{\r\n            this.setState({ backColor:'transparent', marginTop: initialMargin }, ()=>{\r\n                invokeLater(callback, 100);\r\n            });\r\n        }, 100);\r\n    }\r\n    onCancel = (e:any) => {\r\n        this.close(()=>{\r\n            if (this.props.onCancel) {\r\n                this.props.onCancel(e);\r\n            }\r\n        });\r\n    }\r\n    onClose = (e:any) => {\r\n        this.close(()=>{\r\n            this.props.onClose(e);\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        const focusCancelBtn = this.props.type === DialogType.ERROR || this.props.type === DialogType.WARNING ;\r\n        if (!focusCancelBtn && this.yesButton.current)  {\r\n            this.yesButton.current.focus();\r\n        }  else if (focusCancelBtn && this.cancelButton.current)  {\r\n            this.cancelButton.current.focus();\r\n        } else if (focusCancelBtn && this.yesButton.current) {\r\n            this.yesButton.current.focus();\r\n        }\r\n\r\n        invokeLater(()=>{\r\n            let marginTop = this.stringContent ? '30vh' : '0vh';\r\n            this.setState({backColor:BACK_COLOR, marginTop: marginTop})\r\n        }, 100);\r\n    }\r\n\r\n    get stringContent() { return typeof this.props.children === \"string\"; }\r\n\r\n    get headerClassName() : string\r\n    {\r\n        switch (this.props.type) {\r\n            case DialogType.INFO:\r\n            case DialogType.INFO_NO_BUTTONS : \r\n                                      return \"bg-info text-light\";\r\n            case DialogType.WARNING : return \"bg-warning text-dark\";\r\n            case DialogType.ERROR   : return \"bg-danger text-light\";\r\n        \r\n            default                 : return \"bg-secondary\";\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const title     = this.props.title ? this.props.title:  \"Info\";\r\n        const yesOnly   = this.props.yesOnly === true;\r\n        const maxWidth  = this.stringContent? '500px': '85vw';\r\n\r\n        const dialogStyle = {\r\n            transitionDuration:  transitionDuration,\r\n            marginTop: this.state.marginTop,\r\n            maxWidth: maxWidth,\r\n            marginLeft: 'auto',\r\n            marginRight: 'auto'\r\n        };\r\n        const modalDialogClass =  this.stringContent ? \"modal-dialog -modal-dialog-centered\" : \"-modal-dialog-centered\";\r\n        return (\r\n            <Fragment>\r\n                <Backdrop bgColor={this.state.backColor} />\r\n                <div className=\"modal show d-block\">\r\n                    <div \r\n                        className={modalDialogClass}\r\n                        style={dialogStyle}\r\n                    >\r\n                        <div className=\"modal-content mt-5\">\r\n                            <Header \r\n                                className={this.headerClassName} \r\n                                title={title} \r\n                                onClose={this.onClose} \r\n                            />\r\n                            <div className=\"modal-body\" style={{ maxHeight: '70vh', overflow: 'auto' }} >{this.props.children}</div>\r\n                            { this.props.type === DialogType.INFO_NO_BUTTONS? \r\n                            <div className={\"modal-footer \"} >\r\n                                <h6 className='w-100 text-center'>{Settings.App.uiSetting.defaultTitle}</h6>\r\n                            </div> \r\n                            :\r\n                            <Footer \r\n                                cancelButton={this.cancelButton} \r\n                                yesLabel={this.props.yesLabel}\r\n                                yesButton={this.yesButton} \r\n                                yesOnly={yesOnly} \r\n                                onConfirm={this.onConfirm} \r\n                                onCancel={this.onCancel} \r\n                            /> }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nfunction Backdrop(props:{bgColor:string}) {\r\n    const style = { transitionDuration:transitionDuration, backgroundColor: props.bgColor };\r\n    return (\r\n        <div className=\"modal-backdrop\" style={style} />\r\n    );\r\n}\r\n\r\nfunction Footer(props:{yesLabel:string, yesButton:ButtonRef, cancelButton:ButtonRef, yesOnly:boolean, onConfirm:(e:any)=>any, onCancel?:(e:any)=>any}) {\r\n    return (\r\n        <div className={\"modal-footer\"} >\r\n            <button \r\n                ref={props.yesButton} \r\n                type=\"button\"\r\n                onClick={props.onConfirm} \r\n                className=\"btn btn-outline-primary\" >\r\n                {props.yesLabel}\r\n            </button>\r\n            {props.yesOnly ? \r\n                null : \r\n                <button \r\n                    ref={props.cancelButton} \r\n                    type=\"button\"\r\n                    onClick={props.onCancel} \r\n                    className=\"btn btn-outline-secondary\" >\r\n                    No\r\n                </button>}\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Header(props:{ title:string, className:string, onClose:(e:any)=>any }) {\r\n    return (\r\n        <div className={\"modal-header \" + props.className} >\r\n            <h5 className=\"modal-title\" id=\"exampleModalCenterTitle\" >{props.title}</h5>\r\n            <button onClick={props.onClose} type=\"button\" className=\"close btn btn-text text-light\" >\r\n                <span><i className=\"fas fa-times\" /></span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialog;","import { resolve } from \"inversify-react\";\nimport React, { ReactElement, RefObject } from \"react\";\nimport { Component } from \"react\";\nimport { DialogType } from \"../../constants/DialogType\";\nimport DialogProps from \"../../models/DialogProps\";\nimport DialogService from \"../../services/DialogService\";\nimport Dialog from \"./Dialog\";\n\ntype DialogState = { show: boolean };\n\nexport default class DialogContainer extends Component<any, DialogState> {\n    \n    // dialog props\n    dialogTitle: string;\n    dialogContent: any;\n    dialogYesOnly: boolean;\n\n    yesLabel: string = \"Yes\";\n\n    dialogOnConfirm: (e: any) => any;\n    dialogOnCancel: (e: any) => any;\n\n    onCloseCallback?: (e: any) => any;\n\n\n\n    dialogType: DialogType = DialogType.INFO;\n\n    @resolve(DialogService)\n    private dialogService: DialogService;\n    private ref: RefObject<Dialog> = React.createRef();\n\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            show: false,\n        };\n    }\n    \n\n    // fired when confirmed/canceled\n    public dismissAlert = () => {\n        if (this.ref.current) {\n            this.ref.current.close(() => {\n                this.setState({ show: false });\n            })\n            return;\n        }\n        this.setState({ show: false });\n    }\n\n    // fired when pressing [X] button\n    dialogOnClose = (e: any) => {\n\n        this.setState({ show: false }, () => {\n            if (this.onCloseCallback) {\n                this.onCloseCallback(e);\n            }\n\n            this.resetProps();\n        });\n    }\n    setContent(content: ReactElement<DialogProps, typeof Component>) {\n        this.dialogContent = content;\n        this.forceUpdate();\n    }\n    componentDidMount() {\n        this.dialogService.setContainer(this);\n    }\n    resetProps = () => {\n        this.onCloseCallback = undefined;\n        this.yesLabel = \"Yes\";\n    }\n    get isShown() { return this.state.show }\n\n    public showNoButtons = (title: string, content: any, onClose: (e: any) => any, closeObj?: { close: () => any }) => {\n        this.dialogType = DialogType.INFO_NO_BUTTONS;\n        this.dialogTitle = title;\n        this.dialogContent = content;\n        if (closeObj)\n            closeObj.close = this.dismissAlert;\n\n        this.display();\n    }\n    public show = (\n        type: DialogType,\n        title: string,\n        content: any,\n        yesOnly: boolean,\n        onConfirm: (e: any) => any,\n        onCancel?: (e: any) => any,\n        yesLabel?: string\n    ) => {\n\n        this.dialogType = type;\n        this.dialogTitle = title;\n        this.dialogContent = content;\n        this.dialogYesOnly = yesOnly;\n        this.yesLabel = yesLabel ? yesLabel : this.yesLabel;\n\n        this.dialogOnConfirm = (e: any) => {\n            this.dismissAlert();\n            onConfirm(e);\n        }\n        this.onCloseCallback = onCancel;\n        if (!yesOnly) {\n\n            this.dialogOnCancel = (e: any) => {\n                this.dismissAlert();\n                if (onCancel) {\n                    onCancel(e);\n                }\n            };\n        }\n        this.display();\n    }\n\n    display() {\n        this.setState({ show: true });\n    }\n\n    render(): React.ReactNode {\n\n        return (\n            this.state.show ?\n                <Dialog\n                    ref={this.ref}\n                    title={this.dialogTitle}\n                    yesOnly={this.dialogYesOnly}\n                    onConfirm={this.dialogOnConfirm}\n                    onCancel={this.dialogOnCancel}\n                    onClose={this.dialogOnClose}\n                    type={this.dialogType}\n\n                    yesLabel={this.yesLabel}\n                >\n                    {this.dialogContent}\n                </Dialog> : null\n        );\n    }\n}\n","import React, { Component, Fragment, ReactElement, RefObject } from 'react';\r\nimport './App.scss'; \r\nimport { Routing } from './layout/Routing';\r\nimport { useLocation, Location } from 'react-router-dom';\r\nimport { resolve } from 'inversify-react';\r\nimport HeaderView from './layout/HeaderView';\r\nimport Dialog from './components/dialog/Dialog';\r\nimport { DialogType } from './constants/DialogType';\r\nimport DialogService from './services/DialogService';\r\nimport { Chart as ChartJS, CategoryScale, Legend, LinearScale, LineElement, PointElement, Title, Tooltip } from 'chart.js';\r\n \r\nimport DialogProps from './models/DialogProps';\r\nimport AuthService from './services/AuthService';\r\nimport { invokeLater } from './utils/eventUtil';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { NavigateFunction } from 'react-router-dom';\r\nimport RoutingService from './services/RoutingService';\r\nimport Loading from './components/loading/Loading';\r\nimport ToastContainer from './components/toast/ToastContainer';\r\nimport DialogContainer from './components/dialog/DialogContainer';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\n\r\n\r\nfunction App() {\r\n  const loc:Location = useLocation();\r\n  const navigate:NavigateFunction = useNavigate();\r\n  return (\r\n    <Fragment>\r\n      <HeaderView currentLocation={loc}/>\r\n      <Root navigate={navigate}/>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nclass State  {\r\n  loaded:boolean = false;\r\n  loadingError:boolean = false;\r\n}\r\nclass Root extends Component<{navigate:NavigateFunction},State> {\r\n  @resolve(AuthService)\r\n  private authService:AuthService;\r\n  @resolve(RoutingService)\r\n  private routingService:RoutingService;\r\n\r\n  state: Readonly<State> =new State();\r\n\r\n  componentDidMount()\r\n  {\r\n    this.routingService.setNavigate(this.props.navigate);\r\n    invokeLater(this.load, 100);\r\n  }\r\n  load = () => {\r\n    this.setState({ loadingError: false });\r\n    \r\n    this.authService.loadApplication()\r\n      .then(()=>{\r\n        this.setState({ loaded: true });\r\n      })\r\n      .catch((e)=>{\r\n        console.error(e);\r\n        this.setState({ loadingError: true });\r\n      })\r\n  }\r\n\r\n  render(): React.ReactNode {\r\n\r\n    if (this.state.loadingError === true)\r\n    {\r\n      return (\r\n        <div className='w-100 text-center'>\r\n          <h3 className=\"mt-5 text-danger\">Error while loading content</h3>\r\n          <a className='btn btn-outline-dark btn-sm' onClick={this.load}>\r\n            <i className='fas fa-redo me-3'></i>\r\n            Reload\r\n          </a>\r\n        </div>\r\n      )\r\n    }\r\n    if (this.state.loaded === false)\r\n    {\r\n      return (<h3 className='mt-5 text-center text-secondary'>Loading content</h3>)\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <DialogContainer/>\r\n        <ToastContainer />\r\n        <Routing />\r\n        <Loading />\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\r\nimport { Provider } from 'inversify-react';\r\nimport { container } from './inversify.config';\r\n\r\n// configure monaco editor\r\n// @ts-ignore \r\nglobal.self.MonacoEnvironment = {\r\n\tgetWorkerUrl: function (_moduleId: any, label: string) {\r\n\t\tconsole.log(\"get worker function: \", _moduleId, label);\r\n\t\tif (label === 'json') {\r\n\t\t\treturn './editorworkers/json.worker.bundle.js';\r\n\t\t}\r\n\t\tif (label === 'css' || label === 'scss' || label === 'less') {\r\n\t\t\treturn './editorworkers/css.worker.bundle.js';\r\n\t\t}\r\n\t\tif (label === 'html' || label === 'handlebars' || label === 'razor') {\r\n\t\t\treturn './editorworkers/html.worker.bundle.js';\r\n\t\t}\r\n\t\tif (label === 'typescript' || label === 'javascript') {\r\n\t\t\treturn './editorworkers/ts.worker.bundle.js';\r\n\t\t}\r\n\t\tif (label === 'yaml' || label === 'yml')\r\n\t\t{\r\n\t\t\treturn  './editorworkers/yaml.worker/js';\r\n\t\t}\r\n\t\treturn './editorworkers/editor.worker.bundle.js';\r\n\t}\r\n};\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider container={container} >\r\n    <HashRouter>\r\n\r\n      <App />\r\n    </HashRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}