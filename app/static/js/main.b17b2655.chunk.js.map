{"version":3,"sources":["settings.ts","utils/eventUtil.ts","constants/DialogType.ts","services/RoutingService.ts","models/BaseModel.ts","services/AuthService.ts","pages/ControlledComponent.tsx","utils/cookieUtil.ts","utils/restApiUtil.ts","models/User.ts","services/ToastService.ts","apiClients/RestClient.ts","services/MasterDataService.ts","components/containers/DialogPrompt.tsx","services/DialogService.tsx","services/LoadingService.ts","services/EventService.ts","inversify.config.ts","reportWebVitals.ts","components/buttons/ActionButton.tsx","layout/ViewTemplate.tsx","utils/commonWrapper.tsx","pages/BasePage.tsx","components/buttons/AnchorButton.tsx","utils/stringUtil.ts","utils/componentUtil.tsx","components/buttons/PaginationButtons.tsx","pages/admin/BaseMasterDataPage.tsx","models/BaseState.ts","models/MasterDataResult.ts","models/BaseMasterDataState.ts","models/Employee.ts","pages/admin/EmployeesPage.tsx","pages/admin/MainAdminPage.tsx","models/School.ts","pages/admin/SchoolsPage.tsx","pages/admin/UsersPage.tsx","components/messages/ErrorMessage.tsx","components/messages/InfoMessage.tsx","pages/auth/LoginPage.tsx","pages/error/ErrorView.tsx","pages/home/Home.tsx","pages/user/Dashboard.tsx","pages/user/EditProfile.tsx","models/SemesterPeriod.ts","pages/admin/SemesterPeriodsPage.tsx","models/ClassLevel.ts","pages/admin/ClassLevelsPage.tsx","models/Student.ts","pages/admin/StudentsPage.tsx","models/ClassMember.ts","pages/admin/ClassMembersPage.tsx","layout/Routing.tsx","layout/UserSection.tsx","layout/HeaderView.tsx","components/containers/Dialog.tsx","Loading.tsx","ToastContainer.tsx","App.tsx","index.tsx"],"names":["Settings","this","_setting","window","appSetting","undefined","invokeLater","callback","intervalMs","timeout","setTimeout","clearTimeout","DialogType","RoutingService","injectable","lastRedirectedRoute","navigateFunction","routeUpdateCallbacks","Map","setLastRedirectedRoute","origin","setNavigate","navigate","url","registerCallback","set","deRegisterCallback","delete","updateRoute","console","debug","forEach","BaseModel","id","LOGIN_URL","App","hosts","api","LOGOUT_URL","LOAD_USER_URL","LOAD_APP_URL","UPDATE_PROFILE_URL","AuthService","inject","RestClient","_loggedUser","_appProfile","_onUserUpdate","_onAppProfileUpdate","addOnUserUpdated","key","action","removeOnUserUpdated","addOnAppProfileUpdated","removeOnAppProfileUpdated","loadApplication","Promise","resolve","reject","rest","getCommon","then","response","loadUser","catch","loginKeyCookieExist","getAuthorized","handleSuccessLogin","error","updateProfile","user","res","rej","putAuthorized","login","username","password","formData","FormData","append","parameters","axios","post","join","headers","responseJson","data","loginKey","result","err","Error","message","loggedUser","Object","assign","User","setLoginKeyCookie","routing","redirectedRoute","logout","postAuthorized","removeLoginKeyCookie","value","loggedIn","hasAuthorityType","ControlledComponent","handleInputChange","e","target","HTMLInputElement","HTMLTextAreaElement","HTMLSelectElement","input","state","type","checked","rawName","name","split","obj","index","length","setState","el","document","getElementById","focus","Component","setCookie","cname","cvalue","exdays","d","Date","setTime","getTime","expires","toUTCString","cookie","getCookie","ca","decodeURIComponent","i","c","charAt","substring","indexOf","LOGIN_KEY_NAME","commonAuthorizedHeader","contentType","token","val","getLoginKeyCookie","trim","displayName","fullName","phoneNumber","email","editPassword","authorities","userAuthType","t","birthDate","birthPlace","gender","ToastService","component","setComponent","show","mode","duration","SUCCESS_CODE","LoadingService","body","postCommon","deleteAuthorized","deleteCommon","putCommon","patchAuthorized","patchCommon","startLoading","loading","stopLoading","expectRefreshToken","code","updateLoginKeyCookie","finally","put","patch","get","API_URL","MasterDataService","list","page","perPage","order","orderDesc","filter","orderString","model","patchAction","State","content","DialogPrompt","props","inputRef","React","createRef","onSubmit","preventDefault","defaultValue","current","ref","onChange","className","required","INVOCATION_WAIT_DELAY","DialogService","container","setContainer","showInfo","title","isShown","INFO","info","showWarning","WARNING","showError","messageContent","toLowerCase","startsWith","dangerouslySetInnerHTML","__html","ERROR","showConfirmDanger","showConfirm","showConfirmWarning","showPrompt","doShowPrompt","showNoButtons","dismissAlert","showContent","closeObserver","close","createElement","EventService","Container","bind","toSelf","inSingletonScope","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ActionButton","disabledProps","disabled","onClick","iconClass","children","ViewTemplate","goBack","back","attributes","style","textAlign","titleAlign","commonWrapper","routeParams","useParams","doNavigate","useNavigate","routingService","BasePage","authorized","initialize","uiSetting","defaultTitle","gotoHomePage","invalidSession","forceUpdate","authService","AnchorButton","to","randomString","characters","charactersLength","Math","floor","random","getInputReadableDate","date","getFullYear","twoDigits","getMonth","getDate","toString","CommonTable","map","row","rowKey","col","DataTableHeaderValue","label","orderable","adjustLabel","includes","splitByDot","capitalize","toUpperCase","PaginationButtons","buttonIndexes","generateButtonValues","limit","totalData","activePage","lastIndex","nextPage","previusPage","currentPage","displayed_buttons","buttonCount","ceil","min","max","push","BaseMasterDataPage","load","service","assignedItems","items","item","defaultItem","onFormSubmit","insert","update","dialog","showForm","hideForm","edit","ok","resp","loadCurrentPage","showInsertForm","resetFormAndClose","formEditSubmit","setItemsOrder","desc","getDataTableHeaderComponent","getDataTableHeaderVals","activeOrder","isOrderDesc","actionButton","showDelete","listToggler","add","remove","BaseState","busy","MasterDataResult","BaseMasterDataState","Employee","nisdm","profileImage","noKk","noKtp","addressKtp","addressOther","motherName","fatherName","npwp","bankAccountNumber","educations","schools","photoScan","kkScan","npwpScan","bankAccountScan","signatureFile","active","removeEducation","splice","addSchool","school","warn","removeSchool","Education","major","certificateScan","educationId","addEducation","submitAddEducation","education","schoolId","submitAddSchool","closeFormButton","showFormButton","overflow","paginationButton","startingNumber","toLocaleDateString","FormEdit","AddEducationFormState","AddEducationForm","AddSchoolForm","selectedSchool","log","MainAdminPage","managementPages","m","School","nis","address","level","resetPassword","a","toLocaleLowerCase","flexWrap","width","ErrorMessage","InfoMessage","loginSuccess","isAdmin","padding","ErrorView","showTitle","welcomingWords","Home","welcomingWord","startDisplayWelcomingWord","words","paddingTop","word","WelcomingWord","fontSize","fontWeight","autoComplete","SemesterPeriod","semester","year","direktur","bendahara","pengawasSekolah","headHRD","hearMR","headRnD","headLogistic","headPublicRelation","headLanguage","headMAKafila","headMAKafilaFullday","headMtsKafila","headMtsAlKahfi","headMtsKafilaIbnuMasud","headPesantren","wakabidTahfiz","wakabidAsrama","adminKiis","adminMAKafila","adminMAKafilaFullday","adminMtsAlKahfi","adminMtsKafilaIbnuMasud","adminTahfiz","adminAsrama","pjQurban","pjRamadhan","pjPromosiPSB","pjWebMedia","pjTamuFO","pjAlumni","pjUtsUas","pjEvaluasiPengembanganKurikulum","pjLabKomputer","pjLabIPA","pjLabBahasa","pjBinaPrestasi","pjPerpustakaan","pjBK","pjBahasaArab","pjBahasaInggris","pjUKS","pjOpkiis","pjDKM","pjKesiswaan","pjKurikulum","EmployeeFields","setActive","setEmployeeInCharge","field","employeeCellFields","employeeFields","display","SetEmployeeForm","search","searchEmployee","handleSearchEmployee","employees","toast","showDanger","closeDropdown","setSelectedEmployee","selectedEmployee","submit","placeholder","position","overflowY","height","ClassLevel","letter","description","semesterActive","setSchool","Student","nisKiis","nisn","city","province","siblingNum","siblingCount","fatherBirthDate","fatherBirthPlace","fatherEducation","fatherPhoneNumber","fatherOccupation","fatherAddress","fatherIncome","motherBirthDate","motherBirthPlace","motherEducation","motherPhoneNumber","motherOccupation","motherAddress","motherIncome","originSchool","sttbNumber","entranceDate","entranceClass","transferFrom","transferReason","entranceCertificateScore","leaveSchool","leaveReason","educationFinished","graduationDateMts","certificateNumberMts","seniorLevelSchool","graduationDateMa","certificateNumberMa","graduationCeremonyDate","highEducationUniv","highEducationMajor","workDate","workCompany","ClassMember","student","classLevel","loadClasses","URL_GET_ACTIVE_CLASSES","handleClassLoaded","classes","loadStudents","searchStudent","masterDataService","handleStudentLoaded","students","closeStudentDropdown","setSelectedStudent","setSelectedClass","submitForm","Routing","path","element","disabledWhenLoggedIn","requiredRole","RestrictedRouteElement","CustomNavigate","replace","showDropdown","UserSection","hideDropdown","dataset","toggleDropdown","zIndex","activeMenu","searchKey","HeaderView","_user","gotoLoginPage","onUserUpdated","onAppProfileUpdated","brandOnClick","appProfile","alignItems","src","margin","semesterInfo","initialMargin","transitionDuration","backColor","marginTop","Backdrop","backgroundColor","bgColor","Footer","yesButton","onConfirm","yesLabel","yesOnly","cancelButton","onCancel","Header","onClose","Dialog","focusCancelBtn","stringContent","INFO_NO_BUTTONS","maxWidth","dialogStyle","marginLeft","marginRight","modalDialogClass","headerClassName","maxHeight","Loading","xmlns","viewBox","fill","stroke","ToastContainer","ToastId","closeToast","Toast","ChartJS","register","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","loaded","loadingError","Root","DialogState","DialogContainer","dialogTitle","dialogContent","dialogYesOnly","dialogOnConfirm","dialogOnCancel","onCloseCallback","dialogType","dialogOnClose","resetProps","closeObj","dialogService","loc","useLocation","currentLocation","global","self","MonacoEnvironment","getWorkerUrl","_moduleId","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b17b2655.chunk.js","sourcesContent":["let SettingValues:{\r\n        \r\n  \r\n    uiSetting: {\r\n      \r\n        defaultTitle: string\r\n    },\r\n     \r\n    hosts:{ \r\n        api: string,\r\n      \r\n    }\r\n};\r\ntype SettingsType = typeof SettingValues;\r\n \r\nexport default class Settings {\r\n\r\n    private static _setting:SettingsType|undefined = undefined;\r\n\r\n    public static get App() : SettingsType\r\n    {\r\n        if (this._setting)\r\n        {\r\n            return this._setting;\r\n        }\r\n         \r\n        return this._setting = (window as any).appSetting;\r\n    }\r\n    \r\n}","export const invokeLater = (callback:()=>any, intervalMs:number) => {\r\n    const timeout = setTimeout(()=>{\r\n        callback();\r\n        clearTimeout(timeout);\r\n      }, intervalMs)\r\n}","export enum DialogType\r\n{\r\n    INFO, WARNING, ERROR,\r\n    INFO_NO_BUTTONS,\r\n}","import 'reflect-metadata'\nimport { injectable } from \"inversify\";\nimport { NavigateFunction } from \"react-router-dom\";\n\n@injectable()\nexport default class RoutingService\n{\n    private lastRedirectedRoute?:string;\n    private navigateFunction:NavigateFunction | undefined;\n\n    get redirectedRoute() { return this.lastRedirectedRoute }\n    private readonly routeUpdateCallbacks:Map<string, (url:string)=>any> = new Map();\n\n    constructor()\n    {\n\n    }\n\n    setLastRedirectedRoute = (origin: string) => {\n        this.lastRedirectedRoute = origin;\n    }\n    \n    setNavigate = (navigate: NavigateFunction) => {\n        this.navigateFunction = navigate;\n    }\n    navigate = (url:string) => {\n        if (this.navigateFunction)  \n            this.navigateFunction(url);\n    }\n\n    registerCallback = (origin:string, callback:(url:string)=>any) => {\n        this.routeUpdateCallbacks.set(origin, callback);\n    }\n    deRegisterCallback = (origin:string) => {\n        this.routeUpdateCallbacks.delete(origin);\n    }\n    updateRoute = (url:string) => {\n        console.debug(\"Route changed via call to navigate: \" + url);\n        this.routeUpdateCallbacks.forEach((callback)=>{\n            callback(url);\n        })\n    }\n}","export default class BaseModel\r\n{\r\n    public id:number = -1;\r\n}","import { inject, injectable } from \"inversify\";\r\nimport User from \"../models/User\";\r\nimport Settings from './../settings';\r\nimport WebResponse from './../models/WebResponse';\r\nimport axios, { AxiosError, AxiosResponse } from \"axios\";\r\nimport { removeLoginKeyCookie, setLoginKeyCookie, commonAuthorizedHeader, loginKeyCookieExist } from './../utils/restApiUtil';\r\nimport ApplicationProfile from './../models/ApplicationProfile';\r\nimport RestClient from './../apiClients/RestClient';\r\nimport RoutingService from './RoutingService';\r\n\r\n\r\nconst LOGIN_URL     = Settings.App.hosts.api + \"/login\";\r\nconst LOGOUT_URL    = Settings.App.hosts.api + \"/api/user/logout\";\r\nconst LOAD_USER_URL = Settings.App.hosts.api + \"/api/user\";\r\nconst LOAD_APP_URL  = Settings.App.hosts.api + \"/api/public/index\";\r\nconst UPDATE_PROFILE_URL  = Settings.App.hosts.api + \"/api/user/update\";\r\n\r\n@injectable()\r\nexport default class AuthService {\r\n     \r\n    private _loggedUser:User | undefined;\r\n    private _appProfile:ApplicationProfile | undefined;\r\n    private _onUserUpdate:Map<string, (user:User | undefined) =>any> = new Map();\r\n    private _onAppProfileUpdate:Map<string, (val:ApplicationProfile | undefined) =>any> = new Map();\r\n\r\n\r\n    @inject(RestClient)\r\n    private rest:RestClient;\r\n    @inject(RoutingService)\r\n    private routing:RoutingService;\r\n \r\n    get loggedIn() { return this._loggedUser != undefined; }\r\n\r\n    get loggedUser() { \r\n        return this._loggedUser; \r\n    }\r\n    get isAdmin() { \r\n        let result = this.loggedIn && this.loggedUser?.hasAuthorityType('ROLE_SUPERADMIN') \r\n        return result;\r\n    }\r\n    get appProfile()\r\n    {\r\n        return this._appProfile;\r\n    }\r\n    \r\n    private set loggedUser(value:User | undefined) { \r\n        this._loggedUser = value; \r\n        this._onUserUpdate.forEach(action => action(value))\r\n    }\r\n    private set appProfile(value: ApplicationProfile | undefined) {\r\n        this._appProfile = value;\r\n        this._onAppProfileUpdate.forEach(action => action(value))\r\n    }\r\n\r\n    addOnUserUpdated = (key:string, action:(user:User|undefined) => any) => {\r\n        this._onUserUpdate.set(key, action);\r\n    }\r\n    removeOnUserUpdated = (key:string) => {\r\n        this._onUserUpdate.delete(key);\r\n    }\r\n    addOnAppProfileUpdated = (key:string, action:(val:ApplicationProfile|undefined) => any) => {\r\n        this._onAppProfileUpdate.set(key, action);\r\n    }\r\n    removeOnAppProfileUpdated = (key:string) => {\r\n        this._onAppProfileUpdate.delete(key);\r\n    }\r\n\r\n    loadApplication = () : Promise<ApplicationProfile> => {\r\n        \r\n        return new Promise<ApplicationProfile>((resolve, reject)=>{\r\n            \r\n            this.rest.getCommon<ApplicationProfile>(LOAD_APP_URL, {})\r\n                .then((response)=>{\r\n                    this.loadUser();\r\n                    this._appProfile = response;\r\n                    resolve(response);\r\n                })\r\n                .catch(reject);\r\n        })\r\n    }\r\n\r\n    loadUser = () => {\r\n        if (loginKeyCookieExist())\r\n        {\r\n            this.rest.getAuthorized<User>(LOAD_USER_URL)\r\n                .then((response:User) => {\r\n                    this.handleSuccessLogin(response)\r\n                })\r\n                .catch(console.error)\r\n        }\r\n    }\r\n\r\n    updateProfile = (user:User) : Promise<User> => {\r\n        return new Promise<User>((res, rej) => {\r\n            this.rest.putAuthorized<User>(UPDATE_PROFILE_URL, user)\r\n                .then(user => {\r\n                    this.handleSuccessLogin(user);\r\n                    res(user);\r\n                })\r\n                .catch(rej);\r\n        })\r\n             \r\n    }\r\n\r\n    login = (username: string, password: string): Promise<User> => {\r\n        \r\n        return new Promise<User>((resolve, reject) => {\r\n            \r\n            const formData = new FormData();\r\n            formData.append(\"username\", username);\r\n            formData.append(\"password\", password);\r\n            formData.append(\"transport_type\", \"rest\");\r\n            let parameters = [\r\n                \"username=\"+username,\r\n                \"password=\"+password,\r\n                \"transport_type=rest\"\r\n            ]\r\n            axios.post(LOGIN_URL, parameters.join(\"&\"), {\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' }\r\n            }).then((response: AxiosResponse) => {\r\n\r\n                const responseJson:WebResponse<User>    = response.data;\r\n                const loginKey                          = response.headers['access-token'];\r\n                \r\n                this.handleSuccessLogin(responseJson.result, loginKey);\r\n                resolve(responseJson.result);\r\n            }).catch((err:AxiosError) =>{\r\n                reject(err.response?.data ?? new Error(err.message))\r\n            });\r\n        });\r\n    }\r\n\r\n    handleSuccessLogin = (user:User, loginKey?:string) => {\r\n        this.loggedUser = Object.assign(new User, user);\r\n        if (loginKey)\r\n        {\r\n            setLoginKeyCookie(loginKey);\r\n        }\r\n        if (this.routing.redirectedRoute)\r\n        {\r\n            this.routing.navigate(this.routing.redirectedRoute);\r\n        }\r\n    }\r\n\r\n    logout = () => {\r\n        this.loggedUser = undefined;\r\n        this.rest.postAuthorized(LOGOUT_URL, {}).then(response => {    \r\n            removeLoginKeyCookie();\r\n        }).catch(console.error);\r\n    }\r\n}","import React, { ChangeEvent, Component } from \"react\";\r\n\r\nexport default abstract class ControlledComponent<P,S > extends Component<P,S>\r\n{\r\n    handleInputChange = (e:ChangeEvent, callback?:(val:any)=>any) => {\r\n        if (e.target instanceof HTMLInputElement || e.target instanceof HTMLTextAreaElement || e.target instanceof HTMLSelectElement)\r\n        {\r\n            const input:HTMLInputElement|HTMLTextAreaElement|HTMLSelectElement = e.target;\r\n            const state = this.state as any;\r\n            const id = input.id;\r\n            if (!state) {\r\n                return;\r\n            }\r\n            let value:any;\r\n            if (input.type == \"number\") {\r\n                value = input.value;\r\n                // try {\r\n                //     value = parseInt(input.value);\r\n                // } catch (e)\r\n                // {\r\n                //     return;\r\n                // }\r\n            }\r\n            else if (input.type == \"checkbox\" && input instanceof HTMLInputElement) {\r\n                value = input.checked;\r\n            }\r\n            else {\r\n                value = input.value;\r\n            }\r\n\r\n            // assign to specific field\r\n           \r\n            const name      = input.name;\r\n            let rawName     = name.split(\".\");\r\n            let obj         = state;\r\n            \r\n            rawName.forEach((key, index) => {\r\n                if (obj && index < rawName.length - 1) {\r\n                    obj = obj[key];\r\n                }\r\n                if ( index == rawName.length - 1 ) {\r\n                    obj[key] = value;\r\n                }\r\n            });\r\n            \r\n            // state[input.name] = value;\r\n            this.setState(state, () => {\r\n                if (id) {\r\n                    const el = document.getElementById(id);\r\n                    if (el) {\r\n                        el.focus();\r\n                    }\r\n                }\r\n                if (callback) {\r\n                    callback(value);\r\n                }\r\n            });\r\n        }\r\n        \r\n    }\r\n}","\nexport const removeCookie = (cname:string) => {\n    setCookie(cname, null, 0);\n}\n \nexport const setCookie = function (cname:string, cvalue:string | null, exdays=1) {\n    var d = new Date();\n    d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));\n    var expires = \"expires=\" + d.toUTCString();\n    document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\n}\nexport const getCookie = function (cname:string) {\n    var name = cname + \"=\";\n    var decodedCookie = decodeURIComponent(document.cookie);\n    var ca = decodedCookie.split(';');\n    for (var i = 0; i < ca.length; i++) {\n        var c = ca[i];\n        while (c.charAt(0) == ' ') {\n            c = c.substring(1);\n        }\n        if (c.indexOf(name) == 0) {\n            return c.substring(name.length, c.length);\n        }\n    }\n    return \"\";\n}","\nimport { getCookie, setCookie, removeCookie } from './cookieUtil';\nconst LOGIN_KEY_NAME = \"kado-in-login-token\"\n\nexport const commonAuthorizedHeader = (contentType:string = 'application/json') => {\n    return {\n        'Content-Type': contentType,\n        'requestId': \"ABCD\",// getRequestId(),//'localStorage.getItem(\"requestId\")',\n        'Authorization': 'Bearer '+getCookie(LOGIN_KEY_NAME)\n    }\n};\nexport const commonHeader = (contentType:string = 'application/json') => {\n    return {\n        'Content-Type': contentType,\n        // 'requestId': getRequestId(), \n    }\n};\nexport const removeLoginKeyCookie = () => {\n    removeCookie(LOGIN_KEY_NAME);\n}\nexport const setLoginKeyCookie =  (token:string) => {\n    setCookie(LOGIN_KEY_NAME, token);\n}\nexport const loginKeyCookieExist = () => {\n    const val:string = getLoginKeyCookie();\n    return val != undefined && val != null && val.trim() != \"\";\n}\nexport const getLoginKeyCookie = () => {\n    return getCookie(LOGIN_KEY_NAME);\n}\n","\r\nimport AuthorityType from '../constants/AuthorityType';\r\nimport BaseModel from './BaseModel';\r\nexport default class User extends BaseModel {\r\n    username: string;\r\n    displayName: string;\r\n    fullName: string;\r\n    phoneNumber: string;\r\n    email: string;\r\n    editPassword: string;\r\n    authorities: Authority[];\r\n\r\n    hasAuthorityType = (type:AuthorityType | AuthorityType[]) => {\r\n        if (this.authorities)\r\n        {\r\n            for (let i = 0; i < this.authorities.length; i++) {\r\n                const userAuthType = this.authorities[i];\r\n                if (typeof type === 'string') {\r\n                    if (userAuthType.name == type) {\r\n                        return true;\r\n                    }\r\n                } else {\r\n                    for (let t = 0; t < type.length; t++) {\r\n                        const item = type[t];\r\n                        if (item == userAuthType.name) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    birthDate: string;\r\n    birthPlace: string;\r\n    gender: 'MALE' | 'FEMALE' = 'MALE';\r\n\r\n}\r\n\r\nclass Authority {\r\n    name: AuthorityType;\r\n}","import { injectable } from \"inversify\";\nimport ToastComponent from './../interfaces/ToastComponent';\nimport ToastMode from './../constants/ToastMode';\n\n@injectable()\nexport default class ToastService {\n    private component: ToastComponent | undefined;\n    setComponent = (c: ToastComponent) => {\n        this.component = c;\n    }\n    showInfo(message:string, duration = 5000) {\n        this.show(message, 'info', duration);\n    }\n    showPrimary(message:string, duration = 5000) {\n        this.show(message, 'primary', duration);\n    }\n    showWarning(message:string, duration = 5000) {\n        this.show(message, 'warning', duration);\n    }\n    showDanger(message:string, duration = 5000) {\n        this.show(message, 'danger', duration);\n    }\n    showSuccess(message:string, duration = 5000) {\n        this.show(message, 'success', duration);\n    }\n    show = (message:string, mode:ToastMode, duration = 5000) => {\n        this.component?.show(message, mode, duration);\n    }\n}","import axios, { AxiosError, AxiosResponse } from \"axios\";\nimport { inject, injectable } from \"inversify\";\nimport { commonAuthorizedHeader, setLoginKeyCookie } from \"../utils/restApiUtil\";\nimport LoadingService from './../services/LoadingService';\n\nconst SUCCESS_CODE = \"00\";\n\n@injectable()\nexport default class RestClient\n{\n    @inject(LoadingService)\n    private loading: LoadingService;\n\n    postAuthorized = <T>(url:string, body:any, contentType='application/json') : Promise<T> => {\n        return this.postCommon(url, body, commonAuthorizedHeader(contentType), true);\n    }\n    deleteAuthorized = <T>(url:string, contentType='application/json') : Promise<T> => {\n        return this.deleteCommon(url, commonAuthorizedHeader(contentType), true);\n    }\n    putAuthorized = <T>(url:string, body:any, contentType='application/json') : Promise<T> => {\n        return this.putCommon(url, body, commonAuthorizedHeader(contentType), true);\n    }\n    patchAuthorized = <T>(url:string, body:any, contentType='application/json') : Promise<T> => {\n        return this.patchCommon(url, body, commonAuthorizedHeader(contentType), true);\n    }\n    \n    startLoading = () => this.loading.startLoading();\n    stopLoading = () => this.loading.stopLoading();\n\n    postCommon = <T>(url:string, body:any, headers:any, expectRefreshToken = false) : Promise<T> => {\n        return new Promise<T>((resolve, reject) => {\n            this.startLoading();\n           \n            axios.post(url, body, {\n                headers: { ...headers }\n            }).then((response: AxiosResponse) => {\n                if (!response.data)\n                {\n                    reject(new Error(\"Invalid response data\"));\n                    return;\n                }\n                if (response.data.code != SUCCESS_CODE) {\n                    reject(response.data);\n                    return;\n                }\n                if (expectRefreshToken)\n                {\n                    this.updateLoginKeyCookie(response);\n                }\n                resolve(response.data.result);\n            }).catch((err:AxiosError) =>{\n                reject(err.response?.data ?? new Error(err.message))\n            }).finally(this.stopLoading)\n        });\n    }\n\n    updateLoginKeyCookie = (response:AxiosResponse) => {\n        if (response.headers[\"access-token\"] && response.headers[\"access-token\"] != \"\")\n        {\n            setLoginKeyCookie(response.headers['access-token']);\n        }\n    }\n    putCommon = <T>(url:string, body:any, headers:any, expectRefreshToken = false) : Promise<T> => {\n        return new Promise<T>((resolve, reject) => {\n            this.startLoading();\n            axios.put(url, body, {\n                headers: { ...headers }\n            }).then((response: AxiosResponse) => {\n                if (!response.data)\n                {\n                    reject(new Error(\"Invalid response data\"));\n                    return;\n                }\n                if (response.data.code != SUCCESS_CODE) {\n                    reject(response.data);\n                    return;\n                }\n                if (expectRefreshToken)\n                {\n                    this.updateLoginKeyCookie(response);\n                }\n                resolve(response.data.result);\n            }).catch((err:AxiosError) =>{\n                reject(err.response?.data ?? new Error(err.message))\n            }).finally(this.stopLoading);\n        });\n    }\n    patchCommon = <T>(url:string, body:any, headers:any, expectRefreshToken = false) : Promise<T> => {\n        return new Promise<T>((resolve, reject) => {\n            this.startLoading();\n            axios.patch(url, body, {\n                headers: { ...headers }\n            }).then((response: AxiosResponse) => {\n                if (!response.data)\n                {\n                    reject(new Error(\"Invalid response data\"));\n                    return;\n                }\n                if (response.data.code != SUCCESS_CODE) {\n                    reject(response.data);\n                    return;\n                }\n                if (expectRefreshToken)\n                {\n                    this.updateLoginKeyCookie(response);\n                }\n                resolve(response.data.result);\n            }).catch((err:AxiosError) =>{\n                reject(err.response?.data ?? new Error(err.message))\n            })\n            .finally(this.stopLoading);\n        });\n    }\n    private deleteCommon = <T>(url:string, headers:any, expectRefreshToken = false) : Promise<T> => {\n        return new Promise<T>((resolve, reject) => {\n            \n            this.startLoading();\n            axios.delete(url,{\n                headers: { ...headers }\n            }).then((response: AxiosResponse) => {\n                if (!response.data)\n                {\n                    reject(new Error(\"Invalid response data\"));\n                    return;\n                }\n                if (response.data.code != SUCCESS_CODE) {\n                    reject(response.data);\n                    return;\n                }\n                if (expectRefreshToken)\n                {\n                    this.updateLoginKeyCookie(response);\n                }\n                resolve(response.data.result);\n            }).catch((err:AxiosError) =>{\n                reject(err.response?.data ?? new Error(err.message))\n            })\n            .finally(this.stopLoading);\n        });\n    }\n\n    getAuthorized = <T>(url:string) : Promise<T> => {\n        return this.getCommon(url, commonAuthorizedHeader(), true);\n    }\n    getCommon = <T>(url:string, headers:any, expectRefreshToken = false) : Promise<T> => {\n        return new Promise<T>((resolve, reject)=>{\n            this.startLoading();\n            axios.get(url, { headers: {\n                ...headers\n            } })\n                .then((response:AxiosResponse)=>{\n                    if (!response.data) {\n                        reject(new Error(\"Invalid response data\"));\n                        return;\n                    }\n                    if (response.data.code != SUCCESS_CODE) {\n                        reject(response.data);\n                        return;\n                    }\n                    if (expectRefreshToken)\n                    {\n                        this.updateLoginKeyCookie(response);\n                    }\n                    resolve(response.data.result);\n                })\n                .catch((err:AxiosError)=>{\n                    reject(err.response?.data ?? new Error(err.message))\n                })\n                .finally(this.stopLoading);\n        })\n    }\n}","import { inject, injectable } from \"inversify\";\nimport ModelNames from \"../constants/ModelNames\";\nimport BaseModel from \"../models/BaseModel\";\nimport MasterDataResult from \"../models/MasterDataResult\";\nimport RestClient from './../apiClients/RestClient';\nimport Settings from './../settings';\n\n\nconst API_URL = Settings.App.hosts.api +\"/api/admin/management/\";\n\n@injectable()\nexport default class MasterDataService\n{\n    @inject(RestClient)\n    private rest:RestClient;\n\n    list = <T extends BaseModel>(\n        name: ModelNames, \n        page:number, \n        perPage:number,\n        order:string|undefined = 'id',\n        orderDesc?:boolean,\n        filter?:string\n    ): Promise<MasterDataResult<T>> => {\n        let orderString = '';\n        if (order)\n        {\n            orderString = '&order='+order;\n            if (orderDesc == true)\n            {\n                orderString += '&orderDesc=true'\n            }\n        }\n        const url = `${API_URL}${name}?page=${page}&limit=${perPage}` + orderString + ( filter? `&filter=${filter}` : '' );\n        return this.rest.getAuthorized(url);\n    }\n    get = <T extends BaseModel>(name: ModelNames, id:number): Promise<T> => {\n        \n        const url = `${API_URL}${name}/${id}`;\n        return this.rest.getAuthorized(url);\n    }\n    post = <T extends BaseModel>(name: ModelNames, model:T): Promise<T> => {\n\n        const url = `${API_URL}${name}`;\n        return this.rest.postAuthorized(url, model);\n    }\n    put = <T extends BaseModel>(name: ModelNames, id:number, model:T): Promise<T> => {\n\n        const url = `${API_URL}${name}/${id}`;\n        return this.rest.putAuthorized(url, model);\n    }\n    patchAction = <T extends BaseModel>(name: ModelNames, id:number, action:string): Promise<T> => {\n\n        const url = `${API_URL}${name}/${id}?action=${action}`;\n        return this.rest.patchAuthorized(url, {});\n    }\n    delete = <T extends BaseModel>(name: ModelNames, id:number): Promise<T> => {\n\n        const url = `${API_URL}${name}/${id}`;\n        return this.rest.deleteAuthorized(url);\n    }\n}","import React, { ChangeEvent, FormEvent, ReactNode } from \"react\";\r\nimport ControlledComponent from \"../../pages/ControlledComponent\";\r\n\r\nclass State \r\n{\r\n    content:string = \"\";\r\n}\r\ninterface Props \r\n{\r\n    message:string,\r\n    defaultValue?:string,\r\n    onSubmit:(val:string)=>any\r\n}\r\nexport default class DialogPrompt extends ControlledComponent<Props, State>\r\n{\r\n    state: State = new State();\r\n    inputRef: React.RefObject<HTMLInputElement> = React.createRef();\r\n\r\n    constructor(props:Props)\r\n    {\r\n        super(props);\r\n        if (props.defaultValue)\r\n        {\r\n            this.state.content = props.defaultValue;\r\n        }\r\n    }\r\n\r\n    onSubmit = (e:FormEvent) => {\r\n        e.preventDefault();\r\n        this.props.onSubmit(this.state.content);\r\n    }\r\n    componentDidMount()\r\n    {\r\n        if (this.inputRef.current)\r\n        {\r\n            this.inputRef.current.focus();\r\n        }\r\n    }\r\n    render(): ReactNode {\r\n        \r\n        return (\r\n            <div>\r\n                <h5>{this.props.message}</h5>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <input \r\n                        ref={this.inputRef}\r\n                        name=\"content\"\r\n                        value={this.state.content}\r\n                        onChange={this.handleInputChange}\r\n                        className=\"form-control mb-3\" required />\r\n                    <input \r\n                        type=\"submit\" \r\n                        className=\"btn btn-primary\" \r\n                        value={\"Ok\"} />\r\n                    \r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}","import \"reflect-metadata\"\r\nimport { injectable } from \"inversify\";\r\nimport React, { Component, createElement,   ReactElement } from \"react\"; \r\nimport DialogPrompt from \"../components/containers/DialogPrompt\";\r\nimport { DialogType } from \"../constants/DialogType\";\r\nimport DialogProps from \"../models/DialogProps\";\r\nimport { DialogContainer } from '../App';\r\nimport { invokeLater } from \"../utils/eventUtil\";\r\n\r\n// ms\r\nconst INVOCATION_WAIT_DELAY = 500;\r\n\r\n@injectable()\r\nexport default class DialogService\r\n{\r\n    private container:DialogContainer;\r\n    public setContainer = (container:DialogContainer) => {\r\n        this.container = container;\r\n    }\r\n    public showInfo = (title:string, message:string) => {\r\n        if (this.container.isShown)\r\n        {\r\n            invokeLater(()=>{\r\n                this.showInfo(title, message)\r\n            }, INVOCATION_WAIT_DELAY);\r\n            return;\r\n        }\r\n        this.container.show(\r\n            DialogType.INFO,\r\n            title,\r\n            message,\r\n            true,\r\n            console.info\r\n        );\r\n    }\r\n    public showWarning = (title:string, message:string) => {\r\n        if (this.container.isShown)\r\n        {\r\n            invokeLater(()=>{\r\n                this.showWarning(title, message)\r\n            }, INVOCATION_WAIT_DELAY);\r\n            return;\r\n        }\r\n        this.container.show(\r\n            DialogType.WARNING,\r\n            title,\r\n            message,\r\n            true,\r\n            console.info\r\n        );\r\n    }\r\n    public showError = (title:string, message:string|Error) => {\r\n        if (this.container.isShown)\r\n        {\r\n            invokeLater(()=>{\r\n                this.showError(title, message)\r\n            }, INVOCATION_WAIT_DELAY);\r\n            return;\r\n        }\r\n        let messageContent;\r\n        if (message instanceof Error) {\r\n            messageContent = message.message;\r\n        } else {\r\n            if (typeof message === 'string' && message.trim().toLowerCase().startsWith(\"<!doctype html\")) {\r\n                messageContent = (\r\n                    <div dangerouslySetInnerHTML={{\r\n                        __html: message\r\n                    }}>\r\n\r\n                    </div>\r\n                )\r\n            } if (typeof message === 'object') {\r\n                messageContent = message['result'];\r\n            } else {\r\n                messageContent = !message || message.trim() == \"\" ? \"Unexpected error\" : message.trim();\r\n            }\r\n        }\r\n        this.container.show(\r\n            DialogType.ERROR,\r\n            title,\r\n            messageContent,\r\n            true,\r\n            ()=>{},\r\n            ()=>{},\r\n            \"Ok\"\r\n        );\r\n        \r\n    }\r\n\r\n    public showConfirmDanger = (title:string, message:string) => {\r\n        return this.showConfirm(title, message, DialogType.ERROR);\r\n    }\r\n    public showConfirmWarning = (title:string, message:string) => {\r\n        return this.showConfirm(title, message, DialogType.WARNING);\r\n    }\r\n\r\n    public showConfirm = (title:string, message:string, type:DialogType = DialogType.INFO) => {\r\n        \r\n        return new Promise<boolean>((resolve, reject)=>{\r\n            if (this.container.isShown)\r\n            {\r\n                invokeLater(()=>{ \r\n                    this.container.show(\r\n                        type,\r\n                        title,\r\n                        message,\r\n                        false,\r\n                        (e:any) => {\r\n                            resolve(true);\r\n                        },\r\n                        (e:any) => {\r\n                            resolve(false);\r\n                        }\r\n                    );\r\n                }, INVOCATION_WAIT_DELAY);\r\n                return;\r\n            }\r\n            this.container.show(\r\n                type,\r\n                title,\r\n                message,\r\n                false,\r\n                (e:any) => {\r\n                    resolve(true);\r\n                },\r\n                (e:any) => {\r\n                    resolve(false);\r\n                }\r\n            );\r\n        });\r\n    }\r\n   \r\n    public showPrompt = ( title:string, message:string, defaultValue?:string ) => {\r\n        \r\n        return new Promise<string|undefined>((resolve,reject)=>{\r\n            this.doShowPrompt(title, message, resolve, defaultValue);\r\n        });\r\n    }\r\n\r\n    private doShowPrompt = ( title:string, message:string, resolve:(e:any)=>any, defaultValue?:string ) =>\r\n    {\r\n        if (this.container.isShown)\r\n        {\r\n            invokeLater(()=>{\r\n                this.doShowPrompt(title, message,  resolve, defaultValue);\r\n            }, INVOCATION_WAIT_DELAY);\r\n            return;\r\n        }\r\n        const onSubmit = (val:string)=>{\r\n            this.dismissAlert();\r\n            resolve(val);\r\n        };\r\n        this.container.showNoButtons( \r\n            title,\r\n            <DialogPrompt\r\n                message={message}\r\n                onSubmit={onSubmit}\r\n                defaultValue={defaultValue}/>,\r\n            (e:any) => { resolve(undefined) }, \r\n        );\r\n    }\r\n\r\n    public dismissAlert = () => {\r\n        this.container.dismissAlert();\r\n    }\r\n\r\n    public showContent = ( title:string, content: ReactElement<any, typeof Component> ) => {\r\n        return new Promise<boolean>((resolve, reject) => {\r\n            let closeObserver = {\r\n                close : () => {\r\n\r\n                }\r\n            };\r\n            let el = createElement(content.type, {...content.props, closeObserver});\r\n            this.container.showNoButtons(  title, el, (e:any) => { resolve(false) }, closeObserver  );\r\n        });\r\n    }\r\n} \r\n\r\ninterface DialogPromptProps \r\n{\r\n    message:string,\r\n    onChange:(val:string)=>any\r\n}","import { injectable } from \"inversify\";\nimport LoadingComponent from './../interfaces/LoadingComponent';\n\n@injectable()\nexport default class LoadingService {\n    startLoading = () => {\n        this.component?.startLoading();\n    }\n    stopLoading = () => {\n        this.component?.stopLoading();\n    }\n    private component: LoadingComponent | undefined;\n\n    setComponent = (c: LoadingComponent) => {\n        this.component = c;\n    }\n}","import { injectable } from \"inversify\";\n\n@injectable()\nexport default class EventService\n{\n    // private _onProductSearchKeyUpdate:Map<string, (key:string) => any> = new Map();\n\n    // triggerProductSearchUpdate = (key:string) => {\n    //     this._onProductSearchKeyUpdate.forEach(action => action(key));\n    // }\n\n    // addOnProductSearchUpdate = (key:string, action:(key:string)=>any) => {\n    //     this._onProductSearchKeyUpdate.set(key, action);\n    // }\n    // removeOnProductSearchUpdate = (key:string) => {\n    //     this._onProductSearchKeyUpdate.delete(key);\n    // }\n}","import { Container } from 'inversify'\r\nimport 'reflect-metadata'\r\nimport DialogService from './services/DialogService';\r\nimport RoutingService from './services/RoutingService';\r\nimport AuthService from './services/AuthService';\r\nimport MasterDataService from './services/MasterDataService';\r\nimport RestClient from './apiClients/RestClient';\r\nimport EventService from './services/EventService';\r\nimport LoadingService from './services/LoadingService';\r\nimport ToastService from './services/ToastService';\r\n\r\n\r\nlet container:Container = new Container();\r\n\r\ncontainer.bind(EventService).toSelf().inSingletonScope();\r\ncontainer.bind(RestClient).toSelf().inSingletonScope();\r\ncontainer.bind(AuthService).toSelf().inSingletonScope();\r\ncontainer.bind(MasterDataService).toSelf().inSingletonScope();\r\ncontainer.bind(RoutingService).toSelf().inSingletonScope();\r\n\r\n// dialogs\r\ncontainer.bind(DialogService).toSelf().inSingletonScope();\r\ncontainer.bind(LoadingService).toSelf().inSingletonScope();\r\ncontainer.bind(ToastService).toSelf().inSingletonScope();\r\n\r\nexport {container}\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","\r\ninterface Props \r\n{\r\n    show?:boolean;\r\n    iconClass?:string;\r\n    children?:any;\r\n    className?:string;\r\n    onClick?:(e:any)=>any;\r\n    disabled?:boolean;\r\n}\r\nconst ActionButton = (props:Props) => {\r\n    if (props.show != undefined && props.show === false)\r\n    {\r\n        return null;\r\n    }\r\n    const disabledProps:any = props.disabled === true ? {disabled:'disabled'} : {};\r\n    return (\r\n        <button className={props.className} onClick={props.onClick} {...disabledProps}>\r\n            {props.iconClass?\r\n            <i className={props.iconClass+ (props.children? \" mr-3\" : \"\")}/> : null }\r\n            {props.children}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default ActionButton;","\r\nimport { resolve } from \"inversify-react\";\r\nimport React, { Component } from \"react\";\r\nimport ActionButton from \"../components/buttons/ActionButton\";\r\nimport RoutingService from './../services/RoutingService';\r\n\r\nclass Props\r\n{\r\n    children:any;\r\n    title?:string;\r\n    attributes?:any;\r\n    titleAlign?:undefined |'center' | 'left' | 'right';\r\n    back?:string;\r\n}\r\nexport class ViewTemplate extends Component<Props, any>\r\n{\r\n    @resolve(RoutingService)\r\n    private routing:RoutingService;\r\n    goBack = () => {\r\n        if (this.props.back)\r\n        {\r\n            this.routing.navigate(this.props.back);\r\n        }\r\n    }\r\n    render(): React.ReactNode {\r\n        \r\n        return (\r\n            <div  {...this.props.attributes} className=\"container-fluid baseView\" >\r\n                {this.props.title && this.props.title.trim() != \"\" ? \r\n                    <h2 style={{textAlign: this.props.titleAlign}}>{this.props.title}</h2> : null}\r\n                {this.props.back?\r\n                <ActionButton onClick={this.goBack} className=\"btn btn-dark btn-sm my-2\" iconClass=\"fas fa-arrow-left\">\r\n                    Back\r\n                </ActionButton> : null}\r\n                {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\"\r\nimport { NavigateFunction, Params, useNavigate, useParams } from \"react-router-dom\"\r\nimport { container } from \"../inversify.config\";\r\nimport RoutingService from './../services/RoutingService';\r\n\r\nexport function commonWrapper(Component: any) {\r\n    \r\n    return (props: any) => {\r\n        const routeParams: Params<string>   = useParams();\r\n        const doNavigate: NavigateFunction  = useNavigate();\r\n        const navigate: (url:string)=> void = (url:string) : void => {\r\n            \r\n            let routingService:RoutingService = container.get(RoutingService);\r\n            doNavigate(url);\r\n            routingService.updateRoute(url);\r\n        };\r\n        return <Component navigate={navigate} routeParams={routeParams} {...props} />\r\n    }\r\n}","import React from \"react\";\r\nimport { resolve } from \"inversify-react\";\r\nimport BaseProps from \"../models/BaseProps\";\r\nimport BaseState from \"../models/BaseState\"; \r\nimport ControlledComponent from \"./ControlledComponent\";\r\nimport Settings from './../settings';\r\nimport DialogService from './../services/DialogService';\r\nimport { ViewTemplate } from \"../layout/ViewTemplate\";\r\nimport AuthService from './../services/AuthService';\r\nimport ToastService from './../services/ToastService';\r\n\r\nexport abstract class BasePage<P extends BaseProps,S extends BaseState> extends ControlledComponent<P, S>\r\n{\r\n    title?:string;\r\n    @resolve(AuthService)\r\n    protected authService:AuthService;\r\n    @resolve(DialogService)\r\n    protected dialog:DialogService;\r\n    @resolve(ToastService)\r\n    protected toast:ToastService;\r\n\r\n    constructor(props:P, private authorized:boolean = false, title?:string)\r\n    {\r\n        super(props);\r\n        this.title = title;\r\n        this.initialize();\r\n    }\r\n    initialize = () => {\r\n        document.title = this.title ? this.title : Settings.App.uiSetting.defaultTitle;\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        this.forceUpdate();\r\n    }\r\n\r\n    componentDidUpdate()\r\n    {\r\n        if (this.authorized && !this.authService.loggedIn )\r\n        {   \r\n            this.navigate(\"/\");\r\n            return;\r\n        }\r\n    }\r\n\r\n    protected navigate = (url:string) =>\r\n    {\r\n        if (this.props.navigate)\r\n        {\r\n            this.props.navigate(url);\r\n            return;\r\n        }\r\n        console.error(\"props.navigate does not exist\");\r\n    }\r\n\r\n    protected gotoHomePage = () => {\r\n        this.navigate(\"/\");\r\n    }\r\n\r\n    \r\n    protected invalidSession = () => \r\n    {\r\n        return (\r\n            <ViewTemplate title=\"Invalid Session\">\r\n                <p>You must log in to access this page</p>\r\n            </ViewTemplate>\r\n        )\r\n    }\r\n    \r\n}\r\n \r\n","import { Link } from 'react-router-dom';\n\ninterface Props \n{\n    show?:boolean;\n    iconClass?:string;\n    children?:any;\n    className?:string;\n    onClick?:(e:any)=>any;\n    to?:string;\n}\nconst AnchorButton = (props:Props) => {\n    if (props.show != undefined && props.show === false)\n    {\n        return null;\n    }\n    if (!props.to)\n    {\n        return (\n            <a className={props.className} onClick={props.onClick}>\n                {props.iconClass?\n                <i className={props.iconClass+ (props.children? \" mr-3\" : \"\")}/> : null }\n                {props.children}\n            </a>\n        )\n    }\n    return (\n        <Link to={props.to} className={props.className} onClick={props.onClick}>\n            {props.iconClass?\n            <i className={props.iconClass+ (props.children? \" mr-3\" : \"\")}/> : null }\n            {props.children}\n        </Link>\n    )\n\n}\n\nexport default AnchorButton;","export const randomString = (length:number)=> {\r\n    var result           = '';\r\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    var charactersLength = characters.length;\r\n    for ( var i = 0; i < length; i++ ) {\r\n      result += characters.charAt(Math.floor(Math.random() *  charactersLength));\r\n   }\r\n   return result;\r\n}\r\n\r\nexport const getInputReadableDate = (date:Date) :string => {\r\n   const year = date.getFullYear();\r\n\r\n   const arr = [year, twoDigits(date.getMonth()+1), twoDigits(date.getDate())];\r\n   return arr.join(\"-\");\r\n}\r\nexport const twoDigits = (value:number) :string => {\r\n   if (value >= 10) {\r\n       return   value.toString();\r\n   }\r\n   return \"0\"+value;\r\n}\r\n","import { randomString } from \"./stringUtil\";\r\nimport React from 'react'\r\n\r\nexport const readFileContentUtf8 = (file:File): Promise<string> => {\r\n\r\n    return new Promise((resolve, reject)=>{\r\n        const reader = new FileReader();\r\n        reader.readAsText(file, \"UTF-8\");\r\n        reader.onload = (evt) => {\r\n            let el = evt.target;\r\n            if (!el)\r\n            {\r\n                reject(new Error(\"Invalid element\"));\r\n                return;\r\n            }\r\n            if (typeof el.result == \"string\")\r\n            {\r\n                resolve(el.result);\r\n            }\r\n            else\r\n            {\r\n                reject(new Error(\"Invalid result type\"));\r\n            }\r\n        }\r\n        reader.onerror = reject;\r\n    })\r\n}\r\n\r\nexport const downloadFile = (data:any, filename:string, type:\"text/plain\" | \"application/json\") : void => {\r\n    var file = new Blob([data], {type: type});\r\n    if ((window.navigator as any).msSaveOrOpenBlob) // IE10+\r\n        (window.navigator as any).msSaveOrOpenBlob(file, filename);\r\n    else { // Others\r\n        var a = document.createElement(\"a\"),\r\n                url = URL.createObjectURL(file);\r\n        a.href = url;\r\n        a.download = filename;\r\n        document.body.appendChild(a);\r\n        a.click();\r\n        setTimeout(function() {\r\n            document.body.removeChild(a);\r\n            window.URL.revokeObjectURL(url);  \r\n        }, 0); \r\n    }\r\n}\r\n\r\nexport const CommonTable = (props:{className:string, content:any[][]}) => {\r\n    return (\r\n        <table className={props.className}>\r\n            <tbody>\r\n                {props.content.map(row=>{\r\n                    const rowKey = \"row-\"+randomString(5);\r\n                    return <tr key={rowKey}>\r\n                        {row.map((col, i)=>{\r\n                            return <td key={rowKey+ \"-\" + i}>{col}</td>\r\n                        })}\r\n                    </tr>\r\n                })}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nexport const DataTableHeaders = (\r\n    items:DataTableHeaderValue[], \r\n    activeOrder:string, \r\n    orderDesc:boolean, \r\n    onClick:(name:string, desc:boolean)=>any\r\n) => {\r\n\r\n    return items.map(item => {\r\n        let className = activeOrder == item.name ? \"bg-light border border-dark\":\"\";\r\n        let tdOnClick = (e:any) => {\r\n            if (item.orderable == false || !item.name) {\r\n                return;\r\n            }\r\n            onClick(item.name, !orderDesc);\r\n        }\r\n        if (item.orderable)\r\n        {\r\n            className += \" clickable \";\r\n        }\r\n        return (\r\n            <th onClick={tdOnClick} key={\"th-item-\"+randomString(3)} className={className}>\r\n                {item.label} {item.orderable == false ? null : \r\n                    activeOrder == item.name? \r\n                    orderDesc? \r\n                    <i className=\"fas fa-long-arrow-alt-down ml-2\" /> :\r\n                    <i className=\"fas fa-long-arrow-alt-up ml-2\" /> : \r\n                    <i className=\"fas fa-sort ml-2\" />}\r\n            </th>\r\n        )\r\n    })\r\n}\r\n\r\nexport class DataTableHeaderValue {\r\n    label:string | null;\r\n    constructor(public name:string | null, label?:string | null , public orderable = true){\r\n        if (label == null) {\r\n            this.label = name;\r\n        } else {\r\n            \r\n            this.label = label;\r\n        }\r\n\r\n        this.adjustLabel();\r\n    }\r\n\r\n    adjustLabel = () => {\r\n        if (!this.label) return;\r\n\r\n        if (this.label.includes(\".\")) {\r\n            const splitByDot = this.label.split(\".\");\r\n            this.label = splitByDot[splitByDot.length-1];\r\n        }\r\n\r\n        this.label = capitalize(this.label);\r\n    }\r\n}\r\n\r\nconst capitalize = (val:string) => {\r\n    return val[0].toUpperCase() + val.substring(1, val.length);\r\n}","\nimport React, { Component } from 'react';\nimport { randomString } from './../../utils/stringUtil';\ninterface IProps {\n    limit: number,\n    totalData: number,\n    activePage: number,\n    onClick: any\n}\nexport default class PaginationButtons extends Component<IProps, any> {\n    constructor(props: IProps) {\n        super(props);\n    }\n    render() {\n        const buttonIndexes = generateButtonValues(this.props.limit, this.props.totalData, this.props.activePage);\n        if (buttonIndexes.length == 0) { return null }\n        const lastIndex = buttonIndexes[buttonIndexes.length - 1];\n        const nextPage = this.props.activePage + 1 >= lastIndex  ? 0 : this.props.activePage + 1;\n        const previusPage = this.props.activePage - 1 < 0? lastIndex-1 : this.props.activePage - 1;\n        return (<div>\n            <nav aria-label=\"Page navigation example\">\n                <ul className=\"pagination\">\n                    <li className=\"page-item\"><a className=\"page-link clickable\" onClick={(e) => this.props.onClick(previusPage)}>Previous</a></li>\n                    {buttonIndexes.map((page, i) => {\n                        return (\n                        <li key={\"NAV-\"+randomString(10)} className={\"page-item \"+(page-1 == this.props.activePage?\"active\":\"\")}>\n                            <a className=\"page-link clickable\" onClick={(e) => this.props.onClick(page - 1)} >{page}</a>\n                        </li>\n                        )\n                    })}\n                    <li className=\"page-item\"><a className=\"page-link clickable\" onClick={(e) => this.props.onClick(nextPage)}>Next</a></li>\n                </ul>\n            </nav>\n        </div>)\n    }\n}\n\nconst generateButtonValues = (limit: number, totalData: number, currentPage: number) => {\n\n    /* DISPLAYED BUTTONS */\n    const displayed_buttons: number[] = [];\n    const buttonCount = Math.ceil(totalData / limit);\n\n    // console.debug(\"current page:\", currentPage);\n    const min = (currentPage) - 1;\n    const max = (currentPage) + 3;\n    // const min = (currentPage) - 2;\n    // const max = (currentPage) + 2;\n\n    // console.debug(\"min\", min, \"current page:\", currentPage, \"max\", max);\n    if (buttonCount > 1) {\n        displayed_buttons.push(1);\n    }\n    for (let i = min; i <= max; i++) {\n        if (i > 1 && i <= buttonCount) {\n            (displayed_buttons.push(i));\n        }\n    }\n    if (max < buttonCount) {\n        displayed_buttons.push(buttonCount);\n    }\n    return displayed_buttons;\n}\n","import { resolve } from \"inversify-react\";\r\nimport BaseModel from \"../../models/BaseModel\";\r\nimport { BasePage } from \"../BasePage\";\r\nimport BaseProps from './../../models/BaseProps';\r\nimport MasterDataService from './../../services/MasterDataService';\r\nimport BaseMasterDataState from './../../models/BaseMasterDataState';\r\nimport { FormEvent, Fragment } from \"react\";\r\nimport AnchorButton from \"../../components/buttons/AnchorButton\";\r\nimport { DataTableHeaders, DataTableHeaderValue } from \"../../utils/componentUtil\";\r\nimport PaginationButtons from \"../../components/buttons/PaginationButtons\";\r\nimport ActionButton from \"../../components/buttons/ActionButton\";\r\nimport { randomString } from \"../../utils/stringUtil\";\r\nimport { randomUUID } from \"crypto\";\r\nimport ModelNames from \"../../constants/ModelNames\";\r\n\r\n\r\nabstract class BaseMasterDataPage<M extends BaseModel, P extends BaseProps, S extends BaseMasterDataState<M>> extends BasePage<P, S>\r\n{\r\n    @resolve(MasterDataService)\r\n    protected service:MasterDataService;\r\n\r\n    constructor(props:P, private  name: ModelNames, title:string)\r\n    {\r\n        super(props, true, title);\r\n    }\r\n    abstract get defaultItem() : M;\r\n\r\n    get item():M | undefined { return this.state.item as M | undefined  }\r\n    get activeOrder() { return this.state.result.order ?? \"id\" }\r\n    get isOrderDesc() { return this.state.result.orderDesc == true }\r\n    get startingNumber() { return 1 +(this.state.result.page * this.state.result.limit); }\r\n\r\n    abstract getDataTableHeaderVals() : DataTableHeaderValue[];\r\n\r\n    load = (page:number = 0, perPage:number = 10, order?:string, orderDesc?:boolean) => {\r\n        this.service.list<M>(this.name, page, perPage, order, orderDesc)\r\n            .then(response=>{\r\n                const assignedItems:M[] = [];\r\n                response.items.forEach(item => {\r\n                    assignedItems.push(Object.assign(this.defaultItem, item));\r\n                })\r\n                response.items = assignedItems;\r\n                this.setState({result: response})\r\n            })\r\n            .catch(console.error);\r\n    }\r\n    componentDidMount(): void {\r\n        this.load();\r\n    }\r\n    onFormSubmit = (e:FormEvent) => {\r\n        e.preventDefault();\r\n        const item = this.state.item as M | undefined;\r\n        if (!item)\r\n        {\r\n            this.dialog.showError(\"Submission Error\", \"Undefined payload\");\r\n            return;\r\n        }\r\n        if (item.id ==undefined || item.id <= 0)\r\n        {\r\n            this.insert(item);\r\n        }\r\n        else\r\n        {\r\n            this.update(item);\r\n        }\r\n    }\r\n    showForm = () => this.setState({ showForm: true });\r\n    hideForm = () => this.setState({ item: this.defaultItem, showForm: false });\r\n    edit = (model:M) => {\r\n        this.setState({item: model}, this.showForm);\r\n    }\r\n    delete = (model:M) => {\r\n        this.dialog.showConfirmDanger(\"Delete Item\", \"Are you sure to delete this item?\")\r\n            .then(ok=>{\r\n                if (ok) {\r\n                    this.service.delete(this.name, model.id)\r\n                        .then(resp => {\r\n                            this.dialog.showInfo(\"Delete Success\", \"Item has been deleted\");\r\n                            this.loadCurrentPage();\r\n                        })\r\n                        .catch(err=>{\r\n                            this.dialog.showError(\"Delete Failed\", err);\r\n                        })\r\n\r\n                }\r\n            })\r\n    }\r\n    insert = (model:M) => {\r\n        this.dialog.showConfirm(\"Insert Item\", \"Are you sure to add this item? \")\r\n            .then(ok=>{\r\n                if (ok) {\r\n                    this.service.post(this.name, model)\r\n                        .then(resp => {\r\n                            this.dialog.showInfo(\"Insert Success\", \"New item has been inserted\");\r\n                            this.loadCurrentPage();\r\n                            this.hideForm();\r\n                        })\r\n                        .catch(err=>{\r\n                            this.dialog.showError(\"Insert Failed\", err);\r\n                        })\r\n\r\n                }\r\n            })\r\n    }\r\n    showInsertForm = () => {\r\n        this.setState({ showForm: true, item: this.defaultItem });\r\n    }\r\n    resetFormAndClose = () => {\r\n        this.setState({ showForm: false, item: this.defaultItem });\r\n    }\r\n    formEditSubmit = (e:FormEvent) => {\r\n        e.preventDefault();\r\n        if (this.state.item && this.state.item.id > 0)\r\n        {\r\n            this.update(this.state.item as M);\r\n        } else if (this.state.item && (!this.state.item.id || this.state.item.id <= 0))\r\n        {\r\n            this.insert(this.state.item as M);\r\n        }\r\n    }\r\n    update = (model:M) => {\r\n        this.dialog.showConfirm(\"Update Item\", \"Are you sure to update this item? \")\r\n            .then(ok=>{\r\n                if (ok) {\r\n                    this.service.put(this.name, model.id, model)\r\n                        .then(resp => {\r\n                            this.dialog.showInfo(\"Update Success\", \"Item has been updated\");\r\n                            this.loadCurrentPage();\r\n                            this.hideForm();\r\n                        })\r\n                        .catch(err=>{\r\n                            this.dialog.showError(\"Update Failed\", err);\r\n                        })\r\n\r\n                }\r\n            })\r\n    }\r\n    patchAction = (model:M, action:string) => {\r\n        this.dialog.showConfirmWarning(\"Execute Action\", \"Are you sure to execute action: \"+action+\"? \")\r\n            .then(ok=>{\r\n                if (ok) {\r\n                    this.service.patchAction(this.name, model.id, action)\r\n                        .then(resp => {\r\n                            this.dialog.showInfo(\"Action Completed\", \"Action: \"+action+\" has been executed\");\r\n                            this.loadCurrentPage();\r\n                            this.hideForm();\r\n                        })\r\n                        .catch(err=>{\r\n                            this.dialog.showError(\"Update Failed\", err);\r\n                        })\r\n\r\n                }\r\n            })\r\n    }\r\n    loadCurrentPage = () => {\r\n        this.load(this.state.result.page, this.state.result.limit);\r\n    }\r\n    setItemsOrder = (name:string, desc:boolean) => {\r\n        this.load(this.state.result.page, this.state.result.limit, name, desc);\r\n    }\r\n\r\n    protected getDataTableHeaderComponent = () => {\r\n        return DataTableHeaders(\r\n            this.getDataTableHeaderVals(), \r\n            this.activeOrder, \r\n            this.isOrderDesc, \r\n            this.setItemsOrder\r\n        );\r\n    }\r\n    \r\n    protected get paginationButton() {\r\n        return <PaginationButtons \r\n                    limit={this.state.result.limit} \r\n                    totalData={this.state.result.totalData} \r\n                    activePage={this.state.result.page} \r\n                    onClick={this.load} />\r\n    }\r\n    \r\n    protected actionButton = (item:M, showDelete:boolean = true) => {\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 px-1\">\r\n                    <AnchorButton \r\n                        onClick={()=>this.edit(item)}\r\n                        iconClass=\"fas fa-edit\"\r\n                        className=\"btn btn-text clickable\"/>\r\n                </div>\r\n                {showDelete?\r\n                <div className=\"col-md-6 px-1\">\r\n                    <AnchorButton \r\n                        onClick={()=>this.delete(item)}\r\n                        className=\"btn btn-text text-danger\"\r\n                        iconClass=\"fas fa-times\"/>\r\n                </div> : null }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    protected listToggler = <T extends BaseModel>(\r\n        items:T[],\r\n        model:M,\r\n        label:(item:T)=>string,\r\n        add:(model:M)=>any, \r\n        remove:(model:M, id:number)=>any) => {\r\n        return (\r\n            <>\r\n                {items.map((item:T) => {\r\n                    return (\r\n                        <div key={`list-toggler-item-${randomString(5)}`}>\r\n                            <ActionButton \r\n                                onClick={(e) => remove(model, item.id)} \r\n                                className=\"btn btn-text btn-sm text-danger mr-2\" \r\n                                iconClass=\"fas fa-minus-circle\" />\r\n                            {label(item)}\r\n                        </div>\r\n                    );\r\n                })}\r\n                <ActionButton \r\n                    onClick={(e) => add(model)}\r\n                    className=\"btn btn-sm btn-text\" \r\n                    iconClass=\"fas fa-plus-circle text-success\"/>\r\n            </>\r\n        );\r\n    }\r\n\r\n    protected get closeFormButton() {\r\n        return (\r\n            <ActionButton onClick={this.resetFormAndClose} iconClass=\"fas fa-times\" className=\"btn btn-secondary btn-sm mx-2\">\r\n                Close form\r\n            </ActionButton>\r\n        )\r\n    }\r\n    protected get showFormButton() {\r\n        return (\r\n            <ActionButton onClick={this.showInsertForm} iconClass=\"fas fa-plus\" className=\"btn btn-primary btn-sm mx-2\">\r\n                Insert new data\r\n            </ActionButton>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BaseMasterDataPage;","export default class BaseState\r\n{\r\n    error:Error|undefined;\r\n    message:string|undefined;\r\n    busy:boolean = false;\r\n}","\r\nimport BaseModel from './BaseModel';\r\nexport default class MasterDataResult<T extends BaseModel>\r\n{\r\n    totalData: number = 0;\r\n    page: number = 0;\r\n    limit: number = 10;\r\n    items: T[] = [];\r\n    order?: string = \"id\";\r\n    orderDesc?: boolean;\r\n}","import BaseModel from \"./BaseModel\";\nimport BaseState from \"./BaseState\";\nimport MasterDataResult from './MasterDataResult';\n\nexport default class BaseMasterDataState<T extends BaseModel> extends BaseState\n{\n    result:MasterDataResult<T> = new MasterDataResult<T>();\n    item:T | undefined;\n    showForm:boolean = false;\n}","import BaseModel from \"./BaseModel\";\r\nimport School from \"./School\";\r\nimport User from \"./User\";\r\n\r\nexport default class Employee extends BaseModel\r\n{\r\n    nisdm: string; \r\n    profileImage: string; \r\n    user: User = new User();\r\n \r\n    noKk: string; \r\n    noKtp: string; \r\n    addressKtp: string; \r\n    addressOther: string;\r\n \r\n    motherName: string; \r\n    fatherName: string;\r\n \r\n    npwp: string; \r\n    bankAccountNumber: string;\r\n \r\n\teducations: Education[] = [];\r\n\tschools: School[] = [];\r\n \r\n    photoScan: string; \r\n    kkScan: string; \r\n    npwpScan: string; \r\n    bankAccountScan: string;\r\n\r\n    signatureFile: string;\r\n\r\n    active: boolean;\r\n\r\n    removeEducation = (id:number) => { \r\n        for (let i = 0; i < this.educations.length; i++) {\r\n            const element = this.educations[i];\r\n            if (element.id == id)\r\n            {\r\n                this.educations.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    addSchool = (school:School) => {\r\n        for (let i = 0; i < this.schools.length; i++) {\r\n            const element = this.schools[i];\r\n            if (element.id == school.id)\r\n            {\r\n                console.warn(\"duplicate school id: \" + school.id);\r\n                return false;\r\n            }\r\n        }\r\n\r\n        this.schools.push(school);\r\n        return true;\r\n    }\r\n    removeSchool = (id:number) => { \r\n        for (let i = 0; i < this.schools.length; i++) {\r\n            const element = this.schools[i];\r\n            if (element.id == id)\r\n            {\r\n                this.schools.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport class Education  extends BaseModel\r\n{\r\n    type: string = \"S1\"; \r\n    name: string; \r\n    major: string;\r\n    title: string;\r\n    certificateScan: string;\r\n}","import { ChangeEvent, Component, FormEvent, ReactNode } from \"react\";\r\nimport { ViewTemplate } from \"../../layout/ViewTemplate\";\r\nimport { commonWrapper } from \"../../utils/commonWrapper\";\r\nimport BaseProps from '../../models/BaseProps';\r\nimport BaseMasterDataPage from \"./BaseMasterDataPage\";\r\nimport BaseMasterDataState from '../../models/BaseMasterDataState';\r\nimport ActionButton from \"../../components/buttons/ActionButton\";\r\nimport Employee, { Education } from \"../../models/Employee\";\r\nimport { DataTableHeaderValue } from \"../../utils/componentUtil\";\r\nimport ControlledComponent from \"../ControlledComponent\";\r\nimport School from \"../../models/School\";\r\nimport { getInputReadableDate } from \"../../utils/stringUtil\";\r\n\r\nclass State extends BaseMasterDataState<Employee>\r\n{\r\n\r\n}\r\nclass EmployeesPage extends BaseMasterDataPage<Employee, BaseProps, State>\r\n{\r\n    constructor(props: BaseProps) {\r\n        super(props, \"employees\", \"Employees Management\");\r\n        this.state = new State();\r\n    }\r\n    get defaultItem(): Employee { \r\n        const e = new Employee(); \r\n        return e;\r\n    }\r\n    \r\n    getDataTableHeaderVals = () => {\r\n        return [\r\n            new DataTableHeaderValue(\"nisdm\", \"NISDM\"),\r\n            new DataTableHeaderValue(\"user.fullName\", \"Full Name\"),\r\n            new DataTableHeaderValue(\"user.email\", \"Email\"),\r\n            new DataTableHeaderValue(\"user.birthDate\", \"BirthDate\"),\r\n            new DataTableHeaderValue(\"user.gender\", \"Gender\"),\r\n            new DataTableHeaderValue(null, \"School\", false),\r\n            new DataTableHeaderValue(null, \"Education\", false),\r\n        ]\r\n    }\r\n    removeEducation = (item:Employee, educationId:number) => {\r\n        this.dialog.showConfirmDanger(\"Remove Education\", \"Dou you want to remove education data?\")\r\n            .then(ok => {\r\n                if (ok) {\r\n                    item.removeEducation(educationId);\r\n                    this.update(item);\r\n                }\r\n            })\r\n        \r\n    }\r\n    addEducation = (item:Employee) => {\r\n        this.dialog.showContent(\"Add Education\", <AddEducationForm item={item} update={(e) => this.submitAddEducation(item, e) }/>);\r\n    }\r\n    submitAddEducation = (item:Employee, education:Education) => {\r\n        item.educations.push(education);\r\n        this.update(item);\r\n    }\r\n\r\n    removeSchool = (item:Employee, schoolId:number) => {\r\n        this.dialog.showConfirmDanger(\"Remove School\", \"Dou you want to remove school data?\")\r\n            .then(ok => {\r\n                if (ok) {\r\n                    item.removeSchool(schoolId);\r\n                    this.update(item);\r\n                }\r\n            })\r\n        \r\n    }\r\n    addSchool = (item:Employee) => {\r\n        this.service.list<School>('schools', 0, -1, undefined)\r\n            .then(response=>{\r\n                this.dialog.showContent(\"Add School\", \r\n                <AddSchoolForm \r\n                    schools={response.items} \r\n                    update={(e) => this.submitAddSchool(item, e) }/>);\r\n            })\r\n            .catch(console.error);\r\n        \r\n    }\r\n    submitAddSchool = (item:Employee, school:School) => {\r\n        if(item.addSchool(school)) {\r\n            this.update(item);\r\n        }  \r\n    }\r\n    render(): ReactNode {\r\n        if (this.state.showForm && this.state.item)\r\n        {\r\n            return (\r\n                <ViewTemplate title={this.title} back=\"/admin\">\r\n                    {this.closeFormButton}\r\n                    <FormEdit item={this.state.item} handleInputChange={this.handleInputChange} onSubmit={this.formEditSubmit} />\r\n                </ViewTemplate>\r\n            );\r\n        }\r\n        \r\n        const result = this.state.result;\r\n        const items = result?.items;\r\n        return (\r\n            <ViewTemplate title={this.title} back=\"/admin\">\r\n                {this.showFormButton}\r\n                {result == undefined || items == undefined ?\r\n                    <i>Loading...</i> :\r\n                    <div className=\"mt-5 pl-3 pr-3\" style={{overflow: 'auto'}}>\r\n                        {this.paginationButton}\r\n                        <table className=\"commonDataTable table table-striped\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>No</th>\r\n                                    {this.getDataTableHeaderComponent()}\r\n\r\n                                    <th>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {items.map((item, i) => {\r\n                                    return (\r\n                                        <tr key={\"user-\" + item.id}>\r\n                                            <td>{this.startingNumber + i}</td>\r\n                                            <td>{item.nisdm}</td>\r\n                                            <td>{item.user.fullName}</td>\r\n                                            <td>{item.user.email}</td>\r\n                                            <td>{new Date(item.user.birthDate).toLocaleDateString()}</td>\r\n                                            <td>{item.user.gender}</td>\r\n                                            <td>{this.listToggler(\r\n                                                    item.schools, \r\n                                                    item, \r\n                                                    (i) => `${i.name}`, \r\n                                                    this.addSchool, \r\n                                                    this.removeSchool)}\r\n                                            </td>\r\n                                            <td>\r\n                                                {this.listToggler(\r\n                                                    item.educations, \r\n                                                    item, \r\n                                                    (i) => `${i.type}: ${i.name}`, \r\n                                                    this.addEducation, \r\n                                                    this.removeEducation)}\r\n                                            </td>\r\n                                            \r\n                                            <td>\r\n                                                {this.actionButton(item)}\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                })}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>}\r\n            </ViewTemplate>\r\n        )\r\n    }\r\n}\r\n\r\nexport default commonWrapper(EmployeesPage)\r\n\r\n\r\nconst FormEdit = (props:{\r\n    item:Employee, \r\n    onSubmit:(e:FormEvent) => any, \r\n    handleInputChange:(e:ChangeEvent)=>any\r\n}) => {\r\n    const item = props.item;\r\n    const onChange = props.handleInputChange;\r\n    return (\r\n        <div className=\"mx-2 py-2\">\r\n            <form onSubmit={props.onSubmit}>\r\n                <p>NiSDM</p>\r\n                <input className=\"form-control\" id=\"item.nisdm\" name=\"item.nisdm\" value={item.nisdm} onChange={onChange} required/>\r\n                <p>Full Name</p>\r\n                <input className=\"form-control\" id=\"item.user.fullName\" name=\"item.user.fullName\" value={item.user.fullName}  onChange={onChange} required/>\r\n                <p>Email</p>\r\n                <input className=\"form-control\" id=\"item.user.email\" name=\"item.user.email\" type=\"email\" value={item.user.email}  onChange={onChange} required/>\r\n                <p>Gender</p>\r\n                <select className=\"form-control\" value={item.user.gender} id=\"item.user.gender\" name=\"item.user.gender\" onChange={onChange} required>\r\n                    <option  >MALE</option>\r\n                    <option  >FEMALE</option>\r\n                </select>\r\n                <p>Birth Date</p>\r\n                <input type=\"date\" className=\"form-control\" id=\"item.user.birthDate\" name=\"item.user.birthDate\" value={getInputReadableDate(new Date(item.user.birthDate))} onChange={onChange} required/>\r\n                <p>Birth Place</p>\r\n                <input className=\"form-control\" id=\"item.user.birthPlace\" name=\"item.user.birthPlace\" value={item.user.birthPlace} onChange={onChange} required/>\r\n                \r\n                <p>Phone Number</p>\r\n                <input className=\"form-control\" id=\"item.user.phoneNumber\" name=\"item.user.phoneNumber\" value={item.user.phoneNumber} onChange={onChange} required/>\r\n                \r\n                <p>No KK</p>\r\n                <input className=\"form-control\" id=\"item.noKk\" name=\"item.noKk\" value={item.noKk} onChange={onChange} required/>\r\n                <p>No KTP</p>\r\n                <input className=\"form-control\" id=\"item.noKtp\" name=\"item.noKtp\" value={item.noKtp} onChange={onChange} required/>\r\n                \r\n                <p>Alamat Sesuai KTP</p>\r\n                <input className=\"form-control\" id=\"item.addressKtp\" name=\"item.addressKtp\" value={item.addressKtp} onChange={onChange} required/>\r\n                <p>Alamat Domisili</p>\r\n                <input className=\"form-control\" id=\"item.addressOther\" name=\"item.addressOther\" value={item.addressOther}  onChange={onChange}/>\r\n            \r\n                <p>Nama Ibu</p>\r\n                <input className=\"form-control\" id=\"item.motherName\" name=\"item.motherName\" value={item.motherName}  onChange={onChange}/>\r\n                <p>Nama Ayah</p>\r\n                <input className=\"form-control\" id=\"item.fatherName\" name=\"item.fatherName\" value={item.fatherName} onChange={onChange}/>\r\n            \r\n                <p>NPWP</p>\r\n                <input className=\"form-control\" id=\"item.npwp\" name=\"item.npwp\" value={item.npwp} onChange={onChange}/>\r\n                <p>No Rekening BSI</p>\r\n                <input className=\"form-control\" id=\"item.bankAccountNumber\" name=\"item.bankAccountNumber\" value={item.bankAccountNumber} onChange={onChange}/>\r\n\r\n                <p></p>\r\n                <input className=\"btn btn-primary\" value=\"Save\" type=\"submit\" />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nclass AddEducationFormState {\r\n    item:Education = new Education()\r\n}\r\nclass AddEducationForm extends ControlledComponent<{item:Employee, update:(item:Education) => any}, AddEducationFormState>{\r\n    constructor(props:any)\r\n    {\r\n        super(props);\r\n        this.state = new AddEducationFormState();\r\n    }\r\n\r\n    onSubmit = (e:FormEvent) => {\r\n        e.preventDefault();\r\n        this.props.update(this.state.item);\r\n    }\r\n\r\n    render(): ReactNode {\r\n        const item = this.state.item;\r\n        const levels = [\"S1\", \"S2\", \"S3\", \"D1\", \"D2\", \"D3\",]\r\n        return (\r\n            <form onSubmit={this.onSubmit}>\r\n                <p>Type</p>\r\n                <select className=\"form-control\" value={item.type} name=\"item.type\" onChange={this.handleInputChange}>\r\n                    {levels.map(i => <option key={\"add-edu-lvl-\"+i}>{i}</option>)}\r\n                </select>\r\n                <p>Name</p>\r\n                <input className=\"form-control\" value={item.name} name=\"item.name\" onChange={this.handleInputChange}/>\r\n                <p>Major</p>\r\n                <input className=\"form-control\" value={item.major} name=\"item.major\" onChange={this.handleInputChange}/>\r\n                <p>Title</p>\r\n                <input className=\"form-control\" value={item.title} name=\"item.title\" onChange={this.handleInputChange}/>\r\n                <p/>\r\n                <input className=\"btn btn-primary\" type=\"submit\" value=\"Save\"/>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n \r\nclass AddSchoolForm extends Component<{schools:School[], update:(item:School) => any, closeObserver?:{close:()=>any}}, any>{\r\n    selectedSchool:School;\r\n    constructor(props:any)\r\n    {\r\n        super(props); \r\n        this.selectedSchool = this.props.schools[0];\r\n    }\r\n\r\n    onSubmit = (e:FormEvent) => {\r\n        e.preventDefault();\r\n        this.props.update(this.selectedSchool);\r\n        console.log(\"this.props: \", this.props);\r\n        if (this.props.closeObserver)\r\n        {\r\n            this.props.closeObserver.close();\r\n        }\r\n    }\r\n\r\n    render(): ReactNode { \r\n        \r\n        return (\r\n            <form onSubmit={this.onSubmit}>\r\n                <p>Type</p>\r\n                <select className=\"form-control\" >\r\n                    {this.props.schools.map(i =>{\r\n                        return <option onClick={(e) => {this.selectedSchool = i}} key={\"add-school-\"+i.code}>{i.name}</option>\r\n                    })}\r\n                </select>\r\n                <p/>\r\n                <input className=\"btn btn-primary\" type=\"submit\" value=\"Save\"/>\r\n            </form>\r\n        )\r\n    }\r\n}","import { ReactNode } from \"react\";\r\nimport { ViewTemplate } from \"../../layout/ViewTemplate\";\r\nimport BaseState from \"../../models/BaseState\";\r\nimport { commonWrapper } from \"../../utils/commonWrapper\";\r\nimport { BasePage } from \"../BasePage\";\r\nimport BaseProps from './../../models/BaseProps';\r\nimport AnchorButton from './../../components/buttons/AnchorButton';\r\n\r\nclass State extends BaseState\r\n{\r\n\r\n}\r\nclass MainAdminPage extends BasePage<BaseProps, State>\r\n{\r\n    state: Readonly<State> = new State();\r\n    constructor(props:BaseProps)\r\n    {\r\n        super(props, true, \"Admin Area\");\r\n    }\r\n    componentDidMount(): void {\r\n        this.forceUpdate();\r\n    }\r\n    componentDidUpdate(): void {\r\n         \r\n    }\r\n    render(): ReactNode {\r\n        \r\n        return (\r\n            <ViewTemplate title=\"Admin Area\">\r\n                <div className=\"row\">\r\n                    {managementPages.map(m=>\r\n                        <div key={\"mngmnt-menu-\"+m.url} className=\"col-md-3 mb-2\">\r\n                            <AnchorButton className=\"btn btn-light px-5 py-5 w-100\" to={m.url} iconClass={m.iconClass} >\r\n                                {m.label}\r\n                            </AnchorButton>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </ViewTemplate>\r\n        )\r\n    }\r\n}\r\n\r\nconst managementPages = [\r\n    {\r\n        url:'/admin/users',\r\n        label:'Users',\r\n        iconClass:'fas fa-user-circle'\r\n    },\r\n    {\r\n        url:'/admin/schools',\r\n        label:'Schools',\r\n        iconClass:'fas fa-school'\r\n    },\r\n    {\r\n        url:'/admin/employees',\r\n        label:'Employees',\r\n        iconClass:'fas fa-users'\r\n    },\r\n    {\r\n        url:'/admin/semesterperiods',\r\n        label:'Semesters',\r\n        iconClass:'fas fa-calendar-alt'\r\n    },\r\n    {\r\n        url:'/admin/classlevels',\r\n        label:'Classes',\r\n        iconClass:'fas fa-chalkboard-teacher'\r\n    },\r\n    {\r\n        url:'/admin/students',\r\n        label:'Students',\r\n        iconClass:'fas fa-user-graduate'\r\n    },\r\n    {\r\n        url:'/admin/classmembers',\r\n        label:'Class Members',\r\n        iconClass:'fas fa-user-friends'\r\n    }\r\n]\r\n\r\nexport default commonWrapper(MainAdminPage);","\nimport BaseModel from './BaseModel';\nexport default class School extends BaseModel {\n    nis:string;\n    name:string;\n    code:string;\n    address:string;    \n    level:string;\n}","import { ChangeEvent, Component, FormEvent, ReactNode } from \"react\";\r\nimport { ViewTemplate } from \"../../layout/ViewTemplate\";\r\nimport { commonWrapper } from \"../../utils/commonWrapper\";\r\nimport BaseProps from '../../models/BaseProps';\r\nimport BaseMasterDataPage from \"./BaseMasterDataPage\";\r\nimport BaseMasterDataState from '../../models/BaseMasterDataState';\r\nimport School from \"../../models/School\";\r\nimport PaginationButtons from \"../../components/buttons/PaginationButtons\";\r\nimport ActionButton from \"../../components/buttons/ActionButton\";\r\nimport { DataTableHeaderValue } from \"../../utils/componentUtil\";\r\n\r\nclass State extends BaseMasterDataState<School>\r\n{\r\n\r\n}\r\nclass SchoolsPage extends BaseMasterDataPage<School, BaseProps, State>\r\n{\r\n    \r\n    constructor(props: BaseProps) {\r\n        super(props, \"schools\", \"School Management\");\r\n        this.state = new State();\r\n    }\r\n    get defaultItem(): School { return new School() }\r\n    getDataTableHeaderVals(): DataTableHeaderValue[] {\r\n        return [\r\n            new DataTableHeaderValue(\"nis\", \"NIS\"),\r\n            new DataTableHeaderValue(\"name\", \"Name\"),\r\n            new DataTableHeaderValue(\"level\", \"Level\"),\r\n            new DataTableHeaderValue(\"code\", \"Code\"),\r\n            new DataTableHeaderValue(\"address\", \"Address\"),\r\n        ]\r\n    }\r\n    \r\n    render(): ReactNode {\r\n\r\n        if (this.state.showForm && this.state.item)  {\r\n            return (\r\n                <ViewTemplate title={this.title} back=\"/admin\">\r\n                    {this.closeFormButton}\r\n                    <FormEdit item={this.state.item} handleInputChange={this.handleInputChange} onSubmit={this.formEditSubmit} />\r\n                </ViewTemplate>\r\n            );\r\n        }\r\n        \r\n        const result = this.state.result;\r\n        const items = result?.items;\r\n        return (\r\n            <ViewTemplate title={this.title} back=\"/admin\">\r\n                {result == undefined || items == undefined ?\r\n                    <i>Loading...</i> :\r\n                    <div className=\"mt-5 pl-3 pr-3\" style={{overflow: 'auto'}}>\r\n                       {this.paginationButton}\r\n                        <table className=\"commonDataTable table table-striped\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>No</th>\r\n                                    {this.getDataTableHeaderComponent()}\r\n                                    <th>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {items.map((item, i) => {\r\n                                    return (\r\n                                        <tr key={\"School-\" + item.id}>\r\n                                            <td>{this.startingNumber + i}</td>\r\n                                            <td>{item.nis}</td>\r\n                                            <td>{item.name}</td>\r\n                                            <td>{item.level}</td>\r\n                                            <td>{item.code}</td>\r\n                                            <td>{item.address}</td>\r\n                                            <td>\r\n                                                {this.actionButton(item, false)}\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                })}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>}\r\n            </ViewTemplate>\r\n        )\r\n    }\r\n}\r\n\r\nexport default commonWrapper(SchoolsPage);\r\n\r\nconst FormEdit = (props:{\r\n    item:School, \r\n    onSubmit:(e:FormEvent) => any, \r\n    handleInputChange:(e:ChangeEvent)=>any\r\n}) => {\r\n    const item = props.item;\r\n    return (\r\n        <div className=\"mx-2 py-2\">\r\n            <form onSubmit={props.onSubmit}>\r\n                <p>Nis</p>\r\n                <input className=\"form-control\" name=\"item.nis\" id=\"item.nis\" value={item.nis} onChange={props.handleInputChange} />\r\n                <p>Name</p>\r\n                <input className=\"form-control\" name=\"item.name\" id=\"item.name\" value={item.name} onChange={props.handleInputChange} />\r\n                <p>Code</p>\r\n                <input disabled className=\"form-control\" name=\"item.code\" id=\"item.code\" value={item.code} onChange={props.handleInputChange} />\r\n                <p>Address</p>\r\n                <textarea className=\"form-control\" name=\"item.code\" id=\"item.address\" value={item.address} onChange={props.handleInputChange} />\r\n                <p>Level</p>\r\n                <select className=\"form-control\" name=\"item.level\" id=\"item.level\" value={item.level} onChange={props.handleInputChange}>\r\n                    <option>MA</option>\r\n                    <option>MTS</option>\r\n                </select>\r\n\r\n                <p></p>\r\n                <input className=\"btn btn-primary\" value=\"Save\" type=\"submit\" />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import { ReactNode } from \"react\";\r\nimport { ViewTemplate } from \"../../layout/ViewTemplate\";\r\nimport { commonWrapper } from \"../../utils/commonWrapper\";\r\nimport BaseProps from './../../models/BaseProps';\r\nimport BaseMasterDataPage from \"./BaseMasterDataPage\";\r\nimport BaseMasterDataState from './../../models/BaseMasterDataState';\r\nimport User from \"../../models/User\";\r\nimport ActionButton from \"../../components/buttons/ActionButton\";\r\nimport { DataTableHeaders, DataTableHeaderValue } from \"../../utils/componentUtil\";\r\n\r\nconst ACTION_RESET_PASSWORD = 'resetPassword';\r\n\r\nclass State extends BaseMasterDataState<User>\r\n{\r\n\r\n}\r\nclass UsersPage extends BaseMasterDataPage<User, BaseProps, State>\r\n{\r\n    constructor(props: BaseProps) {\r\n        super(props, \"users\", \"User Management\");\r\n        this.state = new State();\r\n    }\r\n    get defaultItem(): User { return new User() }\r\n    getDataTableHeaderVals = () => {\r\n        return [\r\n            new DataTableHeaderValue(\"email\", \"Email\"),\r\n            new DataTableHeaderValue(\"username\", \"Acct Name\"),\r\n            new DataTableHeaderValue(\"fullName\", \"Full Name\"),\r\n            new DataTableHeaderValue(\"displayName\", \"Display Name\"),\r\n            new DataTableHeaderValue(\"birthDate\", \"Date of Birth\"),\r\n            new DataTableHeaderValue(\"birthPlace\", \"Place of Birth\"),\r\n            new DataTableHeaderValue(\"gender\", \"Gender\"),\r\n            new DataTableHeaderValue(\"role\", \"Role\", false),\r\n            new DataTableHeaderValue(\"phoneNumber\", \"Phone\"),\r\n        ];\r\n    }\r\n    resetPassword = (item:User) => {\r\n        this.patchAction(item, ACTION_RESET_PASSWORD);\r\n    }\r\n    render(): ReactNode {\r\n        \r\n        const result = this.state.result;\r\n        const items = result?.items;\r\n        return (\r\n            <ViewTemplate title={this.title} back=\"/admin\">\r\n                {result == undefined || items == undefined ?\r\n                    <i>Loading...</i> :\r\n                    <div className=\"mt-5 pl-3 pr-3\" style={{overflow: 'auto'}}>\r\n                        {this.paginationButton}\r\n                        <table className=\"commonDataTable table table-striped\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>No</th>\r\n                                    {this.getDataTableHeaderComponent()}\r\n                                    <th>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {items.map((item, i) => {\r\n                                    return (\r\n                                        <tr key={\"user-\" + item.id}>\r\n                                            <td>{this.startingNumber + i}</td>\r\n                                            <td>{item.email}</td>\r\n                                            <td>{item.username}</td>\r\n                                            <td>{item.fullName}</td>\r\n                                            <td>{item.displayName}</td>\r\n                                            <td>{new Date(item.birthDate).toLocaleDateString()}</td>\r\n                                            <td>{item.birthPlace}</td>\r\n                                            <td>{item.gender}</td>\r\n                                            <td>\r\n                                                {item.authorities.map(a => <div className=\"badge badge-success  mr-1\">{a.name?.toLocaleLowerCase()}</div>)}\r\n                                            </td>\r\n                                            <td>{item.phoneNumber}</td>\r\n                                            \r\n                                            <td>\r\n                                                <div \r\n                                                    className=\"d-flex\" \r\n                                                    style={{flexWrap: 'nowrap', width: '150px'}}>\r\n                                                    <ActionButton \r\n                                                        iconClass=\"fas fa-lock-open\" \r\n                                                        className=\"btn btn-warning btn-sm mr-2\"\r\n                                                        onClick={() => this.resetPassword(item)}\r\n                                                    >\r\n                                                    </ActionButton>\r\n                                                    {this.actionButton(item)}\r\n                                                </div>\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                })}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>}\r\n            </ViewTemplate>\r\n        )\r\n    }\r\n}\r\n\r\nexport default commonWrapper(UsersPage)","const ErrorMessage = (props:{children:any, show?:boolean}) => {\n\n    if (props.show === false)\n    {\n        return null;\n    }\n    return (\n        <div className=\"alert alert-danger\">\n            {props.children}\n        </div>\n    )\n}\n\nexport default ErrorMessage;","const InfoMessage = (props:{children:any, show?:boolean}) => {\n\n    if (props.show === false)\n    {\n        return null;\n    }\n    return (\n        <div className=\"alert alert-info\">\n            {props.children}\n        </div>\n    )\n}\n\nexport default InfoMessage;","import { BasePage } from \"../BasePage\";\nimport BaseProps from '../../models/BaseProps';\nimport { FormEvent, ReactNode } from \"react\";\nimport { ViewTemplate } from \"../../layout/ViewTemplate\";\nimport { commonWrapper } from './../../utils/commonWrapper';\nimport BaseState from './../../models/BaseState';\nimport { Link } from \"react-router-dom\";\nimport ErrorMessage from './../../components/messages/ErrorMessage';\nimport InfoMessage from './../../components/messages/InfoMessage';\nimport { invokeLater } from './../../utils/eventUtil';\nimport ActionButton from './../../components/buttons/ActionButton';\nimport { CommonTable } from \"../../utils/componentUtil\";\n\nclass State  extends BaseState\n{\n    username:string            = \"\";\n    password:string         = \"\";\n    loading:boolean         = false;\n    loginSuccess:boolean    = false;\n}\nclass LoginPage extends BasePage<BaseProps, State>\n{\n    state: Readonly<State> = new State();\n   \n    constructor(props:BaseProps)\n    {\n        super(props, false, \"Login\");\n    }\n    onSubmit = (e:FormEvent) => {\n        console.log(\"ON submit login\");\n        e.preventDefault();\n        this.setState({ loading: true });\n\n        this.authService.login(this.state.username, this.state.password)\n            .then((user) => {\n                this.setState({ error: undefined, loginSuccess: true }, \n                    () => invokeLater(this.handleSuccessLogin, 500) );\n            })\n            .catch((err) => {\n                this.setState({ error: new Error(err?.message) });\n            })\n            .finally(() => {\n                this.setState({ loading: false });\n            })\n    }\n\n    handleSuccessLogin = () => {\n        if (this.authService.isAdmin) {\n            this.navigate(\"/admin\");\n            return;\n        }\n        this.gotoHomePage();\n    }\n\n    componentDidMount(): void {\n        if (this.authService.loggedIn)\n        {\n            this.navigate(\"/\");\n        }\n        \n    }\n\n    render(): ReactNode {\n        \n        if (this.state.loginSuccess)\n        {\n            return (\n                <ViewTemplate>\n                    <div className=\"pt-5 pb-5 pl-5 pr-5 text-center\">\n                        <InfoMessage >\n                            Login Succes\n                        </InfoMessage> \n                    </div>\n                </ViewTemplate>\n            )\n        }\n        return (\n            <ViewTemplate >\n                <form onSubmit={this.onSubmit} className=\"row mt-3 \">\n                    <div className=\"col-md-4\"/>\n                    <div className=\"col-md-4 bg-light\" style={{padding: 20}}>\n                        \n                        <ErrorMessage show={this.state.error != undefined}>\n                            {this.state.error?.message}\n                        </ErrorMessage> \n                        <CommonTable\n                            className=\"table table-borderless\"\n                            content={[\n                                [\n                                    \"Username\",\n                                    <input \n                                        id=\"username\"\n                                        name=\"username\"\n                                        value={this.state.username}\n                                        onChange={this.handleInputChange}\n                                        className=\"form-control\" \n                                        required/>            \n                                ],\n                                [\n                                    \"Password\",\n                                    <input \n                                        type=\"password\"\n                                        name=\"password\"\n                                        id=\"password\"\n                                        value={this.state.password}\n                                        onChange={this.handleInputChange}\n                                        className=\"form-control\"\n                                        required/>\n                                ]\n                            ]} />\n                        { this.state.loading? \n                        <i>Please wait...</i> : \n                        <ActionButton className=\"btn btn-success mt-3\">\n                            Login\n                        </ActionButton> }\n                        <p className=\"mt-3\">\n                            Don't have account? Contact admin\n                        </p>\n                    </div>\n                </form>\n            </ViewTemplate>\n        )\n    }\n}\n\nexport default commonWrapper(LoginPage)","import React, { Component } from \"react\";\r\nimport { ViewTemplate } from \"../../layout/ViewTemplate\";\r\nimport BaseProps from \"../../models/BaseProps\";\r\nimport { BasePage } from \"../BasePage\";\r\n\r\nclass Props extends BaseProps {\r\n    \r\n    message:string\r\n}\r\nexport class ErrorView extends BasePage<Props, any>\r\n{\r\n    constructor(props:Props)\r\n    {\r\n        super(props, false, \"Error\");\r\n    }\r\n    render(): React.ReactNode {\r\n        return (\r\n            <ViewTemplate title=\"Oops !\">\r\n                <div className=\"alert alert-danger mt-3\">\r\n                    <p>{this.props.message}</p>\r\n                </div>    \r\n            </ViewTemplate>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport { ViewTemplate } from '../../layout/ViewTemplate'\r\nimport { BasePage } from '../BasePage'\r\n\r\nimport './Home.css'\r\nimport { invokeLater } from './../../utils/eventUtil';\r\nimport BaseState from '../../models/BaseState';\r\nimport BaseProps from '../../models/BaseProps';\r\nimport { commonWrapper } from '../../utils/commonWrapper';\r\nimport Settings from './../../settings';\r\n\r\n\r\nclass State extends BaseState {\r\n\r\n    showTitle: boolean = false;\r\n    welcomingWords: string[] = [];\r\n\r\n}\r\nclass Home extends BasePage<BaseProps, State>\r\n{\r\n    state: State = new State();\r\n    welcomingWord: string;\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.title = \r\n        this.welcomingWord = Settings.App.uiSetting.defaultTitle;\r\n    }\r\n    componentDidMount() {\r\n        this.startDisplayWelcomingWord();\r\n    }\r\n    startDisplayWelcomingWord = () => {\r\n        if (this.state.welcomingWords.join(\"\") != this.welcomingWord) {\r\n            invokeLater(() => {\r\n                const words = this.state.welcomingWords;\r\n                words.push(this.welcomingWord[this.welcomingWord.length - (this.welcomingWord.length - words.length)]);\r\n                this.setState({ welcomingWords: words }, this.startDisplayWelcomingWord);\r\n            }, 200);\r\n\r\n        }\r\n    }\r\n    componentDidUpdate() {\r\n\r\n    }\r\n\r\n    render(): React.ReactNode {\r\n\r\n        return (\r\n            <ViewTemplate attributes={{ style: { textAlign: 'center', paddingTop: '30vh' } }}>\r\n                <WelcomingWord word={this.state.welcomingWords.join(\"\")} />\r\n            </ViewTemplate>\r\n        )\r\n    }\r\n}\r\nconst WelcomingWord = (props: { word: string }) => {\r\n\r\n    return (\r\n        <div\r\n            style={{fontSize: '3em', fontWeight: 'bold'}} \r\n            className='text-primary text-center'>\r\n                {props.word}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default commonWrapper(Home);\r\n\r\n// const Icon = () => {\r\n//     return (\r\n//         <svg className='mb-5' xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 600 600\" width=\"200\" height=\"200\">\r\n\r\n//             <circle className='iconStroke strokeDark' fill=\"none\" strokeWidth={190} cx=\"237\" cy=\"310\" r=\"95\" />\r\n//             <circle className='iconStroke strokeOrange' fill=\"none\" strokeWidth={30} cx=\"237\" cy=\"310\" r=\"204.02205763103166\" />\r\n//             <circle className='iconStroke strokeOrange' fill=\"none\" strokeWidth={150} cx=\"362\" cy=\"310\" r=\"75\" />\r\n//             {/* <circle className=\"iconBg\" style={{fill:this.state.orangeBgColor}} strokeWidth={80} cx=\"362\" cy=\"310\" r=\"120\"  /> */}\r\n//             <circle className='iconStroke strokeDark' fill=\"none\" strokeWidth={80} cx=\"362\" cy=\"310\" r=\"187.3846311734236\" />\r\n\r\n//         </svg>\r\n//     );\r\n// }","import { ReactNode } from \"react\";\r\nimport { ViewTemplate } from \"../../layout/ViewTemplate\";\r\nimport BaseProps from \"../../models/BaseProps\";\r\nimport BaseState from \"../../models/BaseState\";\r\nimport { commonWrapper } from \"../../utils/commonWrapper\";\r\nimport { BasePage } from \"../BasePage\";\r\n\r\nclass Dashboard extends BasePage<BaseProps, BaseState>\r\n{\r\n    constructor(props:any)\r\n    {\r\n        super(props, true, \"Dashboard\");\r\n    }\r\n    render(): ReactNode {\r\n        \r\n        return (\r\n            <ViewTemplate title=\"Dashboard\">\r\n                <div className=\"alert alert-success\">Hello, {this.authService.loggedUser?.displayName}</div>\r\n            </ViewTemplate>\r\n        );\r\n    }\r\n}\r\n\r\nexport default commonWrapper(Dashboard);","import { FormEvent, ReactNode } from \"react\";\r\nimport { ViewTemplate } from \"../../layout/ViewTemplate\";\r\nimport BaseProps from \"../../models/BaseProps\";\r\nimport BaseState from \"../../models/BaseState\";\r\nimport User from \"../../models/User\";\r\nimport { commonWrapper } from \"../../utils/commonWrapper\";\r\nimport { BasePage } from \"../BasePage\";\r\n\r\nclass State extends BaseState {\r\n    user :User = new User()\r\n}\r\nclass EditProfile extends BasePage<BaseProps, State>\r\n{\r\n    state = new State();\r\n    constructor(props:BaseProps)\r\n    {\r\n        super(props, false, \"Edit Profile\"); \r\n    }\r\n\r\n    componentDidMount(): void {\r\n        if (this.authService.loggedUser)\r\n            this.setState({user: this.authService.loggedUser})\r\n    }\r\n\r\n    onSubmit = (e:FormEvent) => {\r\n        e.preventDefault();\r\n        this.dialog.showConfirm(\"Update Profile\", \"Save user data?\")\r\n            .then(ok => {\r\n                this.authService.updateProfile(this.state.user)\r\n                    .then(response=>{\r\n                        this.dialog.showInfo(\"Update Success\", \"Profile has been updated\");\r\n                    })\r\n                    .catch(console.error)\r\n            })\r\n            .catch(console.error)\r\n    }\r\n\r\n    render(): ReactNode {\r\n        const user = this.state.user;\r\n        return (\r\n            <ViewTemplate title=\"Edit Profile\" back=\"/dashboard\">\r\n                <form onSubmit={this.onSubmit}>\r\n                    <p>Email</p>\r\n                    <input className=\"form-control\" name=\"user.email\" value={user.email} onChange={this.handleInputChange} />\r\n                    <p>Username</p>\r\n                    <input className=\"form-control\" name=\"user.username\" value={user.username} onChange={this.handleInputChange}/>\r\n                    <p>Display Name</p>\r\n                    <input className=\"form-control\" name=\"user.displayName\" value={user.displayName} onChange={this.handleInputChange}/>\r\n                    <p>Password <i>Leave it empty if you don't want to change it</i></p>\r\n                    <input autoComplete=\"off\" className=\"form-control\" type=\"password\" name=\"user.editPassword\" value={user.editPassword} onChange={this.handleInputChange} />\r\n                    <p/>\r\n                    <input className=\"btn btn-success\" type=\"submit\" value=\"Save\" />\r\n                </form>\r\n            </ViewTemplate>\r\n        )\r\n    }\r\n}\r\n\r\nexport default commonWrapper(EditProfile);","import BaseModel from \"./BaseModel\";\nimport Employee from \"./Employee\";\n\nexport default class SemesterPeriod extends BaseModel {\n    semester: number = 1;\n    year: string;\n\n    active: boolean;\n\n    direktur: Employee;\n    bendahara: Employee;\n    pengawasSekolah: Employee;\n    headHRD: Employee;\n    hearMR: Employee;\n    headRnD: Employee;\n    headLogistic: Employee;\n    headPublicRelation: Employee;\n    headLanguage: Employee;\n    headMAKafila: Employee;\n    headMAKafilaFullday: Employee;\n    headMtsKafila: Employee;\n    headMtsAlKahfi: Employee;\n    headMtsKafilaIbnuMasud: Employee;\n    headPesantren: Employee;\n    wakabidTahfiz: Employee;\n    wakabidAsrama: Employee;\n\n    //\n    adminKiis: Employee;\n    adminMAKafila: Employee;\n    adminMAKafilaFullday: Employee;\n    adminMtsAlKahfi: Employee;\n    adminMtsKafilaIbnuMasud: Employee;\n    adminTahfiz: Employee;\n    adminAsrama: Employee;\n\n    //\n    pjQurban: Employee;\n    pjRamadhan: Employee;\n    pjPromosiPSB: Employee;\n    pjWebMedia: Employee;\n    pjTamuFO: Employee;\n    pjAlumni: Employee;\n    pjUtsUas: Employee;\n    pjEvaluasiPengembanganKurikulum: Employee;\n    pjLabKomputer: Employee;\n    pjLabIPA: Employee;\n    pjLabBahasa: Employee;\n    pjBinaPrestasi: Employee;\n    pjPerpustakaan: Employee;\n    pjBK: Employee;\n    pjBahasaArab: Employee;\n    pjBahasaInggris: Employee;\n    pjUKS: Employee;\n    pjOpkiis: Employee;\n    pjDKM: Employee;\n    pjKesiswaan: Employee;\n    pjKurikulum: Employee;\n\n    public static EmployeeFields = [\n        'direktur', 'bendahara', 'pengawasSekolah', 'headHRD', 'hearMR', 'headRnD', 'headLogistic', 'headPublicRelation', 'headLanguage', 'headMAKafila', 'headMAKafilaFullday', 'headMtsKafila', 'headMtsAlKahfi', 'headMtsKafilaIbnuMasud', 'headPesantren', 'wakabidTahfiz', 'wakabidAsrama', \n        'adminKiis', 'adminMAKafila', 'adminMAKafilaFullday', 'adminMtsAlKahfi', 'adminMtsKafilaIbnuMasud', 'adminTahfiz', 'adminAsrama',\n        'pjQurban', 'pjRamadhan', 'pjPromosiPSB', 'pjWebMedia', 'pjTamuFO', 'pjAlumni', 'pjUtsUas', 'pjEvaluasiPengembanganKurikulum', 'pjLabKomputer', 'pjLabIPA', 'pjLabBahasa', 'pjBinaPrestasi', 'pjPerpustakaan', 'pjBK', 'pjBahasaArab', 'pjBahasaInggris', 'pjUKS', 'pjOpkiis', 'pjDKM', 'pjKesiswaan', 'pjKurikulum'   ];\n}","import { ChangeEvent, Component, FormEvent, ReactNode } from \"react\";\r\nimport { ViewTemplate } from \"../../layout/ViewTemplate\";\r\nimport { commonWrapper } from \"../../utils/commonWrapper\";\r\nimport BaseProps from '../../models/BaseProps';\r\nimport BaseMasterDataPage from \"./BaseMasterDataPage\";\r\nimport BaseMasterDataState from '../../models/BaseMasterDataState';\r\nimport ActionButton from \"../../components/buttons/ActionButton\";\r\nimport { DataTableHeaderValue } from \"../../utils/componentUtil\";\r\nimport SemesterPeriod from './../../models/SemesterPeriod';\r\nimport Employee from './../../models/Employee';\r\nimport MasterDataService from './../../services/MasterDataService';\r\nimport { resolve } from \"inversify-react\";\r\nimport ControlledComponent from \"../ControlledComponent\";\r\nimport { randomString } from './../../utils/stringUtil';\r\nimport ToastService from './../../services/ToastService';\r\n\r\nclass State extends BaseMasterDataState<SemesterPeriod>\r\n{\r\n\r\n}\r\nclass SemesterPeriodsPage extends BaseMasterDataPage<SemesterPeriod, BaseProps, State>\r\n{\r\n    \r\n    constructor(props: BaseProps) {\r\n        super(props, \"semesterperiods\", \"Semester Management\");\r\n        this.state = new State();\r\n    }\r\n    get defaultItem(): SemesterPeriod { return new SemesterPeriod() }\r\n    getDataTableHeaderVals(): DataTableHeaderValue[] {\r\n        const employeeFields = SemesterPeriod.EmployeeFields.map(field => {\r\n            return new DataTableHeaderValue(`${field}.user.fullName`, field);\r\n        })\r\n        return [\r\n            new DataTableHeaderValue(\"semester\", \"Semester\"),\r\n            new DataTableHeaderValue(\"year\", \"Year\"),\r\n            new DataTableHeaderValue(\"active\", \"Active\"),\r\n            ...employeeFields\r\n        ]\r\n    }\r\n    setActive = (item:SemesterPeriod) => {\r\n        this.patchAction(item, 'activate');\r\n    }\r\n    setEmployeeInCharge = (item:SemesterPeriod, field:string) => {\r\n        this.dialog.showContent(\"Set \" + field, <SetEmployeeForm field={field} item={item} update={this.update} />);\r\n    }\r\n    employeeCellFields = (item:any) => SemesterPeriod.EmployeeFields.map(field => {\r\n        return (\r\n            <td key={\"emp-field-\" + randomString(10)}>\r\n                <div className=\"row\" style={{flexWrap: 'nowrap'}}>\r\n                    <div className=\"col-3\">\r\n                        <ActionButton \r\n                            iconClass=\"fas fa-user-edit\" \r\n                            className=\"btn btn-sm btn-success mr-3\" \r\n                            onClick={() => this.setEmployeeInCharge(item, field)} />\r\n                    </div>\r\n                    <div className=\"col-8 no-wrap\">{item[field]?.user.fullName.trim()}</div>\r\n                </div>\r\n            </td>\r\n        )\r\n    })\r\n    \r\n    render(): ReactNode {\r\n\r\n        if (this.state.showForm && this.state.item) {\r\n            return (\r\n                <ViewTemplate title={this.title} back=\"/admin\">\r\n                    {this.closeFormButton}\r\n                    <FormEdit item={this.state.item} handleInputChange={this.handleInputChange} onSubmit={this.formEditSubmit} />\r\n                </ViewTemplate>\r\n            );\r\n        }\r\n        \r\n        const result = this.state.result;\r\n        const items = result?.items;\r\n        \r\n        return (\r\n            <ViewTemplate title={this.title} back=\"/admin\">\r\n                {this.showFormButton}\r\n                {result == undefined || items == undefined ?\r\n                    <i>Loading...</i> :\r\n                    <div className=\"mt-5 pl-3 pr-3\" style={{overflow: 'auto'}}>\r\n                       {this.paginationButton}\r\n                        <table className=\"commonDataTable table table-striped\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>No</th>\r\n                                    <th>Action</th>\r\n                                    {this.getDataTableHeaderComponent()}\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {items.map((item, i) => {\r\n                                    return (\r\n                                        <tr key={\"smt-period-\" + item.id}>\r\n                                            <td>{this.startingNumber + i}</td>\r\n                                            <td>\r\n                                                <div className=\"mx-2\" style={{display: 'flex', flexWrap: 'nowrap'}}>\r\n                                                    <ActionButton \r\n                                                        onClick={() => this.setActive(item)} \r\n                                                        iconClass=\"fas fa-calendar-check\"\r\n                                                        className=\"btn-text btn btn-sm text-primary mr-1\" \r\n                                                        disabled={item.active === true} />\r\n                                                    {this.actionButton(item)}\r\n                                                </div>\r\n                                            </td>\r\n                                            <td className=\"text-center\">{item.semester}</td>\r\n                                            <td>{item.year}</td>\r\n                                            <td>\r\n                                                {item.active ? <b className=\"text-success\">active</b> : <i>not active</i> }\r\n                                            </td>\r\n                                            {this.employeeCellFields(item)}\r\n                                            \r\n                                        </tr>\r\n                                    )\r\n                                })}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>}\r\n            </ViewTemplate>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default commonWrapper(SemesterPeriodsPage);\r\n\r\nconst FormEdit = (props:{\r\n    item:SemesterPeriod, \r\n    onSubmit:(e:FormEvent) => any, \r\n    handleInputChange:(e:ChangeEvent)=>any\r\n}) => {\r\n    const item = props.item;\r\n    return (\r\n        <div className=\"mx-2 py-2\">\r\n            <form onSubmit={props.onSubmit}>\r\n                <p>Semester</p>\r\n                <select className=\"form-control\" name=\"item.semester\" id=\"item.semester\" value={item.semester} onChange={props.handleInputChange} required>\r\n                    <option>1</option>\r\n                    <option>2</option>\r\n                </select>\r\n                <p>Year. <i>example: 2020-2021</i></p>\r\n                <input className=\"form-control\" name=\"item.year\" id=\"item.year\" value={item.year} onChange={props.handleInputChange} required/>\r\n                \r\n                <p></p>\r\n                <input className=\"btn btn-primary\" value=\"Save\" type=\"submit\" />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\ntype SetEmployeeFormProps = { item: SemesterPeriod, field:string, update:(item:SemesterPeriod) => any };\r\ntype SetEmployeeFormState = { searchEmployee:string, employees: Employee[], selectedEmployee: Employee | undefined };\r\n\r\nclass SetEmployeeForm extends ControlledComponent<SetEmployeeFormProps, SetEmployeeFormState> {\r\n    \r\n    @resolve(MasterDataService)\r\n    private service:MasterDataService;\r\n    @resolve(ToastService)\r\n    private toast:ToastService;\r\n\r\n    constructor(props:SetEmployeeFormProps) {\r\n        super(props);\r\n        this.state = {\r\n            searchEmployee: '',\r\n            employees: [],\r\n            selectedEmployee: undefined,\r\n        }\r\n    }\r\n\r\n    search = (e:FormEvent) => {\r\n        e.preventDefault();\r\n        this.service.list<Employee>('employees', 0, 10, 'user.fullName', false, 'user.fullName:' + this.state.searchEmployee)\r\n            .then((result) => {\r\n                this.handleSearchEmployee(result.items);\r\n            })\r\n            .catch(console.error);\r\n    }\r\n    handleSearchEmployee = (items:Employee[]) => {\r\n        if (!items || items.length == 0) {\r\n            this.toast.showDanger(\"No employee contains name \\\"\" + this.state.searchEmployee +\"\\\" was found\");\r\n            return;\r\n        }\r\n        this.setState({ employees: items });\r\n    }\r\n    closeDropdown = () => {\r\n        this.setState({ employees: [] });\r\n    }\r\n    setSelectedEmployee = (e:Employee) => {\r\n        this.setState({ selectedEmployee: e, searchEmployee: e.user.fullName }, this.closeDropdown);\r\n    }\r\n    submit = () => {\r\n        if (!this.state.selectedEmployee) {\r\n            this.toast.showDanger(\"Invalid employee\");\r\n            return;\r\n        }\r\n        const item:any = this.props.item;\r\n        item[this.props.field] = this.state.selectedEmployee;\r\n        this.props.update(item);\r\n    }\r\n\r\n    render(): ReactNode {\r\n        const {employees} = this.state;\r\n        return (\r\n            <div>\r\n                <p>Select Employee</p>\r\n                <form onSubmit={this.search} className=\"my-5 mx-5 pb-5\">\r\n                    <div className=\"input-group\">\r\n                        <input \r\n                            type=\"search\"\r\n                            className=\"form-control\" \r\n                            name=\"searchEmployee\" \r\n                            value={this.state.searchEmployee}\r\n                            placeholder=\"Full Name\"\r\n                            onChange={this.handleInputChange} \r\n                            required />\r\n                        <div className=\"input-group-append\">\r\n                            <input type=\"submit\" className=\"btn btn-primary\" value={\"Search\"}/>\r\n                        </div>\r\n                    </div>\r\n                        \r\n                    <div style={{position: 'absolute',width:'75%'}}>\r\n                        { employees.length > 0 ?\r\n\r\n                        <div className=\"bg-light border border-dark px-2 py-1 w-100\" style={{position: 'relative'}}>\r\n                            <ActionButton className=\"btn btn-text btn-sm\" iconClass=\"fas fa-times\" onClick={this.closeDropdown}>close</ActionButton>\r\n                            <div style={{overflowY:'auto', height: '100px'}}>\r\n                                <div className=\"no-wrap\" style={{ width: 'max-content' }}>\r\n                                    {employees.map(e => {\r\n                                        return (\r\n                                            <div key={\"set-emp-\"+e.id}>\r\n                                                <a className=\"btn btn-text clickable\" onClick={()=>this.setSelectedEmployee(e)}>\r\n                                                    {e.user.fullName.trim()}, nisdm: {e.nisdm}\r\n                                                </a>\r\n                                            </div>\r\n                                        );\r\n                                    })}\r\n                                </div>\r\n                            </div>\r\n                        </div> : null }\r\n                    </div>\r\n                    <button type=\"button\" className=\"btn btn-success mt-3\" onClick={this.submit}>\r\n                        Save Changes\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","\nimport BaseModel from './BaseModel';\nimport School from './School';\nexport default class ClassLevel extends BaseModel {\n\n    level: number = 1;\n    letter: string = \"A\";\n    description: string = \"\";\n    school: School;\n\n    semester: number = 1;\n    year: string = \"\";\n    semesterActive: boolean;\n}","import { ChangeEvent, FormEvent, ReactNode } from \"react\";\r\nimport { ViewTemplate } from \"../../layout/ViewTemplate\";\r\nimport BaseMasterDataState from '../../models/BaseMasterDataState';\r\nimport BaseProps from '../../models/BaseProps';\r\nimport ClassLevel from \"../../models/ClassLevel\";\r\nimport { commonWrapper } from \"../../utils/commonWrapper\";\r\nimport { DataTableHeaderValue } from \"../../utils/componentUtil\";\r\nimport School from './../../models/School';\r\nimport BaseMasterDataPage from \"./BaseMasterDataPage\";\r\n\r\nclass State extends BaseMasterDataState<ClassLevel>\r\n{\r\n\r\n}\r\nclass ClassLevelsPage extends BaseMasterDataPage<ClassLevel, BaseProps, State>\r\n{\r\n    schools:School[] = [];\r\n    constructor(props: BaseProps) {\r\n        super(props, \"classlevels\", \"Class Level Management\");\r\n        this.state = new State();\r\n    }\r\n    get defaultItem(): ClassLevel { return new ClassLevel() }\r\n    getDataTableHeaderVals(): DataTableHeaderValue[] {\r\n        return [\r\n            new DataTableHeaderValue(\"level\", \"Level\"),\r\n            new DataTableHeaderValue(\"letter\", \"Letter\"),\r\n            new DataTableHeaderValue(\"school.name\", \"School\"),\r\n            new DataTableHeaderValue(\"description\", \"Description\"),\r\n            new DataTableHeaderValue(\"semesterPeriod.semester\", \"Semester\"),\r\n            new DataTableHeaderValue(\"semesterPeriod.year\", \"Year\"),\r\n            new DataTableHeaderValue(null, \"Semeser Active\", false),\r\n        ]\r\n    }\r\n\r\n    edit = (model:ClassLevel) => {\r\n        this.service.list<School>('schools', 0, -1)\r\n            .then((response) => {\r\n                this.schools = response.items ?? [];\r\n                if (this.schools.length == 0) {\r\n                    this.dialog.showError(\"No School Record\", \"Failed when getting school data\");\r\n                    return;\r\n                }\r\n                if (!model.school) {\r\n                    model.school = this.schools[0];\r\n                }\r\n                this.setState({item: model}, this.showForm);\r\n            })\r\n            .catch((e) => this.dialog.showError(\"Failed to Read School Data\", e));\r\n    }\r\n\r\n    showInsertForm = () => this.edit(this.defaultItem);\r\n    \r\n    render(): ReactNode {\r\n\r\n        if (this.state.showForm && this.state.item && this.schools.length > 0)  {\r\n            return (\r\n                <ViewTemplate title={this.title} back=\"/admin\">\r\n                    {this.closeFormButton}\r\n                    <FormEdit item={this.state.item} schools={this.schools} handleInputChange={this.handleInputChange} onSubmit={this.formEditSubmit} />\r\n                </ViewTemplate>\r\n            );\r\n        }\r\n        \r\n        const result = this.state.result;\r\n        const items = result?.items;\r\n        return (\r\n            <ViewTemplate title={this.title} back=\"/admin\">\r\n                {this.showFormButton}\r\n                {result == undefined || items == undefined ?\r\n                    <i>Loading...</i> :\r\n                    <div className=\"mt-5 pl-3 pr-3\" style={{overflow: 'auto'}}>\r\n                       {this.paginationButton}\r\n                        <table className=\"commonDataTable table table-striped\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>No</th>\r\n                                    {this.getDataTableHeaderComponent()}\r\n                                    <th>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {items.map((item, i) => {\r\n                                    return (\r\n                                        <tr key={\"ClassLevel-\" + item.id}>\r\n                                            <td>{this.startingNumber + i}</td>\r\n                                            <td>{item.level}</td>\r\n                                            <td>{item.letter}</td>\r\n                                            <td>{item.school.name}</td>\r\n                                            <td>{item.description}</td>\r\n                                            <td>{item.semester}</td>\r\n                                            <td>{item.year}</td>\r\n                                            <td>{item.semesterActive ? \r\n                                                <b className=\"text-success\">active</b> : <i>not active</i>}\r\n                                            </td>\r\n                                            <td>\r\n                                                {item.semesterActive ? this.actionButton(item) : null}\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                })}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>}\r\n            </ViewTemplate>\r\n        )\r\n    }\r\n}\r\n\r\nexport default commonWrapper(ClassLevelsPage);\r\n\r\nconst FormEdit = (props:{\r\n    item:ClassLevel, \r\n    schools:School[],\r\n    onSubmit:(e:FormEvent) => any, \r\n    handleInputChange:(e:ChangeEvent)=>any\r\n}) => {\r\n    const item = props.item;\r\n    const setSchool = (school:School) => {\r\n        item.school = school;\r\n    }\r\n    return (\r\n        <div className=\"mx-2 py-2\">\r\n            <form onSubmit={props.onSubmit}>\r\n                <p>Level</p>\r\n                <input className=\"form-control\" name=\"item.level\" id=\"item.level\" value={item.level} type=\"number\" required onChange={props.handleInputChange} />\r\n                <p>Letter</p>\r\n                <input className=\"form-control\" name=\"item.letter\" id=\"item.letter\" value={item.letter} onChange={props.handleInputChange} required />\r\n                <p>School</p>\r\n                <select className=\"form-control\" required>\r\n                    {props.schools.map((school)=>{\r\n                        return (\r\n                            <option key={\"select-class-school-\"+school.id} onClick={()=>setSchool(school)}>\r\n                                {school.name}\r\n                            </option>\r\n                        )\r\n                    })}\r\n                </select>\r\n                <p>Semester</p>\r\n                <input className=\"form-control\" name=\"item.semester\" id=\"item.semester\" value={item.semester} type=\"number\" required onChange={props.handleInputChange} />\r\n                <p>Year</p>\r\n                <input className=\"form-control\" name=\"item.year\" id=\"item.year\" value={item.year} onChange={props.handleInputChange} required />\r\n\r\n                <p></p>\r\n                <input className=\"btn btn-primary\" value=\"Save\" type=\"submit\" />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","\nimport BaseModel from './BaseModel';\nimport User from './User';\nexport default class Student extends BaseModel {\n    nisKiis: string;\n    nisn: string;\n\n    user: User = new User();\n\n    address: string;\n\n    city: string;\n    province: string;\n\n    /**\n     * ========================\n     * Family\n     * ========================\n     */\n\n    siblingNum: number;\n    siblingCount: number;\n    // father\n    fatherName: string;\n    fatherBirthDate: Date;\n    fatherBirthPlace: string;\n    fatherEducation: string;\n    fatherPhoneNumber: string;\n    fatherOccupation: string;\n    fatherAddress: string;\n    fatherIncome: number;\n\n    // mother\n    motherName: string;\n    motherBirthDate: Date;\n    motherBirthPlace: string;\n    motherEducation: string;\n    motherPhoneNumber: string;\n    motherOccupation: string;\n    motherAddress: string;\n    motherIncome: number;\n\n    /**\n     * ========================\n     * Academic\n     * ========================\n     */\n    originSchool: string;\n    sttbNumber: string;\n    entranceDate: Date;\n    entranceClass: string;\n    transferFrom: string;\n    transferReason: string;\n    entranceCertificateScore: string;\n    leaveSchool: boolean;\n    leaveReason: string;\n\n    educationFinished: boolean;\n\n    graduationDateMts: Date;\n    certificateNumberMts: string;\n    seniorLevelSchool: string;\n\n    graduationDateMa: Date;\n    certificateNumberMa: string;\n\n    /**\n     * ======================\n     * Alumni\n     * ======================\n     */\n    graduationCeremonyDate: Date;\n    highEducationUniv: string;\n    highEducationMajor: string;\n    workDate: Date;\n    workCompany: string;\n\n\n}","import { ChangeEvent, Component, FormEvent, ReactNode } from \"react\";\r\nimport { ViewTemplate } from \"../../layout/ViewTemplate\";\r\nimport { commonWrapper } from \"../../utils/commonWrapper\";\r\nimport BaseProps from '../../models/BaseProps';\r\nimport BaseMasterDataPage from \"./BaseMasterDataPage\";\r\nimport BaseMasterDataState from '../../models/BaseMasterDataState';\r\nimport Student from \"../../models/Student\";\r\nimport { DataTableHeaderValue } from \"../../utils/componentUtil\";\r\nimport { getInputReadableDate } from \"../../utils/stringUtil\";\r\n\r\nclass State extends BaseMasterDataState<Student>\r\n{\r\n\r\n}\r\nclass StudentsPage extends BaseMasterDataPage<Student, BaseProps, State>\r\n{\r\n    \r\n    constructor(props: BaseProps) {\r\n        super(props, \"students\", \"Student Management\");\r\n        this.state = new State();\r\n    }\r\n    get defaultItem(): Student { return new Student() }\r\n    getDataTableHeaderVals(): DataTableHeaderValue[] {\r\n        return [\r\n            new DataTableHeaderValue(\"nisKiis\"),\r\n            new DataTableHeaderValue(\"nisn\"),\r\n            new DataTableHeaderValue(\"user.fullName\",),\r\n            new DataTableHeaderValue(\"user.birthDate\"),\r\n            new DataTableHeaderValue(\"user.birthPlace\"),\r\n            new DataTableHeaderValue(\"address\"),\r\n            new DataTableHeaderValue(\"city\"),\r\n            new DataTableHeaderValue(\"province\"),\r\n            new DataTableHeaderValue(\"siblingNum\"),\r\n            new DataTableHeaderValue(\"siblingCount\"),\r\n            new DataTableHeaderValue(\"fatherName\"),\r\n            new DataTableHeaderValue(\"fatherBirthDate\"),\r\n            new DataTableHeaderValue(\"fatherBirthPlace\"),\r\n            new DataTableHeaderValue(\"fatherEducation\"),\r\n            new DataTableHeaderValue(\"fatherPhoneNumber\"),\r\n            new DataTableHeaderValue(\"fatherOccupation\"),\r\n            new DataTableHeaderValue(\"fatherAddress\"),\r\n            new DataTableHeaderValue(\"fatherIncome\"),\r\n            new DataTableHeaderValue(\"motherName\"),\r\n            new DataTableHeaderValue(\"motherBirthDate\"),\r\n            new DataTableHeaderValue(\"motherBirthPlace\"),\r\n            new DataTableHeaderValue(\"motherEducation\"),\r\n            new DataTableHeaderValue(\"motherPhoneNumber\"),\r\n            new DataTableHeaderValue(\"motherOccupation\"),\r\n            new DataTableHeaderValue(\"motherAddress\"),\r\n            new DataTableHeaderValue(\"motherIncome\"),\r\n            new DataTableHeaderValue(\"originSchool\"),\r\n            new DataTableHeaderValue(\"sttbNumber\"),\r\n            new DataTableHeaderValue(\"entranceDate\"),\r\n            new DataTableHeaderValue(\"entranceClass\"),\r\n            new DataTableHeaderValue(\"transferFrom\"),\r\n            new DataTableHeaderValue(\"transferReason\"),\r\n            new DataTableHeaderValue(\"entranceCertificateScore\"),\r\n            new DataTableHeaderValue(\"leaveSchool\"),\r\n            new DataTableHeaderValue(\"leaveReason\"),\r\n            new DataTableHeaderValue(\"educationFinished\"),\r\n            new DataTableHeaderValue(\"graduationDateMts\"),\r\n            new DataTableHeaderValue(\"certificateNumberMts\"),\r\n            new DataTableHeaderValue(\"seniorLevelSchool\"),\r\n            new DataTableHeaderValue(\"graduationDateMa\"),\r\n            new DataTableHeaderValue(\"certificateNumberMa\"),\r\n            new DataTableHeaderValue(\"graduationCeremonyDate\"),\r\n            new DataTableHeaderValue(\"highEducationUniv\"),\r\n            new DataTableHeaderValue(\"highEducationMajor\"),\r\n            new DataTableHeaderValue(\"workDate\"),\r\n            new DataTableHeaderValue(\"workCompany\"),\r\n        ]\r\n    }\r\n    \r\n    render(): ReactNode {\r\n\r\n        if (this.state.showForm && this.state.item)  {\r\n            return (\r\n                <ViewTemplate title={this.title} back=\"/admin\">\r\n                    {this.closeFormButton}\r\n                    <FormEdit item={this.state.item} handleInputChange={this.handleInputChange} onSubmit={this.formEditSubmit} />\r\n                </ViewTemplate>\r\n            );\r\n        }\r\n        \r\n        const result = this.state.result;\r\n        const items = result?.items;\r\n        return (\r\n            <ViewTemplate title={this.title} back=\"/admin\">\r\n                {this.showFormButton}\r\n                {result == undefined || items == undefined ?\r\n                    <i>Loading...</i> :\r\n                    <div className=\"mt-5 pl-3 pr-3\" style={{overflow: 'auto'}}>\r\n                       {this.paginationButton}\r\n                        <table className=\"commonDataTable table table-striped\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>No</th>\r\n                                    {this.getDataTableHeaderComponent()}\r\n                                    <th>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {items.map((item, i) => {\r\n                                    return (\r\n                                        <tr key={\"Student-\" + item.id}>\r\n                                            <td>{this.startingNumber + i}</td>\r\n                                            <td>{item.nisKiis}</td>\r\n                                            <td>{item.nisn}</td>\r\n                                            <td>{item.user.fullName}</td>\r\n                                            <td>{new Date(item.user.birthDate).toLocaleDateString()}</td>\r\n                                            <td>{item.user.birthPlace}</td>\r\n                                            <td>{item.address}</td>\r\n                                            <td>{item.city}</td>\r\n                                            <td>{item.province}</td>\r\n                                            <td>{item.siblingNum}</td>\r\n                                            <td>{item.siblingCount}</td>\r\n                                            <td>{item.fatherName}</td>\r\n                                            <td>{new Date(item.fatherBirthDate).toLocaleDateString()}</td>\r\n                                            <td>{item.fatherBirthPlace}</td>\r\n                                            <td>{item.fatherEducation}</td>\r\n                                            <td>{item.fatherPhoneNumber}</td>\r\n                                            <td>{item.fatherOccupation}</td>\r\n                                            <td>{item.fatherAddress}</td>\r\n                                            <td>{item.fatherIncome}</td>\r\n                                            <td>{item.motherName}</td>\r\n                                            <td>{new Date(item.motherBirthDate).toLocaleDateString()}</td>\r\n                                            <td>{item.motherBirthPlace}</td>\r\n                                            <td>{item.motherEducation}</td>\r\n                                            <td>{item.motherPhoneNumber}</td>\r\n                                            <td>{item.motherOccupation}</td>\r\n                                            <td>{item.motherAddress}</td>\r\n                                            <td>{item.motherIncome}</td>\r\n                                            <td>{item.originSchool}</td>\r\n                                            <td>{item.sttbNumber}</td>\r\n                                            <td>{new Date(item.entranceDate).toLocaleDateString()}</td>\r\n                                            <td>{item.entranceClass}</td>\r\n                                            <td>{item.transferFrom}</td>\r\n                                            <td>{item.transferReason}</td>\r\n                                            <td>{item.entranceCertificateScore}</td>\r\n                                            <td>{item.leaveSchool ? \"True\" : \"False\"}</td>\r\n                                            <td>{item.leaveReason}</td>\r\n                                            <td>{item.educationFinished ? \"True\" : \"False\"}</td>\r\n                                            <td>{new Date(item.graduationDateMts).toLocaleDateString()}</td>\r\n                                            <td>{item.certificateNumberMts}</td>\r\n                                            <td>{item.seniorLevelSchool}</td>\r\n                                            <td>{new Date(item.graduationDateMa).toLocaleDateString()}</td>\r\n                                            <td>{item.certificateNumberMa}</td>\r\n                                            <td>{new Date(item.graduationCeremonyDate).toLocaleDateString()}</td>\r\n                                            <td>{item.highEducationUniv}</td>\r\n                                            <td>{item.highEducationMajor}</td>\r\n                                            <td>{new Date(item.workDate).toLocaleDateString()}</td>\r\n                                            <td>{item.workCompany}</td>\r\n\r\n                                            <td>\r\n                                                {this.actionButton(item)}\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                })}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>}\r\n            </ViewTemplate>\r\n        )\r\n    }\r\n}\r\n\r\nexport default commonWrapper(StudentsPage);\r\n\r\nconst FormEdit = (props:{\r\n    item:Student, \r\n    onSubmit:(e:FormEvent) => any, \r\n    handleInputChange:(e:ChangeEvent)=>any\r\n}) => {\r\n    const item      = props.item;\r\n    const onChange  = props.handleInputChange;\r\n    return (\r\n        <div className=\"mx-2 py-2\">\r\n            <form onSubmit={props.onSubmit}>\r\n                <p>Full Name</p>\r\n                <input className=\"form-control\" id=\"item.user.fullName\" name=\"item.user.fullName\" value={item.user.fullName}  onChange={onChange} required/>\r\n                <p>Email</p>\r\n                <input className=\"form-control\" id=\"item.user.email\" name=\"item.user.email\" type=\"email\" value={item.user.email}  onChange={onChange} required/>\r\n                <p>Gender</p>\r\n                <select className=\"form-control\" value={item.user.gender} id=\"item.user.gender\" name=\"item.user.gender\" onChange={onChange} required>\r\n                    <option  >MALE</option>\r\n                    <option  >FEMALE</option>\r\n                </select>\r\n                <p>Birth Date</p>\r\n                <input type=\"date\" className=\"form-control\" id=\"item.user.birthDate\" name=\"item.user.birthDate\" value={getInputReadableDate(new Date(item.user.birthDate))} onChange={onChange} required/>\r\n                <p>Birth Place</p>\r\n                <input className=\"form-control\" id=\"item.user.birthPlace\" name=\"item.user.birthPlace\" value={item.user.birthPlace} onChange={onChange} required/>\r\n                <p>nisKiis</p>\r\n                <input required placeholder=\"nisKiis\" className=\"form-control\" name=\"item.nisKiis\" id=\"item.nisKiis\" value={item.nisKiis} onChange={onChange}/>\r\n                <p>nisn</p>\r\n                <input required placeholder=\"nisn\" className=\"form-control\" name=\"item.nisn\" id=\"item.nisn\" value={item.nisn} onChange={onChange}/>\r\n                <p>address</p>\r\n                <textarea required placeholder=\"address\" className=\"form-control\" name=\"item.address\" id=\"item.address\" value={item.address} onChange={onChange}/>\r\n                <p>city</p>\r\n                <input required placeholder=\"city\" className=\"form-control\" name=\"item.city\" id=\"item.city\" value={item.city} onChange={onChange}/>\r\n                <p>province</p>\r\n                <input required placeholder=\"province\" className=\"form-control\" name=\"item.province\" id=\"item.province\" value={item.province} onChange={onChange}/>\r\n                <p>siblingNum</p>\r\n                <input type=\"number\" placeholder=\"siblingNum\" className=\"form-control\" name=\"item.siblingNum\" id=\"item.siblingNum\" value={item.siblingNum} onChange={onChange}/>\r\n                <p>siblingCount</p>\r\n                <input type=\"number\" placeholder=\"siblingCount\" className=\"form-control\" name=\"item.siblingCount\" id=\"item.siblingCount\" value={item.siblingCount} onChange={onChange}/>\r\n                <p>fatherName</p>\r\n                <input placeholder=\"fatherName\" className=\"form-control\" name=\"item.fatherName\" id=\"item.fatherName\" value={item.fatherName} onChange={onChange}/>\r\n                <p>fatherBirthDate</p>\r\n                <input placeholder=\"fatherBirthDate\" className=\"form-control\" name=\"item.fatherBirthDate\" id=\"item.fatherBirthDate\" type=\"date\" value={getInputReadableDate(new Date(item.fatherBirthDate))} onChange={onChange}/>\r\n                <p>fatherBirthPlace</p>\r\n                <input placeholder=\"fatherBirthPlace\" className=\"form-control\" name=\"item.fatherBirthPlace\" id=\"item.fatherBirthPlace\" value={item.fatherBirthPlace} onChange={onChange}/>\r\n                <p>fatherEducation</p>\r\n                <input placeholder=\"fatherEducation\" className=\"form-control\" name=\"item.fatherEducation\" id=\"item.fatherEducation\" value={item.fatherEducation} onChange={onChange}/>\r\n                <p>fatherPhoneNumber</p>\r\n                <input placeholder=\"fatherPhoneNumber\" className=\"form-control\" name=\"item.fatherPhoneNumber\" id=\"item.fatherPhoneNumber\" value={item.fatherPhoneNumber} onChange={onChange}/>\r\n                <p>fatherOccupation</p>\r\n                <input placeholder=\"fatherOccupation\" className=\"form-control\" name=\"item.fatherOccupation\" id=\"item.fatherOccupation\" value={item.fatherOccupation} onChange={onChange}/>\r\n                <p>fatherAddress</p>\r\n                <textarea placeholder=\"fatherAddress\" className=\"form-control\" name=\"item.fatherAddress\" id=\"item.fatherAddress\" value={item.fatherAddress} onChange={onChange}/>\r\n                <p>fatherIncome</p>\r\n                <input type=\"number\" placeholder=\"fatherIncome\" className=\"form-control\" name=\"item.fatherIncome\" id=\"item.fatherIncome\" value={item.fatherIncome} onChange={onChange}/>\r\n                <p>motherName</p>\r\n                <input placeholder=\"motherName\" className=\"form-control\" name=\"item.motherName\" id=\"item.motherName\" value={item.motherName} onChange={onChange}/>\r\n                <p>motherBirthDate</p>\r\n                <input placeholder=\"motherBirthDate\" className=\"form-control\" name=\"item.motherBirthDate\" id=\"item.motherBirthDate\" type=\"date\" value={getInputReadableDate(new Date(item.motherBirthDate))} onChange={onChange}/>\r\n                <p>motherBirthPlace</p>\r\n                <input placeholder=\"motherBirthPlace\" className=\"form-control\" name=\"item.motherBirthPlace\" id=\"item.motherBirthPlace\" value={item.motherBirthPlace} onChange={onChange}/>\r\n                <p>motherEducation</p>\r\n                <input placeholder=\"motherEducation\" className=\"form-control\" name=\"item.motherEducation\" id=\"item.motherEducation\" value={item.motherEducation} onChange={onChange}/>\r\n                <p>motherPhoneNumber</p>\r\n                <input placeholder=\"motherPhoneNumber\" className=\"form-control\" name=\"item.motherPhoneNumber\" id=\"item.motherPhoneNumber\" value={item.motherPhoneNumber} onChange={onChange}/>\r\n                <p>motherOccupation</p>\r\n                <input placeholder=\"motherOccupation\" className=\"form-control\" name=\"item.motherOccupation\" id=\"item.motherOccupation\" value={item.motherOccupation} onChange={onChange}/>\r\n                <p>motherAddress</p>\r\n                <textarea placeholder=\"motherAddress\" className=\"form-control\" name=\"item.motherAddress\" id=\"item.motherAddress\" value={item.motherAddress} onChange={onChange}/>\r\n                <p>motherIncome</p>\r\n                <input type=\"number\" placeholder=\"motherIncome\" className=\"form-control\" name=\"item.motherIncome\" id=\"item.motherIncome\" value={item.motherIncome} onChange={onChange}/>\r\n                <p>originSchool</p>\r\n                <input placeholder=\"originSchool\" className=\"form-control\" name=\"item.originSchool\" id=\"item.originSchool\" value={item.originSchool} onChange={onChange}/>\r\n                <p>sttbNumber</p>\r\n                <input placeholder=\"sttbNumber\" className=\"form-control\" name=\"item.sttbNumber\" id=\"item.sttbNumber\" value={item.sttbNumber} onChange={onChange}/>\r\n                <p>entranceDate</p>\r\n                <input placeholder=\"entranceDate\" className=\"form-control\" name=\"item.entranceDate\" id=\"item.entranceDate\" type=\"date\" value={getInputReadableDate(new Date(item.entranceDate))} onChange={onChange}/>\r\n                <p>entranceClass</p>\r\n                <input placeholder=\"entranceClass\" className=\"form-control\" name=\"item.entranceClass\" id=\"item.entranceClass\" value={item.entranceClass} onChange={onChange}/>\r\n                <p>transferFrom</p>\r\n                <input placeholder=\"transferFrom\" className=\"form-control\" name=\"item.transferFrom\" id=\"item.transferFrom\" value={item.transferFrom} onChange={onChange}/>\r\n                <p>transferReason</p>\r\n                <input placeholder=\"transferReason\" className=\"form-control\" name=\"item.transferReason\" id=\"item.transferReason\" value={item.transferReason} onChange={onChange}/>\r\n                <p>entranceCertificateScore</p>\r\n                <input placeholder=\"entranceCertificateScore\" className=\"form-control\" name=\"item.entranceCertificateScore\" id=\"item.entranceCertificateScore\" value={item.entranceCertificateScore} onChange={onChange}/>\r\n                \r\n                <div className=\"form-check\">\r\n                    <input placeholder=\"leaveSchool\" className=\"form-check-input\" name=\"item.leaveSchool\" id=\"item.leaveSchool\" type=\"checkbox\" checked={item.leaveSchool} onChange={onChange} />\r\n                    <label className=\"form-check-label\">\r\n                        Leave School\r\n                    </label>\r\n                </div>\r\n                \r\n                <p>leaveReason</p>\r\n                <textarea placeholder=\"leaveReason\" className=\"form-control\" name=\"item.leaveReason\" id=\"item.leaveReason\" value={item.leaveReason} onChange={onChange}/>\r\n                <div className=\"form-check\">\r\n                    <input placeholder=\"educationFinished\" className=\"form-check-input\" name=\"item.educationFinished\" id=\"item.educationFinished\" type=\"checkbox\" checked={item.educationFinished} onChange={onChange}/>    \r\n                    <label className=\"form-check-label\">\r\n                        Education Finished\r\n                    </label>\r\n                </div>\r\n                <p>graduationDateMts</p>\r\n                <input placeholder=\"graduationDateMts\" className=\"form-control\" name=\"item.graduationDateMts\" id=\"item.graduationDateMts\" type=\"date\" value={getInputReadableDate(new Date(item.graduationDateMts))} onChange={onChange}/>\r\n                <p>certificateNumberMts</p>\r\n                <input placeholder=\"certificateNumberMts\" className=\"form-control\" name=\"item.certificateNumberMts\" id=\"item.certificateNumberMts\" value={item.certificateNumberMts} onChange={onChange}/>\r\n                <p>seniorLevelSchool</p>\r\n                <input placeholder=\"seniorLevelSchool\" className=\"form-control\" name=\"item.seniorLevelSchool\" id=\"item.seniorLevelSchool\" value={item.seniorLevelSchool} onChange={onChange}/>\r\n                <p>graduationDateMa</p>\r\n                <input placeholder=\"graduationDateMa\" className=\"form-control\" name=\"item.graduationDateMa\" id=\"item.graduationDateMa\" type=\"date\" value={getInputReadableDate(new Date(item.graduationDateMa))} onChange={onChange}/>\r\n                <p>certificateNumberMa</p>\r\n                <input placeholder=\"certificateNumberMa\" className=\"form-control\" name=\"item.certificateNumberMa\" id=\"item.certificateNumberMa\" value={item.certificateNumberMa} onChange={onChange}/>\r\n                <p>graduationCeremonyDate</p>\r\n                <input placeholder=\"graduationCeremonyDate\" className=\"form-control\" name=\"item.graduationCeremonyDate\" id=\"item.graduationCeremonyDate\" type=\"date\" value={getInputReadableDate(new Date(item.graduationCeremonyDate))} onChange={onChange}/>\r\n                <p>highEducationUniv</p>\r\n                <input placeholder=\"highEducationUniv\" className=\"form-control\" name=\"item.highEducationUniv\" id=\"item.highEducationUniv\" value={item.highEducationUniv} onChange={onChange}/>\r\n                <p>highEducationMajor</p>\r\n                <input placeholder=\"highEducationMajor\" className=\"form-control\" name=\"item.highEducationMajor\" id=\"item.highEducationMajor\" value={item.highEducationMajor} onChange={onChange}/>\r\n                <p>workDate</p>\r\n                <input placeholder=\"workDate\" className=\"form-control\" name=\"item.workDate\" id=\"item.workDate\" type=\"date\" value={getInputReadableDate(new Date(item.workDate))} onChange={onChange}/>\r\n                <p>workCompany</p>\r\n                <input placeholder=\"workCompany\" className=\"form-control\" name=\"item.workCompany\" id=\"item.workCompany\" value={item.workCompany} onChange={onChange}/>\r\n\r\n                <p></p>\r\n                <input className=\"btn btn-primary\" value=\"Save\" type=\"submit\" />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","\nimport BaseModel from './BaseModel';\nimport Student from './Student';\nimport ClassLevel from './ClassLevel';\nexport default class ClassMember extends BaseModel{\n    student: Student = new Student();\n    classLevel: ClassLevel = new ClassLevel();\n}","import { resolve } from \"inversify-react\";\r\nimport { ChangeEvent, FormEvent, ReactNode } from \"react\";\r\nimport RestClient from \"../../apiClients/RestClient\";\r\nimport ActionButton from \"../../components/buttons/ActionButton\";\r\nimport { ViewTemplate } from \"../../layout/ViewTemplate\";\r\nimport BaseMasterDataState from '../../models/BaseMasterDataState';\r\nimport BaseProps from '../../models/BaseProps';\r\nimport ClassMember from \"../../models/ClassMember\";\r\nimport Settings from \"../../settings\";\r\nimport { commonWrapper } from \"../../utils/commonWrapper\";\r\nimport { DataTableHeaderValue } from \"../../utils/componentUtil\";\r\nimport ControlledComponent from \"../ControlledComponent\";\r\nimport ClassLevel from './../../models/ClassLevel';\r\nimport Student from './../../models/Student';\r\nimport MasterDataService from './../../services/MasterDataService';\r\nimport ToastService from './../../services/ToastService';\r\nimport BaseMasterDataPage from \"./BaseMasterDataPage\";\r\n\r\nclass State extends BaseMasterDataState<ClassMember>\r\n{\r\n\r\n}\r\nclass ClassMembersPage extends BaseMasterDataPage<ClassMember, BaseProps, State>\r\n{\r\n    \r\n    constructor(props: BaseProps) {\r\n        super(props, \"classmembers\", \"Class Member Management\");\r\n        this.state = new State();\r\n    }\r\n    get defaultItem(): ClassMember { return new ClassMember() }\r\n    getDataTableHeaderVals(): DataTableHeaderValue[] {\r\n        return [\r\n            new DataTableHeaderValue(\"student.user.fullName\", \"Name\"),\r\n            new DataTableHeaderValue(\"classLevel.level\", \"Class\"),\r\n            new DataTableHeaderValue(\"classLevel.letter\", \"Letter\"),\r\n            new DataTableHeaderValue(\"classLevel.school.name\", \"School\"),\r\n            new DataTableHeaderValue(\"classLevel.semesterPeriod.semester\", \"Semester\"),\r\n            new DataTableHeaderValue(\"classLevel.semesterPeriod.year\", \"Year\"),\r\n            new DataTableHeaderValue(\"classLevel.active\", \"Semester Active\", false),\r\n        ]\r\n    }\r\n    \r\n    render(): ReactNode {\r\n\r\n        if (this.state.showForm && this.state.item)  {\r\n            return (\r\n                <ViewTemplate title={this.title} back=\"/admin\">\r\n                    {this.closeFormButton}\r\n                    <FormEdit item={this.state.item} handleInputChange={this.handleInputChange} onSubmit={this.formEditSubmit} />\r\n                </ViewTemplate>\r\n            );\r\n        }\r\n        \r\n        const result = this.state.result;\r\n        const items = result?.items;\r\n        return (\r\n            <ViewTemplate title={this.title} back=\"/admin\">\r\n                {this.showFormButton}\r\n                {result == undefined || items == undefined ?\r\n                    <i>Loading...</i> :\r\n                    <div className=\"mt-5 pl-3 pr-3\" style={{overflow: 'auto'}}>\r\n                       {this.paginationButton}\r\n                        <table className=\"commonDataTable table table-striped\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>No</th>\r\n                                    {this.getDataTableHeaderComponent()}\r\n                                    <th>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {items.map((item, i) => {\r\n                                    return (\r\n                                        <tr key={\"ClassMember-\" + item.id}>\r\n                                            <td>{this.startingNumber + i}</td>\r\n                                            <td>{item.student.user.fullName}</td>\r\n                                            <td>{item.classLevel.level}</td>\r\n                                            <td>{item.classLevel.letter}</td>\r\n                                            <td>{item.classLevel.school.name}</td>\r\n                                            <td>{item.classLevel.semester}</td>\r\n                                            <td>{item.classLevel.year}</td>\r\n                                            <td>\r\n                                                {item.classLevel.semesterActive ? <b className=\"text-success\">active</b> : <i>not active</i>}\r\n                                            </td>\r\n                                            <td>\r\n                                                {item.classLevel.semesterActive ? this.actionButton(item) : null}\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                })}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>}\r\n            </ViewTemplate>\r\n        )\r\n    }\r\n}\r\n\r\nexport default commonWrapper(ClassMembersPage);\r\ntype FormEditProps = {\r\n    item:ClassMember, \r\n    onSubmit:(e: FormEvent) => any, \r\n    handleInputChange:(e:ChangeEvent)=>any\r\n};\r\ntype FormEditState = {\r\n    students: Student[];\r\n    classes: ClassLevel[];\r\n\r\n    searchStudent?: string;\r\n}\r\nclass FormEdit extends ControlledComponent<FormEditProps, FormEditState> {\r\n    @resolve(MasterDataService)\r\n    private masterDataService: MasterDataService;\r\n    @resolve(RestClient)\r\n    private rest: RestClient;\r\n    @resolve(ToastService)\r\n    private toast: ToastService;\r\n\r\n    constructor(props:FormEditProps) {\r\n        super(props);\r\n        this.state = {\r\n            students: [],\r\n            classes: [],\r\n            searchStudent: props.item?.student?.user?.fullName\r\n        };\r\n    }\r\n\r\n    componentDidMount() { this.loadClasses(); }\r\n\r\n    loadClasses = () => {\r\n        const URL_GET_ACTIVE_CLASSES = Settings.App.hosts.api +\"/api/admin/management/classlevels/active\";\r\n        this.rest.getAuthorized<ClassLevel[]>(URL_GET_ACTIVE_CLASSES)\r\n            .then(this.handleClassLoaded)\r\n            .catch(err => this.toast.showDanger(\"Failed to load classes\"));\r\n    }\r\n\r\n    handleClassLoaded = (classes: ClassLevel[]) => {\r\n        if (!classes || classes.length == 0) {\r\n            this.toast.showDanger(\"No class found this semester\");\r\n            return;\r\n        }\r\n        this.props.item.classLevel = classes[0];\r\n        this.setState({ classes: classes });\r\n    }\r\n\r\n    loadStudents = () => {\r\n        const search = this.state.searchStudent;\r\n        if (!search) {\r\n            return;\r\n        }\r\n        this.masterDataService.list<Student>('students', 0, 10, 'user.fullName', false, 'user.fullName:' + search)\r\n            .then(response => {\r\n                this.handleStudentLoaded(response.items);\r\n            })\r\n            .catch((e) => this.toast.showDanger(\"Failed to load students\"));\r\n    }\r\n    handleStudentLoaded = (items:Student[]) => {\r\n        if (!items || items.length == 0) {\r\n            this.toast.showDanger(\"No student containing name \\\"\" + this.state.searchStudent + \"\\\" was found\");\r\n            return;\r\n        }\r\n        this.setState({ students: items });\r\n    }\r\n    \r\n    closeStudentDropdown = () => this.setState({ students: [] });\r\n    setSelectedStudent = (item:Student) => {\r\n        this.props.item.student = item;\r\n        this.setState({ searchStudent: item.user.fullName }, this.closeStudentDropdown);\r\n    }\r\n\r\n    setSelectedClass = (item:ClassLevel) => {\r\n        this.props.item.classLevel = item;\r\n    }\r\n\r\n    submitForm = (e:FormEvent) => {\r\n        e.preventDefault();\r\n        const { item } = this.props;\r\n        if (!item.student || item.student.id < 1 || !item.classLevel || item.classLevel.id < 1) {\r\n            this.toast.showDanger(\"Please select student and class correctly\");\r\n            return;\r\n        }\r\n        this.props.onSubmit(e);\r\n    }\r\n\r\n    render() {\r\n        const students = this.state.students;\r\n        return (\r\n            <div className=\"mx-2 py-2\">\r\n                <form onSubmit={(e) => {\r\n                    e.preventDefault();\r\n                    this.loadStudents();\r\n                }}>\r\n                    <p>Student</p>\r\n                    <div className=\"input-group\">\r\n                        <input \r\n                            type=\"search\"\r\n                            className=\"form-control\" \r\n                            name=\"searchStudent\" \r\n                            value={this.state.searchStudent}\r\n                            placeholder=\"Full Name\"\r\n                            onChange={this.handleInputChange} \r\n                            required />\r\n                        <div className=\"input-group-append\">\r\n                            <input type=\"submit\" className=\"btn btn-primary\" value={\"Search\"}/>\r\n                        </div>\r\n                    </div>\r\n                        \r\n                    <div style={{position: 'absolute',width:'75%'}}>\r\n                        { students.length > 0 ?\r\n\r\n                        <div className=\"bg-light border border-dark px-2 py-1 w-100\" style={{position: 'relative'}}>\r\n                            <ActionButton className=\"btn btn-text btn-sm\" iconClass=\"fas fa-times\" onClick={this.closeStudentDropdown}>\r\n                                close\r\n                            </ActionButton>\r\n                            <div style={{overflowY:'auto', height: '100px'}}>\r\n                                <div className=\"no-wrap\" style={{ width: 'max-content' }}>\r\n                                    {students.map(e => {\r\n                                        return (\r\n                                            <div key={\"set-emp-\"+e.id}>\r\n                                                <a className=\"btn btn-text clickable\" onClick={()=>this.setSelectedStudent(e)}>\r\n                                                    {e.user.fullName.trim()}\r\n                                                </a>\r\n                                            </div>\r\n                                        );\r\n                                    })}\r\n                                </div>\r\n                            </div>\r\n                        </div> : null }\r\n\r\n                    </div>\r\n                \r\n                </form>\r\n                <form onSubmit={this.submitForm}>\r\n                    <p>Active Class Level</p>\r\n                    <select className=\"form-control\" >\r\n                        {this.state.classes.map(item => {\r\n                            return (\r\n                                <option key={\"select-class-\"+item.id} onClick={(e) => this.setSelectedClass(item)}>\r\n                                    {item.level}{item.letter} - {item.school.name}\r\n                                </option>\r\n                            )\r\n                        })}\r\n                    </select>\r\n                    <p></p>\r\n                    <input type=\"submit\" className=\"btn btn-success\" value=\"Save\" />\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import { resolve } from 'inversify-react';\r\nimport React, { Component, Fragment } from 'react'\r\nimport { Navigate, Route, Routes } from 'react-router-dom';\r\nimport BaseProps from '../models/BaseProps';\r\nimport EmployeesPage from '../pages/admin/EmployeesPage';\r\nimport MainAdminPage from '../pages/admin/MainAdminPage';\r\nimport SchoolsPage from '../pages/admin/SchoolsPage';\r\nimport UsersPage from '../pages/admin/UsersPage';\r\nimport LoginPage from '../pages/auth/LoginPage';\r\nimport { ErrorView } from '../pages/error/ErrorView';\r\nimport Home from '../pages/home/Home';\r\nimport Dashboard from '../pages/user/Dashboard';\r\nimport EditProfile from '../pages/user/EditProfile';\r\nimport AuthService from './../services/AuthService';\r\nimport RoutingService from './../services/RoutingService';\r\nimport AuthorityType from './../constants/AuthorityType';\r\nimport SemesterPeriodsPage from '../pages/admin/SemesterPeriodsPage';\r\nimport ClassLevelsPage from '../pages/admin/ClassLevelsPage';\r\nimport StudentsPage from '../pages/admin/StudentsPage';\r\nimport ClassMembersPage from '../pages/admin/ClassMembersPage';\r\n\r\nexport class Routing extends Component<BaseProps, any>\r\n{\r\n    @resolve(AuthService)\r\n    private authService: AuthService;\r\n    @resolve(RoutingService)\r\n    private routingService: RoutingService;\r\n\r\n    render(): React.ReactNode {\r\n        return (\r\n            <Fragment>\r\n\r\n                <Routes>\r\n                    <Route path=\"/\" element={<Home />} />\r\n                    <Route path=\"/home\" element={<Home />} />\r\n\r\n                    <Route path=\"/login\" element={\r\n                        <RestrictedRouteElement disabledWhenLoggedIn={true} to=\"/login\" element={<LoginPage/>} />\r\n                    } />\r\n\r\n                    <Route path=\"/dashboard\" element={\r\n                       <RestrictedRouteElement to=\"/dashboard\" element={<Dashboard /> } /> \r\n                    } />\r\n                    <Route path=\"/profile\" element={\r\n                        <RestrictedRouteElement to='/profile' element={<EditProfile />} />\r\n                    } />\r\n\r\n                    <Route path=\"/admin\" element={\r\n                        <RestrictedRouteElement to=\"/admin\" element={<MainAdminPage/>} requiredRole={'ROLE_SUPERADMIN'} />\r\n                    } />\r\n                    <Route path=\"/admin/users\" element={\r\n                        <RestrictedRouteElement to=\"/admin/users\" element={<UsersPage/>} requiredRole={'ROLE_SUPERADMIN'} />\r\n                    } />\r\n                    <Route path=\"/admin/schools\" element={\r\n                        <RestrictedRouteElement to=\"/admin/schools\" element={<SchoolsPage/>} requiredRole={'ROLE_SUPERADMIN'} />\r\n                    } />\r\n                    <Route path=\"/admin/employees\" element={\r\n                        <RestrictedRouteElement to=\"/admin/employees\" element={<EmployeesPage/>} requiredRole={'ROLE_SUPERADMIN'} />\r\n                    } />\r\n                    <Route path=\"/admin/semesterperiods\" element={\r\n                        <RestrictedRouteElement to=\"/admin/semesterperiods\" element={<SemesterPeriodsPage/>} requiredRole={'ROLE_SUPERADMIN'} />\r\n                    } />\r\n                    <Route path=\"/admin/classlevels\" element={\r\n                        <RestrictedRouteElement to=\"/admin/classlevels\" element={<ClassLevelsPage/>} requiredRole={'ROLE_SUPERADMIN'} />\r\n                    } />\r\n                    <Route path=\"/admin/students\" element={\r\n                        <RestrictedRouteElement to=\"/admin/students\" element={<StudentsPage/>} requiredRole={'ROLE_SUPERADMIN'} />\r\n                    } />\r\n                    <Route path=\"/admin/classmembers\" element={\r\n                        <RestrictedRouteElement to=\"/admin/classmembers\" element={<ClassMembersPage/>} requiredRole={'ROLE_SUPERADMIN'} />\r\n                    } />\r\n\r\n                    <Route path=\"*\" element={<ErrorView message=\"The requested page is not found.\" />} />\r\n                </Routes>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nclass RestrictedRouteElement extends Component<{\r\n    to:string, \r\n    element: JSX.Element, \r\n    disabledWhenLoggedIn?:boolean,\r\n    requiredRole?: AuthorityType | AuthorityType[]\r\n}, any> {\r\n\r\n    @resolve(AuthService)\r\n    private authService: AuthService;\r\n    @resolve(RoutingService)\r\n    private routingService: RoutingService;\r\n\r\n    render(): React.ReactNode {\r\n        const loggedIn = this.authService.loggedIn;\r\n\r\n        if (this.props.disabledWhenLoggedIn === true) {\r\n            if (!loggedIn) {\r\n                return this.props.element;\r\n            }\r\n            return (\r\n                <Navigate to=\"/dashboard\" />\r\n            )\r\n        }\r\n        \r\n        if (loggedIn) {\r\n            if (this.props.requiredRole) {\r\n                if (this.authService.loggedUser?.hasAuthorityType(this.props.requiredRole))  {\r\n                    return this.props.element;\r\n                } else {\r\n                    return <Navigate to=\"/\" />\r\n                }\r\n            } else {\r\n                return this.props.element;\r\n            }\r\n        }\r\n        return (\r\n            <CustomNavigate origin={this.props.to} routing={this.routingService} to=\"/\" />\r\n        )\r\n    }\r\n}\r\n\r\ninterface NavigateProps {\r\n    origin: string,\r\n    to: string,\r\n    state?: any,\r\n    replace?: any,\r\n    routing: RoutingService\r\n}\r\nconst CustomNavigate = (props: NavigateProps) => {\r\n    props.routing.setLastRedirectedRoute(props.origin);\r\n    return <Navigate to = { props.to } state = { props.state } replace = { props.replace } />\r\n}","import { Component, ReactNode } from \"react\";\r\nimport { commonWrapper } from './../utils/commonWrapper';\r\nimport User from './../models/User';\r\nimport { resolve } from \"inversify-react\";\r\nimport AuthService from './../services/AuthService';\r\nimport DialogService from './../services/DialogService';\r\nimport BaseProps from './../models/BaseProps';\r\nimport RoutingService from './../services/RoutingService';\r\n\r\ninterface Props  extends BaseProps\r\n{\r\n    user:User\r\n}\r\nclass State \r\n{\r\n    showDropdown: boolean = false;\r\n}\r\nclass UserSection extends Component<Props, State>\r\n{\r\n    state: Readonly<State> = new State();\r\n\r\n    @resolve(AuthService)\r\n    private authService:AuthService;\r\n    @resolve(DialogService)\r\n    private dialog:DialogService;\r\n    @resolve(RoutingService)\r\n    private routing:RoutingService;\r\n\r\n    logout = () => {\r\n        this.dialog.showConfirmDanger(\"Logout\", \"Do you want to logout?\")\r\n            .then(ok => {\r\n                if (ok) {\r\n                    this.authService.logout();\r\n                }\r\n            });\r\n        this.hideDropdown();\r\n    }\r\n    navigate = (e:React.MouseEvent<HTMLAnchorElement>) => {\r\n        const target = e.target as HTMLAnchorElement;\r\n        \r\n        if (target.dataset['to'])\r\n            this.routing.navigate(target.dataset['to']);\r\n        this.hideDropdown();\r\n    }\r\n\r\n    hideDropdown = () => {\r\n        this.setState({showDropdown: false});\r\n    }\r\n    \r\n    toggleDropdown = () => {\r\n        this.setState({ showDropdown: !this.state.showDropdown });\r\n    }\r\n    render(): ReactNode {\r\n\r\n        return (\r\n            <div >\r\n                <a className=\"btn btn-light no-wrap\" onClick={this.toggleDropdown}>\r\n                    <i className=\"fas fa-user mr-3\" /> {this.props.user.displayName}\r\n                </a>\r\n                <div style={{position: 'absolute'}}>\r\n                    { this.state.showDropdown? \r\n                    <div\r\n                        style={{width: '200px', zIndex: 1, position: 'relative'}}\r\n                        className=\"bg-light border border-gray rounded text-left pt-3 pb-3\" >\r\n                        \r\n                        <a className=\"btn btn-text\" onClick={this.navigate} data-to=\"/dashboard\">\r\n                            <i className=\"fas fa-home mr-3\"/>Dashboard\r\n                        </a>\r\n                        <a className=\"btn btn-text\" onClick={this.navigate} data-to=\"/profile\">\r\n                            <i className=\"fas fa-user-cog mr-3\"/>Edit Profile\r\n                        </a>\r\n                        { this.authService.isAdmin ?\r\n                        <a className=\"btn btn-text text-success\" onClick={this.navigate} data-to=\"/admin\">\r\n                            <i className=\"fas fa-tachometer-alt mr-3\"/>Admin Area\r\n                        </a> : null }\r\n                      \r\n                        <a className=\"btn btn-text text-danger\" onClick={this.logout}>\r\n                            <i className=\"fas fa-sign-out-alt mr-3\"/>Logout\r\n                        </a>\r\n                    </div> : null }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default commonWrapper(UserSection);","import { resolve } from \"inversify-react\";\r\nimport React, { FormEvent  } from \"react\";  \r\nimport { Link } from \"react-router-dom\";\r\nimport BaseProps from \"../models/BaseProps\";\r\nimport { commonWrapper } from \"../utils/commonWrapper\";\r\nimport RoutingService from './../services/RoutingService';\r\nimport Settings from './../settings';\r\nimport AuthService from './../services/AuthService';\r\nimport ControlledComponent from \"../pages/ControlledComponent\";\r\nimport UserSection from \"./UserSection\";\r\nimport User from './../models/User';\r\nimport EventService from './../services/EventService';\r\nimport ApplicationProfile from \"../models/ApplicationProfile\";\r\n\r\nclass State {\r\n    activeMenu:string | undefined;\r\n    title:string        = Settings.App.uiSetting.defaultTitle;\r\n    searchKey:string    = \"\";\r\n }\r\n class Props extends BaseProps {\r\n     currentLocation?:Location;\r\n }\r\nclass HeaderView extends ControlledComponent<Props, State>\r\n{\r\n    @resolve(AuthService)\r\n    private authService:AuthService;\r\n    @resolve(RoutingService)\r\n    private routingService:RoutingService;\r\n\r\n    state:State = new State();\r\n\r\n    private _user:User | undefined;\r\n    \r\n    componentDidMount() \r\n    {\r\n        this.routingService.registerCallback(\"header\", console.log);\r\n        this.authService.addOnUserUpdated(\"header\", this.onUserUpdated);\r\n        this.authService.addOnAppProfileUpdated(\"header\", this.onAppProfileUpdated);\r\n    }\r\n    componentWillUnmount()\r\n    {\r\n        this.authService.removeOnUserUpdated(\"header\");\r\n        this.authService.removeOnAppProfileUpdated(\"header\");\r\n    }\r\n    gotoLoginPage = () => {\r\n        if (this.props.navigate)\r\n        {\r\n            this.props.navigate(\"/login\");\r\n        }\r\n    }\r\n    onUserUpdated = (user: User | undefined) => {\r\n        if (this._user != undefined && user == undefined)\r\n        {\r\n            this.gotoLoginPage();\r\n        }\r\n        this._user = user;\r\n        this.forceUpdate();\r\n    }\r\n    onAppProfileUpdated = (val: ApplicationProfile | undefined) => {\r\n        this.forceUpdate();\r\n    }\r\n\r\n    private navigate = (url:string) => {\r\n        if (this.props.navigate == undefined)\r\n        {\r\n            console.warn(\"no props: navigate\");\r\n            return;\r\n        }\r\n        this.props.navigate(url);\r\n    }\r\n\r\n    brandOnClick = () => {\r\n       this.navigate(\"/\");\r\n    }\r\n    get semesterInfo() {\r\n        const appProfile = this.authService.appProfile;\r\n        if (appProfile && appProfile.semester && appProfile.semester) {\r\n            return \"Semester \" + appProfile.semester + \" | \" + appProfile.year;\r\n        }\r\n        return undefined;\r\n    }\r\n    render() {\r\n        const title = this.authService.appProfile ? this.authService.appProfile.name : this.state.title;\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row w-100 mt-2\">\r\n                        <div className=\"col-md-2 mb-2 text-center d-flex\" style={{alignItems: 'center'}}>\r\n                            <img src=\"/kiis-stroke.png\" width={50} className=\"mr-2\" />\r\n                            <div className={\"text-left\"}>\r\n                                <Link className=\"navbar-brand\" to=\"/\">{title}</Link>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-7 mb-2 d-flex text-center text-secondary\" style={{alignItems: 'center'}}>\r\n                            <p style={{margin: 'auto'}}>{this.semesterInfo}</p>\r\n                        </div>\r\n                        <div className=\"col-md-2 mb-2 text-center\">\r\n                            { !this.authService.loggedIn?\r\n                            <Link to=\"/login\" className=\"btn btn-primary\">\r\n                               <i className=\"fas fa-sign-in-alt mr-2\"/> Login\r\n                            </Link>\r\n                            : \r\n                            <UserSection user={this.authService.loggedUser}/> }\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </nav>\r\n        )\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default commonWrapper(HeaderView);\r\n\r\n\r\n","import React, { Component, Fragment } from 'react'\r\nimport { DialogType } from '../../constants/DialogType';\r\nimport Settings from '../../settings';\r\nimport { invokeLater } from '../../utils/eventUtil';\r\n\r\ntype ButtonRef              = React.RefObject< HTMLButtonElement >;\r\nconst initialMargin         = '-560px';\r\nconst transitionDuration    = '250ms';\r\nconst BACK_COLOR            = 'rgba(100,100,100,0.7)';\r\n\r\nclass State {\r\n    backColor: string = 'transparent';\r\n    marginTop: string = initialMargin;\r\n}\r\ninterface Props \r\n{\r\n    onConfirm:(arg:any)=>any;\r\n    onCancel:(arg:any)=>any;\r\n    onClose:(arg:any)=>any;\r\n\r\n    type:DialogType;\r\n    yesOnly:boolean;\r\n    yesLabel:string;\r\n\r\n    title?:string;\r\n\r\n    children:any;\r\n}\r\nclass Dialog extends Component<Props, State> {\r\n    yesButton:ButtonRef     = React.createRef();\r\n    cancelButton:ButtonRef  = React.createRef();\r\n    state:State             = new State();\r\n\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n    onConfirm = (e:any) => {        \r\n        this.close(()=>{\r\n            this.props.onConfirm(e);\r\n        });\r\n    }\r\n    close = (callback:()=>any)=> {\r\n        invokeLater(()=>{\r\n            this.setState({ backColor:'transparent', marginTop: initialMargin }, ()=>{\r\n                invokeLater(callback, 100);\r\n            });\r\n        }, 100);\r\n    }\r\n    onCancel = (e:any) => {\r\n        this.close(()=>{\r\n            if (this.props.onCancel) {\r\n                this.props.onCancel(e);\r\n            }\r\n        });\r\n    }\r\n    onClose = (e:any) => {\r\n        this.close(()=>{\r\n            this.props.onClose(e);\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        const focusCancelBtn = this.props.type == DialogType.ERROR || this.props.type == DialogType.WARNING ;\r\n        if (!focusCancelBtn && this.yesButton.current) \r\n        {\r\n            this.yesButton.current.focus();\r\n        } \r\n        else if (focusCancelBtn && this.cancelButton.current) \r\n        {\r\n            this.cancelButton.current.focus();\r\n        }\r\n        else if (focusCancelBtn && this.yesButton.current)\r\n        {\r\n            this.yesButton.current.focus();\r\n        }\r\n\r\n        invokeLater(()=>{\r\n            let marginTop = this.stringContent ? '30vh' : '0vh';\r\n            this.setState({backColor:BACK_COLOR, marginTop: marginTop})\r\n        }, 100);\r\n    }\r\n\r\n    get stringContent() { return typeof this.props.children == \"string\"; }\r\n\r\n    get headerClassName() : string\r\n    {\r\n        switch (this.props.type) {\r\n            case DialogType.INFO:\r\n            case DialogType.INFO_NO_BUTTONS : \r\n                                      return \"bg-info text-light\";\r\n            case DialogType.WARNING : return \"bg-warning text-dark\";\r\n            case DialogType.ERROR   : return \"bg-danger text-light\";\r\n        \r\n            default                 : return \"bg-secondary\";\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const title     = this.props.title ? this.props.title:  \"Info\";\r\n        const yesOnly   = this.props.yesOnly == true;\r\n        const maxWidth  = this.stringContent? '500px': '85vw';\r\n\r\n        const dialogStyle = {\r\n            transitionDuration:  transitionDuration,\r\n            marginTop: this.state.marginTop,\r\n            maxWidth: maxWidth,\r\n            marginLeft: 'auto',\r\n            marginRight: 'auto'\r\n        };\r\n        const modalDialogClass =  this.stringContent ? \"modal-dialog -modal-dialog-centered\" : \"-modal-dialog-centered\";\r\n        return (\r\n            <Fragment>\r\n                <Backdrop bgColor={this.state.backColor} />\r\n                <div \r\n                    className=\"modal show\" \r\n                    style={{ display: 'block' }}  >\r\n                    <div \r\n                        className={modalDialogClass}\r\n                        style={dialogStyle}>\r\n                        <div className=\"modal-content\" style={{marginTop:'5px'}} >\r\n                            <Header \r\n                                className={this.headerClassName} \r\n                                title={title} \r\n                                onClose={this.onClose} />\r\n                            <div className=\"modal-body\" style={{maxHeight: '70vh', overflow: 'auto'}} >{this.props.children}</div>\r\n                            { this.props.type == DialogType.INFO_NO_BUTTONS? \r\n                            <div className={\"modal-footer \"} >\r\n                                <h6 className='w-100 text-center'>{Settings.App.uiSetting.defaultTitle}</h6>\r\n                            </div> :\r\n                            <Footer \r\n                                cancelButton={this.cancelButton} \r\n                                yesLabel={this.props.yesLabel}\r\n                                yesButton={this.yesButton} \r\n                                yesOnly={yesOnly} \r\n                                onConfirm={this.onConfirm} \r\n                                onCancel={this.onCancel} /> }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nfunction Backdrop(props:{bgColor:string}) {\r\n    const style = { transitionDuration:transitionDuration, backgroundColor: props.bgColor };\r\n    return (\r\n        <div className=\"modal-backdrop\" style={style} />\r\n    );\r\n}\r\n\r\nfunction Footer(props:{yesLabel:string, yesButton:ButtonRef, cancelButton:ButtonRef, yesOnly:boolean, onConfirm:(e:any)=>any, onCancel?:(e:any)=>any}) {\r\n    return (\r\n        <div className={\"modal-footer\"} >\r\n            <button \r\n                ref={props.yesButton} \r\n                type=\"button\"\r\n                onClick={props.onConfirm} \r\n                className=\"btn btn-outline-primary\" >\r\n                {props.yesLabel}\r\n            </button>\r\n            {props.yesOnly ? \r\n                null : \r\n                <button \r\n                    ref={props.cancelButton} \r\n                    type=\"button\"\r\n                    onClick={props.onCancel} \r\n                    className=\"btn btn-outline-secondary\" >\r\n                    No\r\n                </button>}\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Header(props:{ title:string, className:string, onClose:(e:any)=>any }) {\r\n    return (\r\n        <div className={\"modal-header \" + props.className} >\r\n            <h5 className=\"modal-title\" id=\"exampleModalCenterTitle\" >{props.title}</h5>\r\n            <button onClick={props.onClose} type=\"button\" className=\"close\" >\r\n                <span><i className=\"fas fa-times\" /></span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialog;","\n\nimport { resolve } from 'inversify-react';\nimport { Component, ReactNode } from 'react';\nimport LoadingService from './services/LoadingService';\nimport LoadingComponent from './interfaces/LoadingComponent';\ntype State = {\n    show: boolean;\n}\nexport default class Loading extends Component<any, State> implements LoadingComponent {\n    \n    @resolve(LoadingService)\n    private service:LoadingService;\n\n    constructor(props:any) {\n        super(props);\n        this.state = {\n            show: false\n        }\n    }\n    startLoading() {\n        this.setState({ show: true });\n    }\n    stopLoading() {\n        this.setState({ show: false });\n    }\n    componentDidMount() {\n        this.service.setComponent(this);\n    }\n    render(): ReactNode {\n        if (!this.state.show) {\n            return null;\n        }\n        return (\n            <div className='loading bg-info border border-dark rounded px-2 py-1 text-center'>\n                <div className='text-light'>Loading</div>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 120 8\" width=\"120\" height=\"8\">\n                    <path fill=\"none\" stroke-width=\"8\" stroke=\"blue\" d=\"M 5 4 L 5 4 L 115 4 \" />\n                    <path className='loading-bar' fill=\"none\" stroke-width=\"6\" stroke=\"yellow\" d=\"M 6 4 L 6 4 L 114 4 \" />\n                </svg>\n\n            </div>\n        )\n    }\n}","\nimport { id } from 'inversify';\nimport { resolve } from 'inversify-react';\nimport { Component, ReactNode } from 'react';\nimport AnchorButton from './components/buttons/AnchorButton';\nimport ToastMode from './constants/ToastMode';\nimport ToastComponent from './interfaces/ToastComponent';\nimport { invokeLater } from './utils/eventUtil';\nimport ToastService from './services/ToastService';\n\n\ntype ToastItem = {\n    id: number;\n    message: string;\n    mode: ToastMode;\n    duration: number;\n}\ntype State = {\n    items: ToastItem[]\n}\n\nexport default class ToastContainer extends Component<any, State> implements ToastComponent {\n    \n    @resolve(ToastService)\n    private service: ToastService;\n\n    static ToastId:number = 1;\n\n    constructor(props:any) {\n        super(props);\n        this.state = {\n            items: []\n        }\n    }\n    componentDidMount() {\n        this.service.setComponent(this);\n    }\n    show = (message: string, mode: ToastMode, duration: number = 5000) => {\n        const { items } = this.state;\n        const id = ToastContainer.ToastId++;\n        items.push({\n            id: id,\n            message: message,\n            mode: mode,\n            duration: duration\n        });\n        this.setState({ items: items }, ()=> {\n            invokeLater(() => {\n                this.closeToast(id)\n            }, duration);\n        });\n    }\n    closeToast = (id:number) => {\n        const { items } = this.state;\n        for (let i = 0; i < items.length; i++) {\n            const element = items[i];\n            if (element.id == id) {\n                items.splice(i, 1);\n                this.setState({ items: items });\n                break;\n            }            \n        }\n    }\n    render(): ReactNode {\n        return (\n             <div className=\"toast-custom \">\n                {this.state.items.map((item, i) => {\n                    return <Toast key={\"toast-\"+i} item={item} onClose={this.closeToast} />\n                })}\n             </div>\n        )\n    }\n}\n\nconst Toast = (props: {item: ToastItem, onClose:(id:number) => any}) => {\n    return (\n        <div className='toast show mb-2'>\n            <div \n                className={`alert alert-${props.item.mode} mb-0 d-flex`}\n                style={{ flexWrap: 'nowrap', alignItems: 'center'}}\n            >\n                <p style={{ margin: 'auto' }}>{props.item.message}</p>\n                <AnchorButton \n                    iconClass='fas fa-times' \n                    className='btn btn-text btn-sm ml-3' \n                    onClick={(e) => props.onClose(props.item.id)}\n                />\n            </div>\n        </div>\n    )\n}","import React, { Component, Fragment, ReactElement, RefObject } from 'react';\r\nimport './App.css'; \r\nimport { Routing } from './layout/Routing';\r\nimport { useLocation, Location } from 'react-router-dom';\r\nimport { resolve } from 'inversify-react';\r\nimport HeaderView from './layout/HeaderView';\r\nimport Dialog from './components/containers/Dialog';\r\nimport { DialogType } from './constants/DialogType';\r\nimport DialogService from './services/DialogService';\r\nimport { Chart as ChartJS, CategoryScale, Legend, LinearScale, LineElement, PointElement, Title, Tooltip } from 'chart.js';\r\n \r\nimport DialogProps from './models/DialogProps';\r\nimport AuthService from './services/AuthService';\r\nimport { invokeLater } from './utils/eventUtil';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { NavigateFunction } from 'react-router-dom';\r\nimport RoutingService from './services/RoutingService';\r\nimport Loading from './Loading';\r\nimport ToastContainer from './ToastContainer';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\n\r\n\r\nfunction App() {\r\n  const loc:Location = useLocation();\r\n  const navigate:NavigateFunction = useNavigate();\r\n  return (\r\n    <Fragment>\r\n      <HeaderView currentLocation={loc}/>\r\n      <Root navigate={navigate}/>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nclass State \r\n{\r\n  loaded:boolean = false;\r\n  loadingError:boolean = false;\r\n}\r\nclass Root extends Component<{navigate:NavigateFunction},State>\r\n{\r\n  @resolve(AuthService)\r\n  private authService:AuthService;\r\n  @resolve(RoutingService)\r\n  private routingService:RoutingService;\r\n\r\n  state: Readonly<State> =new State();\r\n\r\n  componentDidMount()\r\n  {\r\n    this.routingService.setNavigate(this.props.navigate);\r\n    invokeLater(this.load, 100);\r\n  }\r\n  load = () => {\r\n    this.setState({ loadingError: false });\r\n    \r\n    this.authService.loadApplication()\r\n      .then(()=>{\r\n        this.setState({ loaded: true });\r\n      })\r\n      .catch((e)=>{\r\n        console.error(e);\r\n        this.setState({ loadingError: true });\r\n      })\r\n  }\r\n\r\n  render(): React.ReactNode {\r\n\r\n    if (this.state.loadingError == true)\r\n    {\r\n      return (\r\n        <div className='w-100 text-center'>\r\n          <h3 className=\"mt-5 text-danger\">Error while loading content</h3>\r\n          <a className='btn btn-outline-dark btn-sm' onClick={this.load}>\r\n            <i className='fas fa-redo mr-3'></i>\r\n            Reload\r\n          </a>\r\n        </div>\r\n      )\r\n    }\r\n    if (this.state.loaded == false)\r\n    {\r\n      return (<h3 className='mt-5 text-center text-secondary'>Loading content</h3>)\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <DialogContainer/>\r\n        <Routing />\r\n        <Loading />\r\n        <ToastContainer />\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\nclass DialogState\r\n{\r\n  show:boolean = false;\r\n}\r\nexport class DialogContainer extends Component<any,DialogState>\r\n{\r\n  state: Readonly<DialogState> = new DialogState();\r\n  \r\n  // dialog props\r\n  dialogTitle:string;\r\n  dialogContent:any;\r\n  dialogYesOnly:boolean;\r\n\r\n  yesLabel:string = \"Yes\";\r\n\r\n  dialogOnConfirm:(e:any) => any;\r\n  dialogOnCancel:(e:any) => any;\r\n\r\n  onCloseCallback?:(e:any)=>any;\r\n\r\n \r\n  \r\n  dialogType:DialogType = DialogType.INFO;\r\n\r\n  @resolve(DialogService)\r\n  private dialogService:DialogService;\r\n  private ref:RefObject<Dialog> = React.createRef();\r\n\r\n  constructor(props:any)\r\n  {\r\n    super(props);\r\n  }\r\n\r\n  // fired when confirmed/canceled\r\n  public dismissAlert = () => {\r\n    if (this.ref.current)\r\n    {\r\n      this.ref.current.close(()=>{\r\n        this.setState({show:false});\r\n      })\r\n      return;\r\n    }\r\n    this.setState({show:false});\r\n  } \r\n  \r\n  // fired when pressing [X] button\r\n  dialogOnClose = (e:any) => {\r\n    \r\n    this.setState({show: false}, ()=>{\r\n      if (this.onCloseCallback)\r\n      {\r\n        this.onCloseCallback(e);\r\n      }\r\n\r\n      this.resetProps();\r\n    });\r\n  }\r\n  setContent(content:ReactElement<DialogProps, typeof Component >)\r\n  {\r\n    this.dialogContent = content;\r\n    this.forceUpdate();\r\n  }\r\n  componentDidMount()\r\n  {\r\n    this.dialogService.setContainer( this );\r\n  }\r\n  resetProps = () => {\r\n    this.onCloseCallback  = undefined;\r\n    this.yesLabel         = \"Yes\";\r\n  }\r\n  get isShown() { return this.state.show }\r\n  \r\n  public showNoButtons = ( title:string, content:any,  onClose:(e:any) => any, closeObj?:{close:()=>any} ) => {\r\n    this.dialogType     = DialogType.INFO_NO_BUTTONS;\r\n    this.dialogTitle    = title;\r\n    this.dialogContent  = content; \r\n    if (closeObj)\r\n      closeObj.close      = this.dismissAlert;\r\n\r\n    this.display();\r\n  }\r\n  public show = (\r\n    type:DialogType,\r\n    title:string,\r\n    content:any,\r\n    yesOnly:boolean,\r\n    onConfirm:(e:any) => any,\r\n    onCancel?:(e:any) => any,\r\n    yesLabel?:string\r\n  ) => {\r\n     \r\n    this.dialogType     = type;\r\n    this.dialogTitle    = title;\r\n    this.dialogContent  = content;\r\n    this.dialogYesOnly  = yesOnly;\r\n    this.yesLabel       = yesLabel ? yesLabel : this.yesLabel;\r\n\r\n    this.dialogOnConfirm = (e:any) => {\r\n      this.dismissAlert();\r\n      onConfirm(e);\r\n    }\r\n    this.onCloseCallback = onCancel;\r\n    if (!yesOnly) {\r\n      \r\n      this.dialogOnCancel = (e:any) => {\r\n        this.dismissAlert();\r\n        if (onCancel) {\r\n          onCancel(e);\r\n        }\r\n      };\r\n    }\r\n    this.display();\r\n  }\r\n\r\n  display()\r\n  {\r\n    this.setState({ show: true });\r\n  } \r\n\r\n  render(): React.ReactNode {\r\n      \r\n    return (\r\n      this.state.show? \r\n      <Dialog \r\n        ref={this.ref}\r\n        title={this.dialogTitle}\r\n        yesOnly={this.dialogYesOnly}\r\n        onConfirm={this.dialogOnConfirm}\r\n        onCancel={this.dialogOnCancel}\r\n        onClose={this.dialogOnClose}\r\n        type={this.dialogType}\r\n        \r\n        yesLabel={this.yesLabel}\r\n      >\r\n        {this.dialogContent}\r\n      </Dialog> : null\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\r\nimport { Provider } from 'inversify-react';\r\nimport { container } from './inversify.config';\r\n\r\n// configure monaco editor\r\n// @ts-ignore \r\nglobal.self.MonacoEnvironment = {\r\n\tgetWorkerUrl: function (_moduleId: any, label: string) {\r\n\t\tconsole.log(\"get worker function: \", _moduleId, label);\r\n\t\tif (label === 'json') {\r\n\t\t\treturn './editorworkers/json.worker.bundle.js';\r\n\t\t}\r\n\t\tif (label === 'css' || label === 'scss' || label === 'less') {\r\n\t\t\treturn './editorworkers/css.worker.bundle.js';\r\n\t\t}\r\n\t\tif (label === 'html' || label === 'handlebars' || label === 'razor') {\r\n\t\t\treturn './editorworkers/html.worker.bundle.js';\r\n\t\t}\r\n\t\tif (label === 'typescript' || label === 'javascript') {\r\n\t\t\treturn './editorworkers/ts.worker.bundle.js';\r\n\t\t}\r\n\t\tif (label === 'yaml' || label === 'yml')\r\n\t\t{\r\n\t\t\treturn  './editorworkers/yaml.worker/js';\r\n\t\t}\r\n\t\treturn './editorworkers/editor.worker.bundle.js';\r\n\t}\r\n};\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider container={container} >\r\n    <HashRouter>\r\n\r\n      <App />\r\n    </HashRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}